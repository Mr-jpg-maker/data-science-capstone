{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "82bf8064-d1a7-447f-84b4-ebfacecb4732",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d0c0d496-5a65-43b9-b915-978f6404cdc2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8797d7d2-918f-493b-b353-a172467b8946",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'js'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[7], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mjs\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m fetch\n\u001b[0;32m      2\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mio\u001b[39;00m\n\u001b[0;32m      4\u001b[0m URL \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhttps://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data\u001b[39m\u001b[38;5;132;01m%20F\u001b[39;00m\u001b[38;5;124miles/historical_automobile_sales.csv\u001b[39m\u001b[38;5;124m\"\u001b[39m\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'js'"
     ]
    }
   ],
   "source": [
    "from js import fetch\n",
    "import io\n",
    "\n",
    "URL = \"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data%20Files/historical_automobile_sales.csv\"\n",
    "resp = await fetch(URL)\n",
    "text = io.BytesIO((await resp.arrayBuffer()).to_py())\n",
    "import pandas as pd\n",
    "df = pd.read_csv(text)\n",
    "print('Data downloaded and read into a dataframe!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1efcb635-c259-4a3c-9dad-fd29a5f7b978",
   "metadata": {},
   "outputs": [
    {
     "ename": "ConnectionError",
     "evalue": "HTTPSConnectionPool(host='cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud', port=443): Max retries exceeded with url: /IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data%20Files/historical_automobile_sales.csv (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000166A5A69040>: Failed to resolve 'cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud' ([Errno 11001] getaddrinfo failed)\"))",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mgaierror\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\urllib3\\connection.py:196\u001b[0m, in \u001b[0;36mHTTPConnection._new_conn\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    195\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 196\u001b[0m     sock \u001b[38;5;241m=\u001b[39m connection\u001b[38;5;241m.\u001b[39mcreate_connection(\n\u001b[0;32m    197\u001b[0m         (\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_dns_host, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mport),\n\u001b[0;32m    198\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtimeout,\n\u001b[0;32m    199\u001b[0m         source_address\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msource_address,\n\u001b[0;32m    200\u001b[0m         socket_options\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msocket_options,\n\u001b[0;32m    201\u001b[0m     )\n\u001b[0;32m    202\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m socket\u001b[38;5;241m.\u001b[39mgaierror \u001b[38;5;28;01mas\u001b[39;00m e:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\urllib3\\util\\connection.py:60\u001b[0m, in \u001b[0;36mcreate_connection\u001b[1;34m(address, timeout, source_address, socket_options)\u001b[0m\n\u001b[0;32m     58\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m LocationParseError(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mhost\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m, label empty or too long\u001b[39m\u001b[38;5;124m\"\u001b[39m) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m---> 60\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m res \u001b[38;5;129;01min\u001b[39;00m socket\u001b[38;5;241m.\u001b[39mgetaddrinfo(host, port, family, socket\u001b[38;5;241m.\u001b[39mSOCK_STREAM):\n\u001b[0;32m     61\u001b[0m     af, socktype, proto, canonname, sa \u001b[38;5;241m=\u001b[39m res\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\socket.py:964\u001b[0m, in \u001b[0;36mgetaddrinfo\u001b[1;34m(host, port, family, type, proto, flags)\u001b[0m\n\u001b[0;32m    963\u001b[0m addrlist \u001b[38;5;241m=\u001b[39m []\n\u001b[1;32m--> 964\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m res \u001b[38;5;129;01min\u001b[39;00m _socket\u001b[38;5;241m.\u001b[39mgetaddrinfo(host, port, family, \u001b[38;5;28mtype\u001b[39m, proto, flags):\n\u001b[0;32m    965\u001b[0m     af, socktype, proto, canonname, sa \u001b[38;5;241m=\u001b[39m res\n",
      "\u001b[1;31mgaierror\u001b[0m: [Errno 11001] getaddrinfo failed",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mNameResolutionError\u001b[0m                       Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\urllib3\\connectionpool.py:789\u001b[0m, in \u001b[0;36mHTTPConnectionPool.urlopen\u001b[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)\u001b[0m\n\u001b[0;32m    788\u001b[0m \u001b[38;5;66;03m# Make the request on the HTTPConnection object\u001b[39;00m\n\u001b[1;32m--> 789\u001b[0m response \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_make_request(\n\u001b[0;32m    790\u001b[0m     conn,\n\u001b[0;32m    791\u001b[0m     method,\n\u001b[0;32m    792\u001b[0m     url,\n\u001b[0;32m    793\u001b[0m     timeout\u001b[38;5;241m=\u001b[39mtimeout_obj,\n\u001b[0;32m    794\u001b[0m     body\u001b[38;5;241m=\u001b[39mbody,\n\u001b[0;32m    795\u001b[0m     headers\u001b[38;5;241m=\u001b[39mheaders,\n\u001b[0;32m    796\u001b[0m     chunked\u001b[38;5;241m=\u001b[39mchunked,\n\u001b[0;32m    797\u001b[0m     retries\u001b[38;5;241m=\u001b[39mretries,\n\u001b[0;32m    798\u001b[0m     response_conn\u001b[38;5;241m=\u001b[39mresponse_conn,\n\u001b[0;32m    799\u001b[0m     preload_content\u001b[38;5;241m=\u001b[39mpreload_content,\n\u001b[0;32m    800\u001b[0m     decode_content\u001b[38;5;241m=\u001b[39mdecode_content,\n\u001b[0;32m    801\u001b[0m     \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mresponse_kw,\n\u001b[0;32m    802\u001b[0m )\n\u001b[0;32m    804\u001b[0m \u001b[38;5;66;03m# Everything went great!\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\urllib3\\connectionpool.py:490\u001b[0m, in \u001b[0;36mHTTPConnectionPool._make_request\u001b[1;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)\u001b[0m\n\u001b[0;32m    489\u001b[0m         new_e \u001b[38;5;241m=\u001b[39m _wrap_proxy_error(new_e, conn\u001b[38;5;241m.\u001b[39mproxy\u001b[38;5;241m.\u001b[39mscheme)\n\u001b[1;32m--> 490\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m new_e\n\u001b[0;32m    492\u001b[0m \u001b[38;5;66;03m# conn.request() calls http.client.*.request, not the method in\u001b[39;00m\n\u001b[0;32m    493\u001b[0m \u001b[38;5;66;03m# urllib3.request. It also calls makefile (recv) on the socket.\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\urllib3\\connectionpool.py:466\u001b[0m, in \u001b[0;36mHTTPConnectionPool._make_request\u001b[1;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)\u001b[0m\n\u001b[0;32m    465\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 466\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_validate_conn(conn)\n\u001b[0;32m    467\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (SocketTimeout, BaseSSLError) \u001b[38;5;28;01mas\u001b[39;00m e:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\urllib3\\connectionpool.py:1095\u001b[0m, in \u001b[0;36mHTTPSConnectionPool._validate_conn\u001b[1;34m(self, conn)\u001b[0m\n\u001b[0;32m   1094\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m conn\u001b[38;5;241m.\u001b[39mis_closed:\n\u001b[1;32m-> 1095\u001b[0m     conn\u001b[38;5;241m.\u001b[39mconnect()\n\u001b[0;32m   1097\u001b[0m \u001b[38;5;66;03m# TODO revise this, see https://github.com/urllib3/urllib3/issues/2791\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\urllib3\\connection.py:615\u001b[0m, in \u001b[0;36mHTTPSConnection.connect\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    614\u001b[0m sock: socket\u001b[38;5;241m.\u001b[39msocket \u001b[38;5;241m|\u001b[39m ssl\u001b[38;5;241m.\u001b[39mSSLSocket\n\u001b[1;32m--> 615\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msock \u001b[38;5;241m=\u001b[39m sock \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_new_conn()\n\u001b[0;32m    616\u001b[0m server_hostname: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhost\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\urllib3\\connection.py:203\u001b[0m, in \u001b[0;36mHTTPConnection._new_conn\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    202\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m socket\u001b[38;5;241m.\u001b[39mgaierror \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m--> 203\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m NameResolutionError(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhost, \u001b[38;5;28mself\u001b[39m, e) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01me\u001b[39;00m\n\u001b[0;32m    204\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m SocketTimeout \u001b[38;5;28;01mas\u001b[39;00m e:\n",
      "\u001b[1;31mNameResolutionError\u001b[0m: <urllib3.connection.HTTPSConnection object at 0x00000166A5A69040>: Failed to resolve 'cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud' ([Errno 11001] getaddrinfo failed)",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mMaxRetryError\u001b[0m                             Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\requests\\adapters.py:589\u001b[0m, in \u001b[0;36mHTTPAdapter.send\u001b[1;34m(self, request, stream, timeout, verify, cert, proxies)\u001b[0m\n\u001b[0;32m    588\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 589\u001b[0m     resp \u001b[38;5;241m=\u001b[39m conn\u001b[38;5;241m.\u001b[39murlopen(\n\u001b[0;32m    590\u001b[0m         method\u001b[38;5;241m=\u001b[39mrequest\u001b[38;5;241m.\u001b[39mmethod,\n\u001b[0;32m    591\u001b[0m         url\u001b[38;5;241m=\u001b[39murl,\n\u001b[0;32m    592\u001b[0m         body\u001b[38;5;241m=\u001b[39mrequest\u001b[38;5;241m.\u001b[39mbody,\n\u001b[0;32m    593\u001b[0m         headers\u001b[38;5;241m=\u001b[39mrequest\u001b[38;5;241m.\u001b[39mheaders,\n\u001b[0;32m    594\u001b[0m         redirect\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[0;32m    595\u001b[0m         assert_same_host\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[0;32m    596\u001b[0m         preload_content\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[0;32m    597\u001b[0m         decode_content\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[0;32m    598\u001b[0m         retries\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmax_retries,\n\u001b[0;32m    599\u001b[0m         timeout\u001b[38;5;241m=\u001b[39mtimeout,\n\u001b[0;32m    600\u001b[0m         chunked\u001b[38;5;241m=\u001b[39mchunked,\n\u001b[0;32m    601\u001b[0m     )\n\u001b[0;32m    603\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (ProtocolError, \u001b[38;5;167;01mOSError\u001b[39;00m) \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\urllib3\\connectionpool.py:843\u001b[0m, in \u001b[0;36mHTTPConnectionPool.urlopen\u001b[1;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)\u001b[0m\n\u001b[0;32m    841\u001b[0m     new_e \u001b[38;5;241m=\u001b[39m ProtocolError(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mConnection aborted.\u001b[39m\u001b[38;5;124m\"\u001b[39m, new_e)\n\u001b[1;32m--> 843\u001b[0m retries \u001b[38;5;241m=\u001b[39m retries\u001b[38;5;241m.\u001b[39mincrement(\n\u001b[0;32m    844\u001b[0m     method, url, error\u001b[38;5;241m=\u001b[39mnew_e, _pool\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m, _stacktrace\u001b[38;5;241m=\u001b[39msys\u001b[38;5;241m.\u001b[39mexc_info()[\u001b[38;5;241m2\u001b[39m]\n\u001b[0;32m    845\u001b[0m )\n\u001b[0;32m    846\u001b[0m retries\u001b[38;5;241m.\u001b[39msleep()\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\urllib3\\util\\retry.py:519\u001b[0m, in \u001b[0;36mRetry.increment\u001b[1;34m(self, method, url, response, error, _pool, _stacktrace)\u001b[0m\n\u001b[0;32m    518\u001b[0m     reason \u001b[38;5;241m=\u001b[39m error \u001b[38;5;129;01mor\u001b[39;00m ResponseError(cause)\n\u001b[1;32m--> 519\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m MaxRetryError(_pool, url, reason) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mreason\u001b[39;00m  \u001b[38;5;66;03m# type: ignore[arg-type]\u001b[39;00m\n\u001b[0;32m    521\u001b[0m log\u001b[38;5;241m.\u001b[39mdebug(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mIncremented Retry for (url=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m): \u001b[39m\u001b[38;5;132;01m%r\u001b[39;00m\u001b[38;5;124m\"\u001b[39m, url, new_retry)\n",
      "\u001b[1;31mMaxRetryError\u001b[0m: HTTPSConnectionPool(host='cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud', port=443): Max retries exceeded with url: /IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data%20Files/historical_automobile_sales.csv (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000166A5A69040>: Failed to resolve 'cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud' ([Errno 11001] getaddrinfo failed)\"))",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[1;31mConnectionError\u001b[0m                           Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[9], line 7\u001b[0m\n\u001b[0;32m      4\u001b[0m url \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhttps://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data\u001b[39m\u001b[38;5;132;01m%20F\u001b[39;00m\u001b[38;5;124miles/historical_automobile_sales.csv\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Send an HTTP request to the URL\u001b[39;00m\n\u001b[1;32m----> 7\u001b[0m response \u001b[38;5;241m=\u001b[39m requests\u001b[38;5;241m.\u001b[39mget(url)\n\u001b[0;32m      9\u001b[0m \u001b[38;5;66;03m# Check if the request was successful\u001b[39;00m\n\u001b[0;32m     10\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m response\u001b[38;5;241m.\u001b[39mstatus_code \u001b[38;5;241m==\u001b[39m \u001b[38;5;241m200\u001b[39m:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\requests\\api.py:73\u001b[0m, in \u001b[0;36mget\u001b[1;34m(url, params, **kwargs)\u001b[0m\n\u001b[0;32m     62\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mget\u001b[39m(url, params\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m     63\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124mr\u001b[39m\u001b[38;5;124;03m\"\"\"Sends a GET request.\u001b[39;00m\n\u001b[0;32m     64\u001b[0m \n\u001b[0;32m     65\u001b[0m \u001b[38;5;124;03m    :param url: URL for the new :class:`Request` object.\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m     70\u001b[0m \u001b[38;5;124;03m    :rtype: requests.Response\u001b[39;00m\n\u001b[0;32m     71\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m---> 73\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m request(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mget\u001b[39m\u001b[38;5;124m\"\u001b[39m, url, params\u001b[38;5;241m=\u001b[39mparams, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\requests\\api.py:59\u001b[0m, in \u001b[0;36mrequest\u001b[1;34m(method, url, **kwargs)\u001b[0m\n\u001b[0;32m     55\u001b[0m \u001b[38;5;66;03m# By using the 'with' statement we are sure the session is closed, thus we\u001b[39;00m\n\u001b[0;32m     56\u001b[0m \u001b[38;5;66;03m# avoid leaving sockets open which can trigger a ResourceWarning in some\u001b[39;00m\n\u001b[0;32m     57\u001b[0m \u001b[38;5;66;03m# cases, and look like a memory leak in others.\u001b[39;00m\n\u001b[0;32m     58\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m sessions\u001b[38;5;241m.\u001b[39mSession() \u001b[38;5;28;01mas\u001b[39;00m session:\n\u001b[1;32m---> 59\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m session\u001b[38;5;241m.\u001b[39mrequest(method\u001b[38;5;241m=\u001b[39mmethod, url\u001b[38;5;241m=\u001b[39murl, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\requests\\sessions.py:589\u001b[0m, in \u001b[0;36mSession.request\u001b[1;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\u001b[0m\n\u001b[0;32m    584\u001b[0m send_kwargs \u001b[38;5;241m=\u001b[39m {\n\u001b[0;32m    585\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtimeout\u001b[39m\u001b[38;5;124m\"\u001b[39m: timeout,\n\u001b[0;32m    586\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mallow_redirects\u001b[39m\u001b[38;5;124m\"\u001b[39m: allow_redirects,\n\u001b[0;32m    587\u001b[0m }\n\u001b[0;32m    588\u001b[0m send_kwargs\u001b[38;5;241m.\u001b[39mupdate(settings)\n\u001b[1;32m--> 589\u001b[0m resp \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msend(prep, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39msend_kwargs)\n\u001b[0;32m    591\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m resp\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\requests\\sessions.py:703\u001b[0m, in \u001b[0;36mSession.send\u001b[1;34m(self, request, **kwargs)\u001b[0m\n\u001b[0;32m    700\u001b[0m start \u001b[38;5;241m=\u001b[39m preferred_clock()\n\u001b[0;32m    702\u001b[0m \u001b[38;5;66;03m# Send the request\u001b[39;00m\n\u001b[1;32m--> 703\u001b[0m r \u001b[38;5;241m=\u001b[39m adapter\u001b[38;5;241m.\u001b[39msend(request, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m    705\u001b[0m \u001b[38;5;66;03m# Total elapsed time of the request (approximately)\u001b[39;00m\n\u001b[0;32m    706\u001b[0m elapsed \u001b[38;5;241m=\u001b[39m preferred_clock() \u001b[38;5;241m-\u001b[39m start\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\requests\\adapters.py:622\u001b[0m, in \u001b[0;36mHTTPAdapter.send\u001b[1;34m(self, request, stream, timeout, verify, cert, proxies)\u001b[0m\n\u001b[0;32m    618\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(e\u001b[38;5;241m.\u001b[39mreason, _SSLError):\n\u001b[0;32m    619\u001b[0m         \u001b[38;5;66;03m# This branch is for urllib3 v1.22 and later.\u001b[39;00m\n\u001b[0;32m    620\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m SSLError(e, request\u001b[38;5;241m=\u001b[39mrequest)\n\u001b[1;32m--> 622\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mConnectionError\u001b[39;00m(e, request\u001b[38;5;241m=\u001b[39mrequest)\n\u001b[0;32m    624\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m ClosedPoolError \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[0;32m    625\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mConnectionError\u001b[39;00m(e, request\u001b[38;5;241m=\u001b[39mrequest)\n",
      "\u001b[1;31mConnectionError\u001b[0m: HTTPSConnectionPool(host='cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud', port=443): Max retries exceeded with url: /IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data%20Files/historical_automobile_sales.csv (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000166A5A69040>: Failed to resolve 'cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud' ([Errno 11001] getaddrinfo failed)\"))"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "\n",
    "# URL of the CSV file\n",
    "url = \"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data%20Files/historical_automobile_sales.csv\"\n",
    "\n",
    "# Send an HTTP request to the URL\n",
    "response = requests.get(url)\n",
    "\n",
    "# Check if the request was successful\n",
    "if response.status_code == 200:\n",
    "    with open('historical_automobile_sales.csv', 'wb') as file:\n",
    "        file.write(response.content)\n",
    "    print(\"File downloaded successfully.\")\n",
    "else:\n",
    "    print(f\"Failed to download file. Status code: {response.status_code}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "488e96ff-83ce-446c-8fb8-c48a22720c24",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid decimal literal (1529253210.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[11], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data%20Files/historical_automobile_sales.csv\u001b[0m\n\u001b[1;37m                                                                                                                              ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid decimal literal\n"
     ]
    }
   ],
   "source": [
    "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data%20Files/historical_automobile_sales.csv\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "de8fbf0a-51d4-416b-9917-eff66a935197",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'historical_automobile_sales.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[13], line 4\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;66;03m# Load the dataset (make sure the file path is correct)\u001b[39;00m\n\u001b[1;32m----> 4\u001b[0m data \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mhistorical_automobile_sales.csv\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[0;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m   1014\u001b[0m     dialect,\n\u001b[0;32m   1015\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[0;32m   1023\u001b[0m )\n\u001b[0;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m _read(filepath_or_buffer, kwds)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_make_engine(f, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mengine)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[0;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m get_handle(\n\u001b[0;32m   1881\u001b[0m     f,\n\u001b[0;32m   1882\u001b[0m     mode,\n\u001b[0;32m   1883\u001b[0m     encoding\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1884\u001b[0m     compression\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcompression\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1885\u001b[0m     memory_map\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmemory_map\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m),\n\u001b[0;32m   1886\u001b[0m     is_text\u001b[38;5;241m=\u001b[39mis_text,\n\u001b[0;32m   1887\u001b[0m     errors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding_errors\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstrict\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[0;32m   1888\u001b[0m     storage_options\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstorage_options\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1889\u001b[0m )\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m    876\u001b[0m             encoding\u001b[38;5;241m=\u001b[39mioargs\u001b[38;5;241m.\u001b[39mencoding,\n\u001b[0;32m    877\u001b[0m             errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'historical_automobile_sales.csv'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the dataset (make sure the file path is correct)\n",
    "data = pd.read_csv('historical_automobile_sales.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2a6dc66f-51a9-455e-97f6-d0efc0db62c3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pandas in c:\\users\\admin\\anaconda3\\lib\\site-packages (2.2.2)\n",
      "Requirement already satisfied: openpyxl in c:\\users\\admin\\anaconda3\\lib\\site-packages (3.1.2)\n",
      "Requirement already satisfied: numpy>=1.26.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from pandas) (1.26.4)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from pandas) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from pandas) (2024.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from pandas) (2023.3)\n",
      "Requirement already satisfied: et-xmlfile in c:\\users\\admin\\anaconda3\\lib\\site-packages (from openpyxl) (1.1.0)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install pandas openpyxl\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "768412ff-8a07-4006-9a64-4b3e7c575b18",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'historical_automobile_sales.xlsx'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[17], line 4\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;66;03m# Load the dataset\u001b[39;00m\n\u001b[1;32m----> 4\u001b[0m data \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_excel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mhistorical_automobile_sales.xlsx\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Display the first few rows of the dataframe to understand its structure\u001b[39;00m\n\u001b[0;32m      7\u001b[0m data\u001b[38;5;241m.\u001b[39mhead()\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:495\u001b[0m, in \u001b[0;36mread_excel\u001b[1;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)\u001b[0m\n\u001b[0;32m    493\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(io, ExcelFile):\n\u001b[0;32m    494\u001b[0m     should_close \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m--> 495\u001b[0m     io \u001b[38;5;241m=\u001b[39m ExcelFile(\n\u001b[0;32m    496\u001b[0m         io,\n\u001b[0;32m    497\u001b[0m         storage_options\u001b[38;5;241m=\u001b[39mstorage_options,\n\u001b[0;32m    498\u001b[0m         engine\u001b[38;5;241m=\u001b[39mengine,\n\u001b[0;32m    499\u001b[0m         engine_kwargs\u001b[38;5;241m=\u001b[39mengine_kwargs,\n\u001b[0;32m    500\u001b[0m     )\n\u001b[0;32m    501\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m engine \u001b[38;5;129;01mand\u001b[39;00m engine \u001b[38;5;241m!=\u001b[39m io\u001b[38;5;241m.\u001b[39mengine:\n\u001b[0;32m    502\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    503\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEngine should not be specified when passing \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    504\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man ExcelFile - ExcelFile already has the engine set\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    505\u001b[0m     )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1550\u001b[0m, in \u001b[0;36mExcelFile.__init__\u001b[1;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)\u001b[0m\n\u001b[0;32m   1548\u001b[0m     ext \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mxls\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1549\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 1550\u001b[0m     ext \u001b[38;5;241m=\u001b[39m inspect_excel_format(\n\u001b[0;32m   1551\u001b[0m         content_or_path\u001b[38;5;241m=\u001b[39mpath_or_buffer, storage_options\u001b[38;5;241m=\u001b[39mstorage_options\n\u001b[0;32m   1552\u001b[0m     )\n\u001b[0;32m   1553\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ext \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1554\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m   1555\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mExcel file format cannot be determined, you must specify \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1556\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man engine manually.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1557\u001b[0m         )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1402\u001b[0m, in \u001b[0;36minspect_excel_format\u001b[1;34m(content_or_path, storage_options)\u001b[0m\n\u001b[0;32m   1399\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(content_or_path, \u001b[38;5;28mbytes\u001b[39m):\n\u001b[0;32m   1400\u001b[0m     content_or_path \u001b[38;5;241m=\u001b[39m BytesIO(content_or_path)\n\u001b[1;32m-> 1402\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m get_handle(\n\u001b[0;32m   1403\u001b[0m     content_or_path, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m, storage_options\u001b[38;5;241m=\u001b[39mstorage_options, is_text\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[0;32m   1404\u001b[0m ) \u001b[38;5;28;01mas\u001b[39;00m handle:\n\u001b[0;32m   1405\u001b[0m     stream \u001b[38;5;241m=\u001b[39m handle\u001b[38;5;241m.\u001b[39mhandle\n\u001b[0;32m   1406\u001b[0m     stream\u001b[38;5;241m.\u001b[39mseek(\u001b[38;5;241m0\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:882\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m--> 882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n\u001b[0;32m    883\u001b[0m     handles\u001b[38;5;241m.\u001b[39mappend(handle)\n\u001b[0;32m    885\u001b[0m \u001b[38;5;66;03m# Convert BytesIO or file objects passed with an encoding\u001b[39;00m\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'historical_automobile_sales.xlsx'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the dataset\n",
    "data = pd.read_excel('historical_automobile_sales.xlsx')\n",
    "\n",
    "# Display the first few rows of the dataframe to understand its structure\n",
    "data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "238523b7-ab79-4782-9b13-25a965275a48",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'historical_automobile_sales.xlsx'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[19], line 4\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;66;03m# Load the dataset\u001b[39;00m\n\u001b[1;32m----> 4\u001b[0m data \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_excel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mhistorical_automobile_sales.xlsx\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Display the first few rows of the dataframe to understand its structure\u001b[39;00m\n\u001b[0;32m      7\u001b[0m data\u001b[38;5;241m.\u001b[39mhead()\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:495\u001b[0m, in \u001b[0;36mread_excel\u001b[1;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)\u001b[0m\n\u001b[0;32m    493\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(io, ExcelFile):\n\u001b[0;32m    494\u001b[0m     should_close \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m--> 495\u001b[0m     io \u001b[38;5;241m=\u001b[39m ExcelFile(\n\u001b[0;32m    496\u001b[0m         io,\n\u001b[0;32m    497\u001b[0m         storage_options\u001b[38;5;241m=\u001b[39mstorage_options,\n\u001b[0;32m    498\u001b[0m         engine\u001b[38;5;241m=\u001b[39mengine,\n\u001b[0;32m    499\u001b[0m         engine_kwargs\u001b[38;5;241m=\u001b[39mengine_kwargs,\n\u001b[0;32m    500\u001b[0m     )\n\u001b[0;32m    501\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m engine \u001b[38;5;129;01mand\u001b[39;00m engine \u001b[38;5;241m!=\u001b[39m io\u001b[38;5;241m.\u001b[39mengine:\n\u001b[0;32m    502\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    503\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEngine should not be specified when passing \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    504\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man ExcelFile - ExcelFile already has the engine set\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    505\u001b[0m     )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1550\u001b[0m, in \u001b[0;36mExcelFile.__init__\u001b[1;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)\u001b[0m\n\u001b[0;32m   1548\u001b[0m     ext \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mxls\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1549\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 1550\u001b[0m     ext \u001b[38;5;241m=\u001b[39m inspect_excel_format(\n\u001b[0;32m   1551\u001b[0m         content_or_path\u001b[38;5;241m=\u001b[39mpath_or_buffer, storage_options\u001b[38;5;241m=\u001b[39mstorage_options\n\u001b[0;32m   1552\u001b[0m     )\n\u001b[0;32m   1553\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ext \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1554\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m   1555\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mExcel file format cannot be determined, you must specify \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1556\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man engine manually.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1557\u001b[0m         )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1402\u001b[0m, in \u001b[0;36minspect_excel_format\u001b[1;34m(content_or_path, storage_options)\u001b[0m\n\u001b[0;32m   1399\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(content_or_path, \u001b[38;5;28mbytes\u001b[39m):\n\u001b[0;32m   1400\u001b[0m     content_or_path \u001b[38;5;241m=\u001b[39m BytesIO(content_or_path)\n\u001b[1;32m-> 1402\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m get_handle(\n\u001b[0;32m   1403\u001b[0m     content_or_path, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m, storage_options\u001b[38;5;241m=\u001b[39mstorage_options, is_text\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[0;32m   1404\u001b[0m ) \u001b[38;5;28;01mas\u001b[39;00m handle:\n\u001b[0;32m   1405\u001b[0m     stream \u001b[38;5;241m=\u001b[39m handle\u001b[38;5;241m.\u001b[39mhandle\n\u001b[0;32m   1406\u001b[0m     stream\u001b[38;5;241m.\u001b[39mseek(\u001b[38;5;241m0\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:882\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m--> 882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n\u001b[0;32m    883\u001b[0m     handles\u001b[38;5;241m.\u001b[39mappend(handle)\n\u001b[0;32m    885\u001b[0m \u001b[38;5;66;03m# Convert BytesIO or file objects passed with an encoding\u001b[39;00m\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'historical_automobile_sales.xlsx'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the dataset\n",
    "data = pd.read_excel('historical_automobile_sales.xlsx')\n",
    "\n",
    "# Display the first few rows of the dataframe to understand its structure\n",
    "data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "60bdee7c-9ff0-44ba-8829-512195529eaa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Admin\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "print(os.getcwd())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5308885b-9ee3-4854-bb99-ffb441361c4a",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'C:/Users/Admin/Downloads/historical_automobile_sales.xlsx'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[23], line 4\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;66;03m# Load the dataset\u001b[39;00m\n\u001b[1;32m----> 4\u001b[0m data \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_excel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mC:/Users/Admin/Downloads/historical_automobile_sales.xlsx\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Display the first few rows of the dataframe to understand its structure\u001b[39;00m\n\u001b[0;32m      7\u001b[0m data\u001b[38;5;241m.\u001b[39mhead()\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:495\u001b[0m, in \u001b[0;36mread_excel\u001b[1;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)\u001b[0m\n\u001b[0;32m    493\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(io, ExcelFile):\n\u001b[0;32m    494\u001b[0m     should_close \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m--> 495\u001b[0m     io \u001b[38;5;241m=\u001b[39m ExcelFile(\n\u001b[0;32m    496\u001b[0m         io,\n\u001b[0;32m    497\u001b[0m         storage_options\u001b[38;5;241m=\u001b[39mstorage_options,\n\u001b[0;32m    498\u001b[0m         engine\u001b[38;5;241m=\u001b[39mengine,\n\u001b[0;32m    499\u001b[0m         engine_kwargs\u001b[38;5;241m=\u001b[39mengine_kwargs,\n\u001b[0;32m    500\u001b[0m     )\n\u001b[0;32m    501\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m engine \u001b[38;5;129;01mand\u001b[39;00m engine \u001b[38;5;241m!=\u001b[39m io\u001b[38;5;241m.\u001b[39mengine:\n\u001b[0;32m    502\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    503\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEngine should not be specified when passing \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    504\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man ExcelFile - ExcelFile already has the engine set\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    505\u001b[0m     )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1550\u001b[0m, in \u001b[0;36mExcelFile.__init__\u001b[1;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)\u001b[0m\n\u001b[0;32m   1548\u001b[0m     ext \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mxls\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1549\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 1550\u001b[0m     ext \u001b[38;5;241m=\u001b[39m inspect_excel_format(\n\u001b[0;32m   1551\u001b[0m         content_or_path\u001b[38;5;241m=\u001b[39mpath_or_buffer, storage_options\u001b[38;5;241m=\u001b[39mstorage_options\n\u001b[0;32m   1552\u001b[0m     )\n\u001b[0;32m   1553\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ext \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1554\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m   1555\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mExcel file format cannot be determined, you must specify \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1556\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man engine manually.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1557\u001b[0m         )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1402\u001b[0m, in \u001b[0;36minspect_excel_format\u001b[1;34m(content_or_path, storage_options)\u001b[0m\n\u001b[0;32m   1399\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(content_or_path, \u001b[38;5;28mbytes\u001b[39m):\n\u001b[0;32m   1400\u001b[0m     content_or_path \u001b[38;5;241m=\u001b[39m BytesIO(content_or_path)\n\u001b[1;32m-> 1402\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m get_handle(\n\u001b[0;32m   1403\u001b[0m     content_or_path, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m, storage_options\u001b[38;5;241m=\u001b[39mstorage_options, is_text\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[0;32m   1404\u001b[0m ) \u001b[38;5;28;01mas\u001b[39;00m handle:\n\u001b[0;32m   1405\u001b[0m     stream \u001b[38;5;241m=\u001b[39m handle\u001b[38;5;241m.\u001b[39mhandle\n\u001b[0;32m   1406\u001b[0m     stream\u001b[38;5;241m.\u001b[39mseek(\u001b[38;5;241m0\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:882\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m--> 882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n\u001b[0;32m    883\u001b[0m     handles\u001b[38;5;241m.\u001b[39mappend(handle)\n\u001b[0;32m    885\u001b[0m \u001b[38;5;66;03m# Convert BytesIO or file objects passed with an encoding\u001b[39;00m\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'C:/Users/Admin/Downloads/historical_automobile_sales.xlsx'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the dataset\n",
    "data = pd.read_excel('C:/Users/Admin/Downloads/historical_automobile_sales.xlsx')\n",
    "\n",
    "# Display the first few rows of the dataframe to understand its structure\n",
    "data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "891ed540-4798-4786-9c5c-8e7a637f161b",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'C:/Users/Admin/Desktop/historical_automobile_sales.xlsx'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[25], line 4\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;66;03m# Load the dataset\u001b[39;00m\n\u001b[1;32m----> 4\u001b[0m data \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_excel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mC:/Users/Admin/Desktop/historical_automobile_sales.xlsx\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Display the first few rows of the dataframe to understand its structure\u001b[39;00m\n\u001b[0;32m      7\u001b[0m data\u001b[38;5;241m.\u001b[39mhead()\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:495\u001b[0m, in \u001b[0;36mread_excel\u001b[1;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)\u001b[0m\n\u001b[0;32m    493\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(io, ExcelFile):\n\u001b[0;32m    494\u001b[0m     should_close \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m--> 495\u001b[0m     io \u001b[38;5;241m=\u001b[39m ExcelFile(\n\u001b[0;32m    496\u001b[0m         io,\n\u001b[0;32m    497\u001b[0m         storage_options\u001b[38;5;241m=\u001b[39mstorage_options,\n\u001b[0;32m    498\u001b[0m         engine\u001b[38;5;241m=\u001b[39mengine,\n\u001b[0;32m    499\u001b[0m         engine_kwargs\u001b[38;5;241m=\u001b[39mengine_kwargs,\n\u001b[0;32m    500\u001b[0m     )\n\u001b[0;32m    501\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m engine \u001b[38;5;129;01mand\u001b[39;00m engine \u001b[38;5;241m!=\u001b[39m io\u001b[38;5;241m.\u001b[39mengine:\n\u001b[0;32m    502\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    503\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEngine should not be specified when passing \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    504\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man ExcelFile - ExcelFile already has the engine set\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    505\u001b[0m     )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1550\u001b[0m, in \u001b[0;36mExcelFile.__init__\u001b[1;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)\u001b[0m\n\u001b[0;32m   1548\u001b[0m     ext \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mxls\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1549\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 1550\u001b[0m     ext \u001b[38;5;241m=\u001b[39m inspect_excel_format(\n\u001b[0;32m   1551\u001b[0m         content_or_path\u001b[38;5;241m=\u001b[39mpath_or_buffer, storage_options\u001b[38;5;241m=\u001b[39mstorage_options\n\u001b[0;32m   1552\u001b[0m     )\n\u001b[0;32m   1553\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ext \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1554\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m   1555\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mExcel file format cannot be determined, you must specify \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1556\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man engine manually.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1557\u001b[0m         )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1402\u001b[0m, in \u001b[0;36minspect_excel_format\u001b[1;34m(content_or_path, storage_options)\u001b[0m\n\u001b[0;32m   1399\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(content_or_path, \u001b[38;5;28mbytes\u001b[39m):\n\u001b[0;32m   1400\u001b[0m     content_or_path \u001b[38;5;241m=\u001b[39m BytesIO(content_or_path)\n\u001b[1;32m-> 1402\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m get_handle(\n\u001b[0;32m   1403\u001b[0m     content_or_path, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m, storage_options\u001b[38;5;241m=\u001b[39mstorage_options, is_text\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[0;32m   1404\u001b[0m ) \u001b[38;5;28;01mas\u001b[39;00m handle:\n\u001b[0;32m   1405\u001b[0m     stream \u001b[38;5;241m=\u001b[39m handle\u001b[38;5;241m.\u001b[39mhandle\n\u001b[0;32m   1406\u001b[0m     stream\u001b[38;5;241m.\u001b[39mseek(\u001b[38;5;241m0\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:882\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m--> 882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n\u001b[0;32m    883\u001b[0m     handles\u001b[38;5;241m.\u001b[39mappend(handle)\n\u001b[0;32m    885\u001b[0m \u001b[38;5;66;03m# Convert BytesIO or file objects passed with an encoding\u001b[39;00m\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'C:/Users/Admin/Desktop/historical_automobile_sales.xlsx'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the dataset\n",
    "data = pd.read_excel('C:/Users/Admin/Desktop/historical_automobile_sales.xlsx')\n",
    "\n",
    "# Display the first few rows of the dataframe to understand its structure\n",
    "data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "852e8691-7854-49e2-ab6c-a5ac530c4d31",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'C:\\\\Users\\\\Admin\\\\Desktop\\\\historical_automobile_sales.xlsx'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[27], line 4\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;66;03m# Load the dataset using a raw string\u001b[39;00m\n\u001b[1;32m----> 4\u001b[0m data \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_excel(\u001b[38;5;124mr\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mC:\u001b[39m\u001b[38;5;124m\\\u001b[39m\u001b[38;5;124mUsers\u001b[39m\u001b[38;5;124m\\\u001b[39m\u001b[38;5;124mAdmin\u001b[39m\u001b[38;5;124m\\\u001b[39m\u001b[38;5;124mDesktop\u001b[39m\u001b[38;5;124m\\\u001b[39m\u001b[38;5;124mhistorical_automobile_sales.xlsx\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Display the first few rows of the dataframe to understand its structure\u001b[39;00m\n\u001b[0;32m      7\u001b[0m data\u001b[38;5;241m.\u001b[39mhead()\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:495\u001b[0m, in \u001b[0;36mread_excel\u001b[1;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)\u001b[0m\n\u001b[0;32m    493\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(io, ExcelFile):\n\u001b[0;32m    494\u001b[0m     should_close \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m--> 495\u001b[0m     io \u001b[38;5;241m=\u001b[39m ExcelFile(\n\u001b[0;32m    496\u001b[0m         io,\n\u001b[0;32m    497\u001b[0m         storage_options\u001b[38;5;241m=\u001b[39mstorage_options,\n\u001b[0;32m    498\u001b[0m         engine\u001b[38;5;241m=\u001b[39mengine,\n\u001b[0;32m    499\u001b[0m         engine_kwargs\u001b[38;5;241m=\u001b[39mengine_kwargs,\n\u001b[0;32m    500\u001b[0m     )\n\u001b[0;32m    501\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m engine \u001b[38;5;129;01mand\u001b[39;00m engine \u001b[38;5;241m!=\u001b[39m io\u001b[38;5;241m.\u001b[39mengine:\n\u001b[0;32m    502\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    503\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEngine should not be specified when passing \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    504\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man ExcelFile - ExcelFile already has the engine set\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    505\u001b[0m     )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1550\u001b[0m, in \u001b[0;36mExcelFile.__init__\u001b[1;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)\u001b[0m\n\u001b[0;32m   1548\u001b[0m     ext \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mxls\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1549\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 1550\u001b[0m     ext \u001b[38;5;241m=\u001b[39m inspect_excel_format(\n\u001b[0;32m   1551\u001b[0m         content_or_path\u001b[38;5;241m=\u001b[39mpath_or_buffer, storage_options\u001b[38;5;241m=\u001b[39mstorage_options\n\u001b[0;32m   1552\u001b[0m     )\n\u001b[0;32m   1553\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ext \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1554\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m   1555\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mExcel file format cannot be determined, you must specify \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1556\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man engine manually.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1557\u001b[0m         )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1402\u001b[0m, in \u001b[0;36minspect_excel_format\u001b[1;34m(content_or_path, storage_options)\u001b[0m\n\u001b[0;32m   1399\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(content_or_path, \u001b[38;5;28mbytes\u001b[39m):\n\u001b[0;32m   1400\u001b[0m     content_or_path \u001b[38;5;241m=\u001b[39m BytesIO(content_or_path)\n\u001b[1;32m-> 1402\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m get_handle(\n\u001b[0;32m   1403\u001b[0m     content_or_path, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m, storage_options\u001b[38;5;241m=\u001b[39mstorage_options, is_text\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[0;32m   1404\u001b[0m ) \u001b[38;5;28;01mas\u001b[39;00m handle:\n\u001b[0;32m   1405\u001b[0m     stream \u001b[38;5;241m=\u001b[39m handle\u001b[38;5;241m.\u001b[39mhandle\n\u001b[0;32m   1406\u001b[0m     stream\u001b[38;5;241m.\u001b[39mseek(\u001b[38;5;241m0\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:882\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m--> 882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n\u001b[0;32m    883\u001b[0m     handles\u001b[38;5;241m.\u001b[39mappend(handle)\n\u001b[0;32m    885\u001b[0m \u001b[38;5;66;03m# Convert BytesIO or file objects passed with an encoding\u001b[39;00m\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'C:\\\\Users\\\\Admin\\\\Desktop\\\\historical_automobile_sales.xlsx'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the dataset using a raw string\n",
    "data = pd.read_excel(r'C:\\Users\\Admin\\Desktop\\historical_automobile_sales.xlsx')\n",
    "\n",
    "# Display the first few rows of the dataframe to understand its structure\n",
    "data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "67497df5-0d9a-4340-afc6-edd790c21855",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['13 - 16. SECOND FLOOR RCP_31.08.2023.dwg', '172256013_4566274930068955_136773006406192159_n.jpg', 'Academic History.pdf', 'academic_transcript20240618-6-zskp4g.pdf', 'Alkharj BOQ.xlsx', 'Alkharj Project', 'Alkharj Security', 'ARCH Oct. 2023-Alkharj', 'AvigilonSystemDesignTool-2.110.2 (1).exe', 'BCR for Lift Lobby Location.pdf', 'Camera Configuration Tool-2.2.2.2.exe', 'CCTV', 'CCT_2.2.2.2', 'Coursera CM20YYAB0UVH.pdf', 'Coverage Plans', 'CSSD -Dental CSSD Final Selection- MEP Drawings and Data Sheets', 'CV.docx', 'Data trunk site instruction.xls', 'Del_Note.pdf', 'desktop.ini', 'Dis-Math.pdf', 'Discrete Mathematics.docx', 'Discrete Math_CS MATH_ Translation.pdf', 'DOC091623-09162023113544.pdf', 'download.htm', 'E-mail.url', 'Elementary Data Structures.pdf', 'Floors Mod', 'Google Drive.lnk', 'historical_automobile_sales.csv', 'HP-DesignJet-and-PageWide-XL-Installer.exe', 'IBAN Letter.pdf', 'IFC', 'image effect.png', 'Jamed DC Scope.xlsx', 'Kitchen Site latest CCTV.xls', 'Latest Link send to Contractor 07-07-24', 'MOHCCTV.pdf', 'New projrcts', 'SAHAFA CCTV', 'Screenshot.png', 'University of the Pepole', 'Win 10', '~$A Mail.docx', '~$arning Jornal.docx', '~$CV.docx', '~$itt_Assi.docx', '~$line Education Strategies ـJournal.docx', '~$te instructions for public address system.docx', '~$روع التخرج.docx', '~WRL0005.tmp', 'الاقامه من ابشر.png', 'منهج كل التخصصات.pdf']\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "\n",
    "# List files on Desktop\n",
    "files = os.listdir(r'C:\\Users\\Admin\\Desktop')\n",
    "print(files)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "82e65347-1d47-4c28-9453-01e9917aa28e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['13 - 16. SECOND FLOOR RCP_31.08.2023.dwg', '172256013_4566274930068955_136773006406192159_n.jpg', 'Academic History.pdf', 'academic_transcript20240618-6-zskp4g.pdf', 'Alkharj BOQ.xlsx', 'Alkharj Project', 'Alkharj Security', 'ARCH Oct. 2023-Alkharj', 'AvigilonSystemDesignTool-2.110.2 (1).exe', 'BCR for Lift Lobby Location.pdf', 'Camera Configuration Tool-2.2.2.2.exe', 'CCTV', 'CCT_2.2.2.2', 'Coursera CM20YYAB0UVH.pdf', 'Coverage Plans', 'CSSD -Dental CSSD Final Selection- MEP Drawings and Data Sheets', 'CV.docx', 'Data trunk site instruction.xls', 'Del_Note.pdf', 'desktop.ini', 'Dis-Math.pdf', 'Discrete Mathematics.docx', 'Discrete Math_CS MATH_ Translation.pdf', 'DOC091623-09162023113544.pdf', 'download.htm', 'E-mail.url', 'Elementary Data Structures.pdf', 'Floors Mod', 'Google Drive.lnk', 'historical_automobile_sales.csv', 'HP-DesignJet-and-PageWide-XL-Installer.exe', 'IBAN Letter.pdf', 'IFC', 'image effect.png', 'Jamed DC Scope.xlsx', 'Kitchen Site latest CCTV.xls', 'Latest Link send to Contractor 07-07-24', 'MOHCCTV.pdf', 'New projrcts', 'SAHAFA CCTV', 'Screenshot.png', 'University of the Pepole', 'Win 10', '~$A Mail.docx', '~$arning Jornal.docx', '~$CV.docx', '~$itt_Assi.docx', '~$line Education Strategies ـJournal.docx', '~$te instructions for public address system.docx', '~$روع التخرج.docx', '~WRL0005.tmp', 'الاقامه من ابشر.png', 'منهج كل التخصصات.pdf']\n"
     ]
    }
   ],
   "source": [
    "# List files on Desktop\n",
    "files = os.listdir(r'C:\\Users\\Admin\\Desktop')\n",
    "print(files)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "0a4a265d-844a-4c1a-8471-b66c8f8fa733",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'C:/Users/Admin/historical_automobile_sales.xlsx'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[33], line 7\u001b[0m\n\u001b[0;32m      4\u001b[0m file_path \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mC:/Users/Admin/historical_automobile_sales.xlsx\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Load the dataset\u001b[39;00m\n\u001b[1;32m----> 7\u001b[0m data \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_excel(file_path)\n\u001b[0;32m      9\u001b[0m \u001b[38;5;66;03m# Display the first few rows of the dataframe to understand its structure\u001b[39;00m\n\u001b[0;32m     10\u001b[0m data\u001b[38;5;241m.\u001b[39mhead()\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:495\u001b[0m, in \u001b[0;36mread_excel\u001b[1;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)\u001b[0m\n\u001b[0;32m    493\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(io, ExcelFile):\n\u001b[0;32m    494\u001b[0m     should_close \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m--> 495\u001b[0m     io \u001b[38;5;241m=\u001b[39m ExcelFile(\n\u001b[0;32m    496\u001b[0m         io,\n\u001b[0;32m    497\u001b[0m         storage_options\u001b[38;5;241m=\u001b[39mstorage_options,\n\u001b[0;32m    498\u001b[0m         engine\u001b[38;5;241m=\u001b[39mengine,\n\u001b[0;32m    499\u001b[0m         engine_kwargs\u001b[38;5;241m=\u001b[39mengine_kwargs,\n\u001b[0;32m    500\u001b[0m     )\n\u001b[0;32m    501\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m engine \u001b[38;5;129;01mand\u001b[39;00m engine \u001b[38;5;241m!=\u001b[39m io\u001b[38;5;241m.\u001b[39mengine:\n\u001b[0;32m    502\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    503\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEngine should not be specified when passing \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    504\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man ExcelFile - ExcelFile already has the engine set\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    505\u001b[0m     )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1550\u001b[0m, in \u001b[0;36mExcelFile.__init__\u001b[1;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)\u001b[0m\n\u001b[0;32m   1548\u001b[0m     ext \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mxls\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1549\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 1550\u001b[0m     ext \u001b[38;5;241m=\u001b[39m inspect_excel_format(\n\u001b[0;32m   1551\u001b[0m         content_or_path\u001b[38;5;241m=\u001b[39mpath_or_buffer, storage_options\u001b[38;5;241m=\u001b[39mstorage_options\n\u001b[0;32m   1552\u001b[0m     )\n\u001b[0;32m   1553\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ext \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1554\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m   1555\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mExcel file format cannot be determined, you must specify \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1556\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man engine manually.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1557\u001b[0m         )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1402\u001b[0m, in \u001b[0;36minspect_excel_format\u001b[1;34m(content_or_path, storage_options)\u001b[0m\n\u001b[0;32m   1399\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(content_or_path, \u001b[38;5;28mbytes\u001b[39m):\n\u001b[0;32m   1400\u001b[0m     content_or_path \u001b[38;5;241m=\u001b[39m BytesIO(content_or_path)\n\u001b[1;32m-> 1402\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m get_handle(\n\u001b[0;32m   1403\u001b[0m     content_or_path, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m, storage_options\u001b[38;5;241m=\u001b[39mstorage_options, is_text\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[0;32m   1404\u001b[0m ) \u001b[38;5;28;01mas\u001b[39;00m handle:\n\u001b[0;32m   1405\u001b[0m     stream \u001b[38;5;241m=\u001b[39m handle\u001b[38;5;241m.\u001b[39mhandle\n\u001b[0;32m   1406\u001b[0m     stream\u001b[38;5;241m.\u001b[39mseek(\u001b[38;5;241m0\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:882\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m--> 882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n\u001b[0;32m    883\u001b[0m     handles\u001b[38;5;241m.\u001b[39mappend(handle)\n\u001b[0;32m    885\u001b[0m \u001b[38;5;66;03m# Convert BytesIO or file objects passed with an encoding\u001b[39;00m\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'C:/Users/Admin/historical_automobile_sales.xlsx'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Path to the file\n",
    "file_path = 'C:/Users/Admin/historical_automobile_sales.xlsx'\n",
    "\n",
    "# Load the dataset\n",
    "data = pd.read_excel(file_path)\n",
    "\n",
    "# Display the first few rows of the dataframe to understand its structure\n",
    "data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "92e052a4-d7e2-4739-93cb-a429a31f7892",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>Recession</th>\n",
       "      <th>Consumer_Confidence</th>\n",
       "      <th>Seasonality_Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Advertising_Expenditure</th>\n",
       "      <th>Competition</th>\n",
       "      <th>GDP</th>\n",
       "      <th>Growth_Rate</th>\n",
       "      <th>unemployment_rate</th>\n",
       "      <th>Automobile_Sales</th>\n",
       "      <th>Vehicle_Type</th>\n",
       "      <th>City</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1/31/1980</td>\n",
       "      <td>1980</td>\n",
       "      <td>Jan</td>\n",
       "      <td>1</td>\n",
       "      <td>108.24</td>\n",
       "      <td>0.50</td>\n",
       "      <td>27483.571</td>\n",
       "      <td>1558</td>\n",
       "      <td>7</td>\n",
       "      <td>60.223</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>5.4</td>\n",
       "      <td>456.0</td>\n",
       "      <td>Supperminicar</td>\n",
       "      <td>Georgia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2/29/1980</td>\n",
       "      <td>1980</td>\n",
       "      <td>Feb</td>\n",
       "      <td>1</td>\n",
       "      <td>98.75</td>\n",
       "      <td>0.75</td>\n",
       "      <td>24308.678</td>\n",
       "      <td>3048</td>\n",
       "      <td>4</td>\n",
       "      <td>45.986</td>\n",
       "      <td>-0.309594</td>\n",
       "      <td>4.8</td>\n",
       "      <td>555.9</td>\n",
       "      <td>Supperminicar</td>\n",
       "      <td>New York</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3/31/1980</td>\n",
       "      <td>1980</td>\n",
       "      <td>Mar</td>\n",
       "      <td>1</td>\n",
       "      <td>107.48</td>\n",
       "      <td>0.20</td>\n",
       "      <td>28238.443</td>\n",
       "      <td>3137</td>\n",
       "      <td>3</td>\n",
       "      <td>35.141</td>\n",
       "      <td>-0.308614</td>\n",
       "      <td>3.4</td>\n",
       "      <td>620.0</td>\n",
       "      <td>Mediumfamilycar</td>\n",
       "      <td>New York</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4/30/1980</td>\n",
       "      <td>1980</td>\n",
       "      <td>Apr</td>\n",
       "      <td>1</td>\n",
       "      <td>115.01</td>\n",
       "      <td>1.00</td>\n",
       "      <td>32615.149</td>\n",
       "      <td>1653</td>\n",
       "      <td>7</td>\n",
       "      <td>45.673</td>\n",
       "      <td>0.230596</td>\n",
       "      <td>4.2</td>\n",
       "      <td>702.8</td>\n",
       "      <td>Supperminicar</td>\n",
       "      <td>Illinois</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5/31/1980</td>\n",
       "      <td>1980</td>\n",
       "      <td>May</td>\n",
       "      <td>1</td>\n",
       "      <td>98.72</td>\n",
       "      <td>0.20</td>\n",
       "      <td>23829.233</td>\n",
       "      <td>1319</td>\n",
       "      <td>4</td>\n",
       "      <td>52.997</td>\n",
       "      <td>0.138197</td>\n",
       "      <td>5.3</td>\n",
       "      <td>770.4</td>\n",
       "      <td>Smallfamiliycar</td>\n",
       "      <td>California</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Date  Year Month  Recession  Consumer_Confidence  Seasonality_Weight  \\\n",
       "0  1/31/1980  1980   Jan          1               108.24                0.50   \n",
       "1  2/29/1980  1980   Feb          1                98.75                0.75   \n",
       "2  3/31/1980  1980   Mar          1               107.48                0.20   \n",
       "3  4/30/1980  1980   Apr          1               115.01                1.00   \n",
       "4  5/31/1980  1980   May          1                98.72                0.20   \n",
       "\n",
       "       Price  Advertising_Expenditure  Competition     GDP  Growth_Rate  \\\n",
       "0  27483.571                     1558            7  60.223     0.010000   \n",
       "1  24308.678                     3048            4  45.986    -0.309594   \n",
       "2  28238.443                     3137            3  35.141    -0.308614   \n",
       "3  32615.149                     1653            7  45.673     0.230596   \n",
       "4  23829.233                     1319            4  52.997     0.138197   \n",
       "\n",
       "   unemployment_rate  Automobile_Sales     Vehicle_Type        City  \n",
       "0                5.4             456.0    Supperminicar     Georgia  \n",
       "1                4.8             555.9    Supperminicar    New York  \n",
       "2                3.4             620.0  Mediumfamilycar    New York  \n",
       "3                4.2             702.8    Supperminicar    Illinois  \n",
       "4                5.3             770.4  Smallfamiliycar  California  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Path to the file\n",
    "file_path = r'C:\\Users\\Admin\\historical_automobile_sales.csv'\n",
    "\n",
    "# Load the dataset\n",
    "data = pd.read_csv(file_path)\n",
    "\n",
    "# Display the first few rows of the dataframe to understand its structure\n",
    "data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "f12c7ff2-6435-482e-94f5-e3981aa979ff",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        Date  Year Month  Recession  Consumer_Confidence  Seasonality_Weight  \\\n",
      "0  1/31/1980  1980   Jan          1               108.24                0.50   \n",
      "1  2/29/1980  1980   Feb          1                98.75                0.75   \n",
      "2  3/31/1980  1980   Mar          1               107.48                0.20   \n",
      "3  4/30/1980  1980   Apr          1               115.01                1.00   \n",
      "4  5/31/1980  1980   May          1                98.72                0.20   \n",
      "\n",
      "       Price  Advertising_Expenditure  Competition     GDP  Growth_Rate  \\\n",
      "0  27483.571                     1558            7  60.223     0.010000   \n",
      "1  24308.678                     3048            4  45.986    -0.309594   \n",
      "2  28238.443                     3137            3  35.141    -0.308614   \n",
      "3  32615.149                     1653            7  45.673     0.230596   \n",
      "4  23829.233                     1319            4  52.997     0.138197   \n",
      "\n",
      "   unemployment_rate  Automobile_Sales     Vehicle_Type        City  \n",
      "0                5.4             456.0    Supperminicar     Georgia  \n",
      "1                4.8             555.9    Supperminicar    New York  \n",
      "2                3.4             620.0  Mediumfamilycar    New York  \n",
      "3                4.2             702.8    Supperminicar    Illinois  \n",
      "4                5.3             770.4  Smallfamiliycar  California  \n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 528 entries, 0 to 527\n",
      "Data columns (total 15 columns):\n",
      " #   Column                   Non-Null Count  Dtype  \n",
      "---  ------                   --------------  -----  \n",
      " 0   Date                     528 non-null    object \n",
      " 1   Year                     528 non-null    int64  \n",
      " 2   Month                    528 non-null    object \n",
      " 3   Recession                528 non-null    int64  \n",
      " 4   Consumer_Confidence      528 non-null    float64\n",
      " 5   Seasonality_Weight       528 non-null    float64\n",
      " 6   Price                    528 non-null    float64\n",
      " 7   Advertising_Expenditure  528 non-null    int64  \n",
      " 8   Competition              528 non-null    int64  \n",
      " 9   GDP                      528 non-null    float64\n",
      " 10  Growth_Rate              528 non-null    float64\n",
      " 11  unemployment_rate        528 non-null    float64\n",
      " 12  Automobile_Sales         528 non-null    float64\n",
      " 13  Vehicle_Type             528 non-null    object \n",
      " 14  City                     528 non-null    object \n",
      "dtypes: float64(7), int64(4), object(4)\n",
      "memory usage: 62.0+ KB\n",
      "None\n",
      "              Year   Recession  Consumer_Confidence  Seasonality_Weight  \\\n",
      "count   528.000000  528.000000           528.000000          528.000000   \n",
      "mean   2001.500000    0.214015           101.140170            0.575795   \n",
      "std      12.710467    0.410526            10.601154            0.454477   \n",
      "min    1980.000000    0.000000            73.900000            0.000000   \n",
      "25%    1990.750000    0.000000            94.035000            0.250000   \n",
      "50%    2001.500000    0.000000           100.740000            0.500000   \n",
      "75%    2012.250000    0.000000           108.240000            0.750000   \n",
      "max    2023.000000    1.000000           131.670000            1.500000   \n",
      "\n",
      "              Price  Advertising_Expenditure  Competition         GDP  \\\n",
      "count    528.000000               528.000000   528.000000  528.000000   \n",
      "mean   24964.991956              3067.456439     6.064394   40.073903   \n",
      "std     4888.073433              1139.564637     1.968350   16.249714   \n",
      "min     8793.663000              1009.000000     3.000000   12.508000   \n",
      "25%    21453.300500              2083.500000     4.000000   27.237500   \n",
      "50%    25038.691500              3072.000000     6.000000   39.214500   \n",
      "75%    28131.684750              4067.250000     8.000000   53.506500   \n",
      "max    44263.657000              4983.000000     9.000000   70.374000   \n",
      "\n",
      "       Growth_Rate  unemployment_rate  Automobile_Sales  \n",
      "count   528.000000         528.000000        528.000000  \n",
      "mean     -0.242001           2.453977       2352.718068  \n",
      "std       0.861268           1.119019       1645.321284  \n",
      "min      -4.227601           1.000000        102.000000  \n",
      "25%      -0.574049           1.600000        793.950000  \n",
      "50%      -0.013162           2.300000       2182.600000  \n",
      "75%       0.388932           2.900000       3614.800000  \n",
      "max       0.815074           6.000000      21147.000000  \n",
      "Date                       0\n",
      "Year                       0\n",
      "Month                      0\n",
      "Recession                  0\n",
      "Consumer_Confidence        0\n",
      "Seasonality_Weight         0\n",
      "Price                      0\n",
      "Advertising_Expenditure    0\n",
      "Competition                0\n",
      "GDP                        0\n",
      "Growth_Rate                0\n",
      "unemployment_rate          0\n",
      "Automobile_Sales           0\n",
      "Vehicle_Type               0\n",
      "City                       0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the dataset\n",
    "file_path = 'C:/Users/Admin/historical_automobile_sales.csv'\n",
    "data = pd.read_csv(file_path)\n",
    "\n",
    "# Display the first few rows of the dataset\n",
    "print(data.head())\n",
    "\n",
    "# Check the data types and missing values\n",
    "print(data.info())\n",
    "\n",
    "# Summary statistics to get an overview of the data\n",
    "print(data.describe())\n",
    "\n",
    "# Check for missing values\n",
    "print(data.isnull().sum())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "ffbb1333-da41-4d45-b808-821e95daa945",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Date'] = pd.to_datetime(data['Date'], format='%m/%d/%Y')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "ded2f7ed-b3ea-43f3-9f9d-9a35b6bdb68b",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Year'] = data['Year'].astype(int)\n",
    "data['Recession'] = data['Recession'].astype(int)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "252b45c9-4996-4aa2-a397-5b70ac3967e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.get_dummies(data, columns=['Vehicle_Type', 'City'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "1eddfa9c-99bb-4351-a8c5-e96bd7462b7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Histogram of Automobile Sales\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.histplot(data['Automobile_Sales'], bins=30)\n",
    "plt.title('Distribution of Automobile Sales')\n",
    "plt.xlabel('Automobile Sales')\n",
    "plt.ylabel('Frequency')\n",
    "plt.show()\n",
    "\n",
    "# Scatter plot between Price and Automobile Sales\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.scatterplot(x='Price', y='Automobile_Sales', data=data)\n",
    "plt.title('Price vs. Automobile Sales')\n",
    "plt.xlabel('Price')\n",
    "plt.ylabel('Automobile Sales')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "7b1a241c-9f76-4435-99ab-5d1cf694be7d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                      Date         Year   Recession  Consumer_Confidence  \\\n",
      "count                  528   528.000000  528.000000           528.000000   \n",
      "mean   2002-01-14 09:30:00  2001.500000    0.214015           101.140170   \n",
      "min    1980-01-31 00:00:00  1980.000000    0.000000            73.900000   \n",
      "25%    1991-01-23 06:00:00  1990.750000    0.000000            94.035000   \n",
      "50%    2002-01-15 12:00:00  2001.500000    0.000000           100.740000   \n",
      "75%    2013-01-07 18:00:00  2012.250000    0.000000           108.240000   \n",
      "max    2023-12-31 00:00:00  2023.000000    1.000000           131.670000   \n",
      "std                    NaN    12.710467    0.410526            10.601154   \n",
      "\n",
      "       Seasonality_Weight         Price  Advertising_Expenditure  Competition  \\\n",
      "count          528.000000    528.000000               528.000000   528.000000   \n",
      "mean             0.575795  24964.991956              3067.456439     6.064394   \n",
      "min              0.000000   8793.663000              1009.000000     3.000000   \n",
      "25%              0.250000  21453.300500              2083.500000     4.000000   \n",
      "50%              0.500000  25038.691500              3072.000000     6.000000   \n",
      "75%              0.750000  28131.684750              4067.250000     8.000000   \n",
      "max              1.500000  44263.657000              4983.000000     9.000000   \n",
      "std              0.454477   4888.073433              1139.564637     1.968350   \n",
      "\n",
      "              GDP  Growth_Rate  unemployment_rate  Automobile_Sales  \n",
      "count  528.000000   528.000000         528.000000        528.000000  \n",
      "mean    40.073903    -0.242001           2.453977       2352.718068  \n",
      "min     12.508000    -4.227601           1.000000        102.000000  \n",
      "25%     27.237500    -0.574049           1.600000        793.950000  \n",
      "50%     39.214500    -0.013162           2.300000       2182.600000  \n",
      "75%     53.506500     0.388932           2.900000       3614.800000  \n",
      "max     70.374000     0.815074           6.000000      21147.000000  \n",
      "std     16.249714     0.861268           1.119019       1645.321284  \n"
     ]
    }
   ],
   "source": [
    "print(data.describe())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "22efea82-48d3-4cc5-99c8-ed2100df3551",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# Define features and target variable\n",
    "X = data.drop(['Automobile_Sales'], axis=1)  # Features\n",
    "y = data['Automobile_Sales']  # Target\n",
    "\n",
    "# Split the data\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "14175163-b892-40fa-adea-089301959b50",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "Cannot cast DatetimeArray to dtype float64",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[51], line 4\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01msklearn\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mpreprocessing\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m StandardScaler\n\u001b[0;32m      3\u001b[0m scaler \u001b[38;5;241m=\u001b[39m StandardScaler()\n\u001b[1;32m----> 4\u001b[0m X_train_scaled \u001b[38;5;241m=\u001b[39m scaler\u001b[38;5;241m.\u001b[39mfit_transform(X_train)\n\u001b[0;32m      5\u001b[0m X_test_scaled \u001b[38;5;241m=\u001b[39m scaler\u001b[38;5;241m.\u001b[39mtransform(X_test)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\sklearn\\utils\\_set_output.py:295\u001b[0m, in \u001b[0;36m_wrap_method_output.<locals>.wrapped\u001b[1;34m(self, X, *args, **kwargs)\u001b[0m\n\u001b[0;32m    293\u001b[0m \u001b[38;5;129m@wraps\u001b[39m(f)\n\u001b[0;32m    294\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mwrapped\u001b[39m(\u001b[38;5;28mself\u001b[39m, X, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[1;32m--> 295\u001b[0m     data_to_wrap \u001b[38;5;241m=\u001b[39m f(\u001b[38;5;28mself\u001b[39m, X, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m    296\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(data_to_wrap, \u001b[38;5;28mtuple\u001b[39m):\n\u001b[0;32m    297\u001b[0m         \u001b[38;5;66;03m# only wrap the first output for cross decomposition\u001b[39;00m\n\u001b[0;32m    298\u001b[0m         return_tuple \u001b[38;5;241m=\u001b[39m (\n\u001b[0;32m    299\u001b[0m             _wrap_data_with_container(method, data_to_wrap[\u001b[38;5;241m0\u001b[39m], X, \u001b[38;5;28mself\u001b[39m),\n\u001b[0;32m    300\u001b[0m             \u001b[38;5;241m*\u001b[39mdata_to_wrap[\u001b[38;5;241m1\u001b[39m:],\n\u001b[0;32m    301\u001b[0m         )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\sklearn\\base.py:1098\u001b[0m, in \u001b[0;36mTransformerMixin.fit_transform\u001b[1;34m(self, X, y, **fit_params)\u001b[0m\n\u001b[0;32m   1083\u001b[0m         warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[0;32m   1084\u001b[0m             (\n\u001b[0;32m   1085\u001b[0m                 \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mThis object (\u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__class__\u001b[39m\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m) has a `transform`\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1093\u001b[0m             \u001b[38;5;167;01mUserWarning\u001b[39;00m,\n\u001b[0;32m   1094\u001b[0m         )\n\u001b[0;32m   1096\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m y \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1097\u001b[0m     \u001b[38;5;66;03m# fit method of arity 1 (unsupervised transformation)\u001b[39;00m\n\u001b[1;32m-> 1098\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfit(X, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mfit_params)\u001b[38;5;241m.\u001b[39mtransform(X)\n\u001b[0;32m   1099\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m   1100\u001b[0m     \u001b[38;5;66;03m# fit method of arity 2 (supervised transformation)\u001b[39;00m\n\u001b[0;32m   1101\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfit(X, y, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mfit_params)\u001b[38;5;241m.\u001b[39mtransform(X)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\sklearn\\preprocessing\\_data.py:876\u001b[0m, in \u001b[0;36mStandardScaler.fit\u001b[1;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[0;32m    874\u001b[0m \u001b[38;5;66;03m# Reset internal state before fitting\u001b[39;00m\n\u001b[0;32m    875\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_reset()\n\u001b[1;32m--> 876\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mpartial_fit(X, y, sample_weight)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\sklearn\\base.py:1474\u001b[0m, in \u001b[0;36m_fit_context.<locals>.decorator.<locals>.wrapper\u001b[1;34m(estimator, *args, **kwargs)\u001b[0m\n\u001b[0;32m   1467\u001b[0m     estimator\u001b[38;5;241m.\u001b[39m_validate_params()\n\u001b[0;32m   1469\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m config_context(\n\u001b[0;32m   1470\u001b[0m     skip_parameter_validation\u001b[38;5;241m=\u001b[39m(\n\u001b[0;32m   1471\u001b[0m         prefer_skip_nested_validation \u001b[38;5;129;01mor\u001b[39;00m global_skip_validation\n\u001b[0;32m   1472\u001b[0m     )\n\u001b[0;32m   1473\u001b[0m ):\n\u001b[1;32m-> 1474\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m fit_method(estimator, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\sklearn\\preprocessing\\_data.py:912\u001b[0m, in \u001b[0;36mStandardScaler.partial_fit\u001b[1;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[0;32m    880\u001b[0m \u001b[38;5;250m\u001b[39m\u001b[38;5;124;03m\"\"\"Online computation of mean and std on X for later scaling.\u001b[39;00m\n\u001b[0;32m    881\u001b[0m \n\u001b[0;32m    882\u001b[0m \u001b[38;5;124;03mAll of X is processed as a single batch. This is intended for cases\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    909\u001b[0m \u001b[38;5;124;03m    Fitted scaler.\u001b[39;00m\n\u001b[0;32m    910\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[0;32m    911\u001b[0m first_call \u001b[38;5;241m=\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mhasattr\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mn_samples_seen_\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m--> 912\u001b[0m X \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_validate_data(\n\u001b[0;32m    913\u001b[0m     X,\n\u001b[0;32m    914\u001b[0m     accept_sparse\u001b[38;5;241m=\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcsr\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcsc\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[0;32m    915\u001b[0m     dtype\u001b[38;5;241m=\u001b[39mFLOAT_DTYPES,\n\u001b[0;32m    916\u001b[0m     force_all_finite\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mallow-nan\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    917\u001b[0m     reset\u001b[38;5;241m=\u001b[39mfirst_call,\n\u001b[0;32m    918\u001b[0m )\n\u001b[0;32m    919\u001b[0m n_features \u001b[38;5;241m=\u001b[39m X\u001b[38;5;241m.\u001b[39mshape[\u001b[38;5;241m1\u001b[39m]\n\u001b[0;32m    921\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m sample_weight \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\sklearn\\base.py:633\u001b[0m, in \u001b[0;36mBaseEstimator._validate_data\u001b[1;34m(self, X, y, reset, validate_separately, cast_to_ndarray, **check_params)\u001b[0m\n\u001b[0;32m    631\u001b[0m         out \u001b[38;5;241m=\u001b[39m X, y\n\u001b[0;32m    632\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m no_val_X \u001b[38;5;129;01mand\u001b[39;00m no_val_y:\n\u001b[1;32m--> 633\u001b[0m     out \u001b[38;5;241m=\u001b[39m check_array(X, input_name\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mX\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mcheck_params)\n\u001b[0;32m    634\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m no_val_X \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m no_val_y:\n\u001b[0;32m    635\u001b[0m     out \u001b[38;5;241m=\u001b[39m _check_y(y, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mcheck_params)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\sklearn\\utils\\validation.py:921\u001b[0m, in \u001b[0;36mcheck_array\u001b[1;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)\u001b[0m\n\u001b[0;32m    916\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m pandas_requires_conversion:\n\u001b[0;32m    917\u001b[0m     \u001b[38;5;66;03m# pandas dataframe requires conversion earlier to handle extension dtypes with\u001b[39;00m\n\u001b[0;32m    918\u001b[0m     \u001b[38;5;66;03m# nans\u001b[39;00m\n\u001b[0;32m    919\u001b[0m     \u001b[38;5;66;03m# Use the original dtype for conversion if dtype is None\u001b[39;00m\n\u001b[0;32m    920\u001b[0m     new_dtype \u001b[38;5;241m=\u001b[39m dtype_orig \u001b[38;5;28;01mif\u001b[39;00m dtype \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;28;01melse\u001b[39;00m dtype\n\u001b[1;32m--> 921\u001b[0m     array \u001b[38;5;241m=\u001b[39m array\u001b[38;5;241m.\u001b[39mastype(new_dtype)\n\u001b[0;32m    922\u001b[0m     \u001b[38;5;66;03m# Since we converted here, we do not need to convert again later\u001b[39;00m\n\u001b[0;32m    923\u001b[0m     dtype \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\generic.py:6643\u001b[0m, in \u001b[0;36mNDFrame.astype\u001b[1;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[0;32m   6637\u001b[0m     results \u001b[38;5;241m=\u001b[39m [\n\u001b[0;32m   6638\u001b[0m         ser\u001b[38;5;241m.\u001b[39mastype(dtype, copy\u001b[38;5;241m=\u001b[39mcopy, errors\u001b[38;5;241m=\u001b[39merrors) \u001b[38;5;28;01mfor\u001b[39;00m _, ser \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mitems()\n\u001b[0;32m   6639\u001b[0m     ]\n\u001b[0;32m   6641\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m   6642\u001b[0m     \u001b[38;5;66;03m# else, only a single dtype is given\u001b[39;00m\n\u001b[1;32m-> 6643\u001b[0m     new_data \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_mgr\u001b[38;5;241m.\u001b[39mastype(dtype\u001b[38;5;241m=\u001b[39mdtype, copy\u001b[38;5;241m=\u001b[39mcopy, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[0;32m   6644\u001b[0m     res \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_constructor_from_mgr(new_data, axes\u001b[38;5;241m=\u001b[39mnew_data\u001b[38;5;241m.\u001b[39maxes)\n\u001b[0;32m   6645\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m res\u001b[38;5;241m.\u001b[39m__finalize__(\u001b[38;5;28mself\u001b[39m, method\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mastype\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\internals\\managers.py:430\u001b[0m, in \u001b[0;36mBaseBlockManager.astype\u001b[1;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[0;32m    427\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m using_copy_on_write():\n\u001b[0;32m    428\u001b[0m     copy \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[1;32m--> 430\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mapply(\n\u001b[0;32m    431\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mastype\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    432\u001b[0m     dtype\u001b[38;5;241m=\u001b[39mdtype,\n\u001b[0;32m    433\u001b[0m     copy\u001b[38;5;241m=\u001b[39mcopy,\n\u001b[0;32m    434\u001b[0m     errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m    435\u001b[0m     using_cow\u001b[38;5;241m=\u001b[39musing_copy_on_write(),\n\u001b[0;32m    436\u001b[0m )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\internals\\managers.py:363\u001b[0m, in \u001b[0;36mBaseBlockManager.apply\u001b[1;34m(self, f, align_keys, **kwargs)\u001b[0m\n\u001b[0;32m    361\u001b[0m         applied \u001b[38;5;241m=\u001b[39m b\u001b[38;5;241m.\u001b[39mapply(f, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m    362\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 363\u001b[0m         applied \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mgetattr\u001b[39m(b, f)(\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m    364\u001b[0m     result_blocks \u001b[38;5;241m=\u001b[39m extend_blocks(applied, result_blocks)\n\u001b[0;32m    366\u001b[0m out \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mtype\u001b[39m(\u001b[38;5;28mself\u001b[39m)\u001b[38;5;241m.\u001b[39mfrom_blocks(result_blocks, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39maxes)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\internals\\blocks.py:758\u001b[0m, in \u001b[0;36mBlock.astype\u001b[1;34m(self, dtype, copy, errors, using_cow, squeeze)\u001b[0m\n\u001b[0;32m    755\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mCan not squeeze with more than one column.\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m    756\u001b[0m     values \u001b[38;5;241m=\u001b[39m values[\u001b[38;5;241m0\u001b[39m, :]  \u001b[38;5;66;03m# type: ignore[call-overload]\u001b[39;00m\n\u001b[1;32m--> 758\u001b[0m new_values \u001b[38;5;241m=\u001b[39m astype_array_safe(values, dtype, copy\u001b[38;5;241m=\u001b[39mcopy, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[0;32m    760\u001b[0m new_values \u001b[38;5;241m=\u001b[39m maybe_coerce_values(new_values)\n\u001b[0;32m    762\u001b[0m refs \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\dtypes\\astype.py:237\u001b[0m, in \u001b[0;36mastype_array_safe\u001b[1;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[0;32m    234\u001b[0m     dtype \u001b[38;5;241m=\u001b[39m dtype\u001b[38;5;241m.\u001b[39mnumpy_dtype\n\u001b[0;32m    236\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m--> 237\u001b[0m     new_values \u001b[38;5;241m=\u001b[39m astype_array(values, dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n\u001b[0;32m    238\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (\u001b[38;5;167;01mValueError\u001b[39;00m, \u001b[38;5;167;01mTypeError\u001b[39;00m):\n\u001b[0;32m    239\u001b[0m     \u001b[38;5;66;03m# e.g. _astype_nansafe can fail on object-dtype of strings\u001b[39;00m\n\u001b[0;32m    240\u001b[0m     \u001b[38;5;66;03m#  trying to convert to float\u001b[39;00m\n\u001b[0;32m    241\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\dtypes\\astype.py:179\u001b[0m, in \u001b[0;36mastype_array\u001b[1;34m(values, dtype, copy)\u001b[0m\n\u001b[0;32m    175\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m values\n\u001b[0;32m    177\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(values, np\u001b[38;5;241m.\u001b[39mndarray):\n\u001b[0;32m    178\u001b[0m     \u001b[38;5;66;03m# i.e. ExtensionArray\u001b[39;00m\n\u001b[1;32m--> 179\u001b[0m     values \u001b[38;5;241m=\u001b[39m values\u001b[38;5;241m.\u001b[39mastype(dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n\u001b[0;32m    181\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    182\u001b[0m     values \u001b[38;5;241m=\u001b[39m _astype_nansafe(values, dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\arrays\\datetimes.py:739\u001b[0m, in \u001b[0;36mDatetimeArray.astype\u001b[1;34m(self, dtype, copy)\u001b[0m\n\u001b[0;32m    737\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(dtype, PeriodDtype):\n\u001b[0;32m    738\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mto_period(freq\u001b[38;5;241m=\u001b[39mdtype\u001b[38;5;241m.\u001b[39mfreq)\n\u001b[1;32m--> 739\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m dtl\u001b[38;5;241m.\u001b[39mDatetimeLikeArrayMixin\u001b[38;5;241m.\u001b[39mastype(\u001b[38;5;28mself\u001b[39m, dtype, copy)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\arrays\\datetimelike.py:494\u001b[0m, in \u001b[0;36mDatetimeLikeArrayMixin.astype\u001b[1;34m(self, dtype, copy)\u001b[0m\n\u001b[0;32m    490\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m (dtype\u001b[38;5;241m.\u001b[39mkind \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmM\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdtype \u001b[38;5;241m!=\u001b[39m dtype) \u001b[38;5;129;01mor\u001b[39;00m dtype\u001b[38;5;241m.\u001b[39mkind \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m    491\u001b[0m     \u001b[38;5;66;03m# disallow conversion between datetime/timedelta,\u001b[39;00m\n\u001b[0;32m    492\u001b[0m     \u001b[38;5;66;03m# and conversions for any datetimelike to float\u001b[39;00m\n\u001b[0;32m    493\u001b[0m     msg \u001b[38;5;241m=\u001b[39m \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mCannot cast \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mtype\u001b[39m(\u001b[38;5;28mself\u001b[39m)\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m to dtype \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mdtype\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m--> 494\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(msg)\n\u001b[0;32m    495\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    496\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m np\u001b[38;5;241m.\u001b[39masarray(\u001b[38;5;28mself\u001b[39m, dtype\u001b[38;5;241m=\u001b[39mdtype)\n",
      "\u001b[1;31mTypeError\u001b[0m: Cannot cast DatetimeArray to dtype float64"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "scaler = StandardScaler()\n",
    "X_train_scaled = scaler.fit_transform(X_train)\n",
    "X_test_scaled = scaler.transform(X_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "834561aa-3dc3-4f86-976a-0125d1279193",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Load the dataset\n",
    "data = pd.read_csv('C:/Users/Admin/Desktop/historical_automobile_sales.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "5d986359-9dc6-4bac-9440-f9ba325bc245",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Group data by year and calculate the sum of automobile sales\n",
    "annual_sales = data.groupby('Year')['Automobile_Sales'].sum().reset_index()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "15a7187d-d3ff-4bb1-ac3c-dbcb3461bcaa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the line chart\n",
    "annual_sales.plot(x='Year', y='Automobile_Sales', kind='line', marker='o')\n",
    "\n",
    "# Add title and labels\n",
    "plt.title('Automobile Sales by Year')\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Total Automobile Sales')\n",
    "plt.grid(True)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "cd147bdf-a0d6-4c53-9d5e-b70a25ae31f7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filter data for recession periods\n",
    "recession_data = data[data['Recession'] == 1]\n",
    "\n",
    "# Group data by year and vehicle type and calculate the sum of automobile sales\n",
    "recession_sales_by_type = recession_data.groupby(['Year', 'Vehicle_Type'])['Automobile_Sales'].sum().reset_index()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "a8b9a427-d0b2-4c85-9b46-94037108d682",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the line chart for different vehicle types\n",
    "plt.figure(figsize=(12, 6))\n",
    "for vehicle_type in recession_sales_by_type['Vehicle_Type'].unique():\n",
    "    subset = recession_sales_by_type[recession_sales_by_type['Vehicle_Type'] == vehicle_type]\n",
    "    plt.plot(subset['Year'], subset['Automobile_Sales'], marker='o', label=vehicle_type)\n",
    "\n",
    "# Add title, labels, legend, and grid\n",
    "plt.title('Automobile Sales Trends by Vehicle Type During Recession Periods')\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Total Automobile Sales')\n",
    "plt.legend(title='Vehicle Type')\n",
    "plt.grid(True)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "99feb47d-84fe-492c-a017-d18e15028323",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Assuming 'data' is your DataFrame\n",
    "\n",
    "# Create a 'Recession' flag for comparison\n",
    "data['Period'] = data['Recession'].apply(lambda x: 'Recession' if x == 1 else 'Non-Recession')\n",
    "\n",
    "# Set up the matplotlib figure\n",
    "plt.figure(figsize=(14, 8))\n",
    "\n",
    "# Create a lineplot using Seaborn\n",
    "sns.lineplot(data=data, x='Date', y='Automobile_Sales', hue='Vehicle_Type', style='Period', markers=True, dashes=False)\n",
    "\n",
    "# Customize the plot\n",
    "plt.title('Comparison of Automobile Sales Trends by Vehicle Type During Recession vs Non-Recession Periods')\n",
    "plt.xlabel('Date')\n",
    "plt.ylabel('Automobile Sales')\n",
    "plt.legend(title='Vehicle Type')\n",
    "plt.xticks(rotation=45)\n",
    "plt.grid(True)\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "958a6dd1-7083-46b7-86f8-7ef440df9d7b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a 'Recession' flag for comparison\n",
    "data['Period'] = data['Recession'].apply(lambda x: 'Recession' if x == 1 else 'Non-Recession')\n",
    "\n",
    "# Set up the matplotlib figure\n",
    "plt.figure(figsize=(14, 8))\n",
    "\n",
    "# Create a box plot using Seaborn\n",
    "sns.boxplot(data=data, x='Period', y='Automobile_Sales', hue='Vehicle_Type', palette='Set2')\n",
    "\n",
    "# Customize the plot\n",
    "plt.title('Comparison of Automobile Sales by Vehicle Type During Recession vs Non-Recession Periods')\n",
    "plt.xlabel('Period')\n",
    "plt.ylabel('Automobile Sales')\n",
    "plt.legend(title='Vehicle Type')\n",
    "plt.grid(True)\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "a04d35ef-4d22-43bd-b3db-c4119b208296",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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VN4pp5zCent7pXttArc14PdzxYoV7Hvf+x4DAHbJJZeIdK5jrsHBQTZ16lT2r//6r9by3/rWt7K99tqL1Wo16ftjjjmGbb311uLcd9ttN/bhD3/YmI/LmJefZ5yxHmPN+zd79mw2MDAgvlu5ciUrFovs7LPPtpbLbQ3OPfdcVqvV2NjYGHv00UfZPvvswwCA3XTTTWx4eJhNnz6dfeADH5CObTQabI899mDvete7xHf8nn/ve98LlKU+E88++6y2jT/00EMMANh//ud/MsYY27BhA+vt7WUf+chHpHT33XcfAwCyNSAQWiDlLIFACOCd73wndHV1if/OO+8852MZUmpiDA8Pi/xmzpwJp556Khx11FFw/fXXJ66vqUxXvPe974Utt9zSOT1XenC8/e1vBwB/69D8+fMBAOATn/iElO7YY4+Fctk9DuMvfvEL6Orqgu7ubnjLW94CN998M1x99dXwzne+U6S58cYbYbfddoM999wT6vW6+O/II4+EQqEA//jHPwAAxNahr3zlK8bybr31VqjX63DCCSdIefX29sJBBx0k8po+fTrstNNO8JOf/ATOP/98ePzxx8HzPCmvPffcE7q7u+Hkk0+Gyy+/3Hnl/6677oJDDz0UtttuO+n7k046CUZGRgJb7sLuRRj2228/6OrqgilTpsAxxxwDc+bMgZtvvhlmz54NN954IxQKBfj0pz8tXY85c+bAHnvsIa4Hx5Zbbgnvfe97nc5x0qRJcOyxxwbOEQCEguHuu+8GAAgELpkoweAIBAKBMP5BY0Y72jVm5Dj99NNh+vTp8O1vf1v7+/PPPw/Lly+Hf//3f4di0acCJk+eDB/72MfgwQcflOynTOcwNjYGq1evBoDm1nY8TlJ3Ly1atEjcz6233hp++MMfwhlnnAFf/OIXRRrXMdf9998PAwMDcMoppwS22HO89NJL8Nxzz4nxE87v6KOPhhUrVgjF5rve9S64+eab4Tvf+Q784x//gNHRUSkvlzGvDq5jPY5DDjkEpkyZIv49e/ZsmDVrlvN49tvf/jZ0dXVBb28vvPOd74QlS5bApZdeCkcffTTcf//9sH79ejjxxBOla+F5Hrzvfe+DBQsWBKzQPvaxj4WWycepqvXGu971Lthll13EOT7wwAMwNjYWGM8ecMABsP322zudH4GwOYDIWQJhM8VWW20FfX192pf+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nnkmvPLKK/C+970PttxyS1i1ahU8/PDDQl2wcOFC+OpXvwof//jH4c1vfjN0d3fDXXfdBQsXLoTvfOc7AABwySWXwF133QXvf//74Y1vfCOMjY0Jde9hhx1mPL/vf//7cOONN8IhhxwC3/ve92D69Onwhz/8AW666SaYN28eTJs2Lfa1i4oDDzwQTj75ZPjMZz4DjzzyCLznPe+BSZMmwYoVK+Dee++F3XffPaBIccEJJ5wAP//5z+HEE0+EV199FXbffXe499574ayzzoKjjz5aXJ8jjjgC3vOe98Dpp58Ow8PDsPfee8N9990HV155ZdqnSiAQCASCFTRmzAZZjRk/9alPwf/8z/+ImAMcxWIR5s2bB//2b/8GxxxzDHzxi1+ESqUCP/nJT2Djxo1wzjnnpHFaoTjhhBPg/PPPh//5n/+Br3zlK85jrsmTJ8N5550Hn//85+Gwww6DL3zhCzB79mx46aWX4Mknn4SLL74YAAAuvfRSOOqoo+DII4+Ek046Cd7whjfA+vXr4dlnn4XHHntMkNb77rsvHHPMMfD2t78dttxyS3j22WfhyiuvFCS1y5jXdH4uY712YPLkyXDRRRfBiSeeCOvXr4djjz0WZs2aBWvWrIEnn3wS1qxZYxVvmLDzzjvDySefDBdddBEUi0U46qij4NVXX4Xvfve7sN1224lFkC233BK+9a1vwY9//GP4/Oc/Dx//+Mdh6dKlMHfuXLI1IBAwOhGFjEAg5AtPPPEE+8xnPsN23HFH1tPTw3p7e9m//Mu/sBNOOCEQfZ5H6uT/9fT0sK233podccQR7Kc//akUaZSDR96NAx55l/9XLpfZjBkz2P7778/+8z//k7366qva4/7+97+zPffck/X19bE3velN7OKLLzZG3uURblWAIfIuj3ir1vHuu+8W342NjbFvfOMbbNasWay3t5ftt99+7IEHHmDTpk1jp512Wuh52+r1//7f/2MAwObPn88YY2xoaIj913/9F9t5551Zd3c3mzZtGtt9993ZaaedxlauXCmOazQa7IILLmC77babSLf//vuzv/3tb1L+N9xwAzvkkEPY1KlTWU9PD9t+++3Zsccey+644w7GGGOrVq1iJ510EnvrW9/KJk2axCZPnsze/va3swsuuIDV63XGWDPq7kc+8hG2/fbbs56eHjZjxgx20EEHsb/+9a/Wa8wYY0899RT7wAc+wKZNm8a6u7vZHnvswS677DLtNVcjMvOotWp6FaZ7qcNvf/tbtu+++7JJkyaxvr4+ttNOO7ETTjiBPfLIIyINj0asgxrBlzHG1q1bx770pS+xrbfempXLZbb99tuzM844g42NjUnpNm7cyD772c+yLbbYgvX397PDDz+cPffcc9rrRiAQCARC1qAx4/gZM952223iWqj1uOGGG9i+++7Lent72aRJk9ihhx7K7rvvPikNvwZr1qyRvufntnjx4tC62cZHN910EwMA9oMf/EB85zLmYqx5zw466CA2adIk1t/fz972trexc889V0rz5JNPsk984hNs1qxZrKuri82ZM4e9973vZZdccolI853vfIftvffebMstt2Q9PT3sTW96EzvttNPY2rVrGWNuY15+nnHHeqb7t/3227MTTzzRfHGZP+79yU9+Yk3HGGPz589n73//+9n06dNZV1cXe8Mb3sDe//73S2Np0z3Hv2E0Gg127rnnsre85S2sq6uLbbXVVuzTn/40W7p0qZTO8zx29tlns+222451d3ezt7/97exvf/ub9roRCJsrCowlDFlJIBAIBCfcf//9cOCBB8If/vAHOP744ztdHQKBQCAQCARCDkFjRgKBQNi8QOQsgUAgZIDbb78dHnjgAXjnO98JfX198OSTT8I555wD06ZNg4ULF0Jvb2+nq0ggEAgEAoFA6DBozEggEAgE8pwlEAiEDDB16lS47bbb4MILL4TBwUHYaqut4KijjoKzzz6bBtkEAoFAIBAIBACgMSOBQCAQSDlLIBAIBAKBQCAQCAQCgUAgEAgdQfyQ4QQCgUAgEAgEAoFAIBAIBAKBQIgNImcJBAKBQCAQCAQCgUAgEAgEAqEDIHKWQCAQCAQCgUAgEAgEAoFAIBA6gAkfEMzzPFi+fDlMmTIFCoVCp6tDIBAIBAKBQMgQjDEYHByEbbbZBorFzukQaAxKIBAIBAKBsPkgyRh0wpOzy5cvh+22267T1SAQCAQCgUAgtBFLly6FbbfdtmPl0xiUQCAQCAQCYfNDnDHohCdnp0yZAgDNizN16tQO14ZAIBAIBAKBkCUGBgZgu+22E2PAToHGoAQCgUAgEAibD5KMQSc8Ocu3kU2dOpUGxgQCgUAgEAibCTptJUBjUAKBQCAQCITND3HGoBQQjEAgEAgEAoFAIBAIBAKBQCAQOgAiZwkEAoFAIBAIBAKBQCAQCAQCoQMgcpZAIBAIBAKBQCAQCAQCgUAgEDoAImcJBAKBQCAQCAQCgUAgEAgEAqEDIHKWQCAQCAQCgUAgEAgEAoFAIBA6ACJnCQQCgUAgEAgEAoFAIBAIBAKhAyBylkAgEAgEAoFAIBAIBAKBQCAQOgAiZwkEAoFAIBAIBAKBQCAQCAQCoQMgcpZAIBAIBAKBQCAQCAQCgUAgEDoAImcJBAKBQCAQCAQCgUAgEAgEAqEDIHKWQCAQCAQCgUAgEAgEAoFAIBA6ACJnCQQCgUAgEAgEAoFAIBAIBAKhAyBylkAgEAgEAoFAIBAIBAKBQCAQOgAiZwkEAoFAIBAIBAKBQCAQCAQCoQMgcpZAIBAIBAKBQCAQCAQCgUAgEDoAImcJBAKBQCAQCAQCgUAgEAgEAqED6Cg5u8MOO0ChUAj895WvfAUAABhjMHfuXNhmm22gr68PDj74YFi0aFEnq0wgEAgEAoFAIBAIBAJhHKLW8DpdBQKBQAigo+TsggULYMWKFeK/22+/HQAAPv7xjwMAwLx58+D888+Hiy++GBYsWABz5syBww8/HAYHBztZbQKBQCAQCAQCgUAgEAjjCKsHx2D3ubfCadc80emqEAgEgoSOkrMzZ86EOXPmiP9uvPFG2GmnneCggw4CxhhceOGFcOaZZ8JHP/pR2G233eDyyy+HkZERuOqqqzpZbQKBQCAQCAQCgQDNnW4EAsENDy9eD08v29Tpamy2uPqhpTBW8+D6x5d1uioEAoEgITees9VqFX7/+9/DZz/7WSgUCrB48WJYuXIlHHHEESJNT08PHHTQQXD//fd3sKYEAoFAIBAIBMLmDcYYnPjbh+GTlz5IBC2B4IB1QxX4xKUPwDEX3dvpqmy2KBY6XQMCgUDQo9zpCnDccMMNsHHjRjjppJMAAGDlypUAADB79mwp3ezZs+G1114z5lOpVKBSqYh/DwwMpF9ZAoFAIBAIBAIBYXMbg45UGzD/hTUAAPD6hlHYbnp/h2tE6DQ4SV8oEAOmw9qhqvhcb3hQLuVGJ7XZoEjsLIFAyCly80b4zW9+A0cddRRss8020vfqy50xZn3hn3322TBt2jTx33bbbZdJfQkEAoFAIBAIBI7NbQzqIbUsER4Ez2PwoZ/fByf89mFSUhvQVfKfkyoFpSIQCAQCQi7I2ddeew3uuOMO+PznPy++mzNnDgD4ClqO1atXB9S0GGeccQZs2rRJ/Ld06dJsKk0gEAgEAoFAILSwuY1BPcS/ETdL2DBShYWvb4J/vrgWOsnNNjwG9764FgbGap2rhAFdSClbqRE52wkUSdVNIBByilyQs5dddhnMmjUL3v/+94vvdtxxR5gzZw7cfvvt4rtqtQrz58+HAw44wJhXT08PTJ06VfqPQCAQCAQCgUDIEpvbGBSrIwtAhMfmDkzWd1I3+7v7X4VP/+Yh+MQlD3SwFnpghXml3nlytt7woJpSPcaLWpoWkggEQl7RcXLW8zy47LLL4MQTT4Ry2bfALRQKcOqpp8JZZ50F119/PTz99NNw0kknQX9/Pxx//PEdrDGBQCAQCAQCgbB5g5FyloDAECXrdZCou+7R1wEA4LmVgx2rgwkeYrDTIkXjgjEGH/nF/XD4BfOhntBi4ed3vwT7nnUnLF0/klLtsgMpZ328uGoQhir1TleDQCC00PGAYHfccQcsWbIEPvvZzwZ+O/3002F0dBROOeUU2LBhA+y7775w2223wZQpUzpQUwKBQCAQCAQCgQAA0MAEHPEdBKyc7aCIsu51XpHqgkq90dHyPQbw1LJNAACwcbQGW03uiZ3XT259HgAALrjjBTj/E3umUb3MQNxsEy+uGoTDL7gHDttlFvzvift0ujoEQmQ0PAalCbYy3HFy9ogjjjBugygUCjB37lyYO3dueytFIBAIBAKBQCAQjMAqQAIBt4ZOKmfrOW6X+Lp02tYAz7/Tul3jQZVqCyy+OeH1DaMAALBs41iHa0IgRMf3/vI03LhwBdx66ntg5pT4C0t5Q8dtDQgEAoFAIBAIBML4gqSczS8fRmgTWE6Us40ck7P4unSanJU8glO6YTjgWV5RIm4WAPyFAlpkI4xH3P/yOlg/XIUXVuXPviYJ8t+DEggEAoFAIBAIhFwBk2A0vSdgz1nWwRZRb+S3NcrK2U7bGmCP4HTy7B4HzCcpZ5vg/XcnVe4EQlzwBaWJ1nyJnCUQCAQCgUAgEAiRgK09J9oEiRAduA10UozXbs/ZKIG98GXptHIWIy2CbjwoZyeYRWVs8GeUyFnCeARvtp1cCMwC+e9BCQQCgUAgEAgEQq6AbQ0m2gSJEB2yEtPeHir1Rmpb6VW009bggttfgD1+cBs8t3LAKT0+5yikLsZYLR3FrcfSV753lfNPLZBytglha0Bdt4SRaj3WcYwx+MIVj8BXr3os5RoRdPBIOUsgEAgEAoFAIBAIiq3BBJsgEaLD1XN29cAY7P2jO+A71z2VST3aGRDskdfWw2itAc8sdyVn/c9xlLO/uudleOt3b4F/vrgm8rEq8GVKy3d0fChniZwFIFsDHW5dtBJ2+/6tcM2CJZGPHRirw+3PrIIbF65IbQFlc8Ttz6yCD/38Pnh5zZA1nSeUsxML+e9BCQQCgUAgEAgEQq6QhfKOMDFgU8W+uHoIBit1eGzJhkzKbiDP2X++uAaO+uk/YeHrGzMpi5+mK7eJ01ViEDhn/f05AAD41p+ejHysCnyP0uLnesaFcrbTNcgHfOUs9d4ci5ZtAo8BPLVsU+Rj8WJlnoMS5h1/fXI5PLl0I8x/3r4A5StnJ9a1zn8PSiAQCAQCgUAgEHIFWTk7sSZIhOhwVc6yjBVPNeQ5e8vTK+HZFQNw13OrMynLJ2fdzgbbf1Qb8T1nh8bibb3GkJSzCZ5f3A905Tgg2DPLB+C5lQOS5+zm3G8JcjY/1scdB28NcZoFfg6iqvfrDQ9qCfqDiQTPUdGd9XukUyBylkAgEAgEAoFAIERCUluD4Uodblu0kraAThBg4tE2sU5Dsbd6cAy+fvXj8PDi9YHfcLv0gx7FLsoKfs6uJB8mwiq1+GTMcDX5M8NSUr5j71ydrcEtT6+Ez1++ADYMVxOUkgzVugefuPQB+MQlD0h9VV4UjqsGxuC2RStTs5dwAW+LpJz1IdSYCY4FiNauGGPwgYvvg/ddeE9u2mMn4eol601QdpbIWQKBQCAQCAQCgRAJSSf1v7rnFTj5ykfhjw9H9/cj5A+4Odg4hjQm1Xc8sxr++uRyuOKBVwO/yao1XlY2M/io5C8msON4zqYJ+X7Fvz5h5OyVD74Kdzy7Gu57eW3sMpJirN6AoUodBsbqUiDDvHBh3//LIjj5ykfhwVfWta3MRgqLJBMNLEF3IStn3Z/tSt2DZ1cMwMtrhmGoklwRP97huhvBJ9InVvslcpZAIBAIBAKBQCBEQlLl7KqBsebfwUpaVSJ0EDIlam4QUa0AdODkR70RzENnr5AZCRfV1gAlq3aYnJU8oxPci0rdV/Hqgm3VWveok6pA0+nlhZhc31IVrx9pn7qY33PaTe/Db6LR2wVu39W6Bz+940W4P+KCxOZss8Hh76wIS9f8O9EuGZGzBAKBQCAQCAQCIRLkgGDRZ0jcc7PWYZKKkA5cA0wl2Tqs5u/uS5jNDJ7n67odHVcXk5qdgOw5Gz8frADWXWfeLjpKoqCyC+ATyJ0kjMdqDbj/5bVQrXt+O2pjdTgpS4SgD9+mJPqxuC965NUNcMEdL8BZf3820nF0K/BuhLC+PQf9SgYod7oCBAKBQCAQCAQCYXwBK67iTJC4cjBJYCRCfuAaYMp18m0DcyR4XVVY8evBy3FMn9DWYEpvGQZTCAam1iUJwSGRs5p8hMKtg9uPcdk4IFgnlbNn/N9TcP3jy+CE/bdH2+nbVx+yNdAggRoT9wGbRmsAADBSCV+AScteZKLAJ13DbA1a6bOuUJtBylkCgUAgEAgEAoEQCZKtQYzjOTlLUaonCiIqZxPMqvmhYRN4P138smyIGtwMEzhxbA2m9nZFPgaX9/nLH4Hf3rsYALLxnNXdjzTud1Lg646dFyJYg6aO6x9fBgAAVzzwmmin7STnWMYLF+MRSXxM8fuQq+IbDvcTp6B7AehZCEnnSOKONxA5SyAQCAQCgUAgECIhqWclJ2XbERjp/NtfgBN/+zDUiQjODK5kX5KgO1HzyFqR6Eok+PUJEjhRMKU3/qbXPz/6Otzx7Cr44Y3PAIB8j5KQgvg8dLlwy4dOciim++9CnrUDgihtY/fEyURXS47NAUn6JvwMjdXMnti24yYa0RgHrgtepJwlEAgEAoFAIBAIBEhBOcs9Zx0msEnxsztfhPkvrIE7n1udeVmbK/BdtM2r01A8MeVvaFmxSwrLXy4nDJgHi2trwDFWi0burh4ck/6tC5wWB/g8dERfHkgUU9md9JzlKBagI8rZNOxFJhqStFXclviz6XJt5UWtGAVPMPjtMixd5xd9sgCRswQCgUAgEAgEAiESGpLiJ/rxtXrzoGobAyNFJbQI7nAl+1wn3/ay3NRVgvTKiPWITqr56eLYGkzq8cnZqN6zI1W57acViEiyNdD87qVAxieFqW3mQalYLhVTUZNHBX8miBD0kSQgmEzOtpSzDhcXt0Eiyt0X7/yfJ9Y1I3KWQCAQCAQCgUAgRIJMeEWfIFXaqJzloLlvdsA+jfaAYPF9HUVZzrYG2RJQUfNPqpzFGByrRUo/UpXJ3LQ8ZyXlrCabfChn9Sr/PNgadBULHVLONsvKwzXIC0S/EqO1SrYGrQVHl0UhCggmww+yGGZrQMpZAoFAIBAIBAKBMMFw/m3Pw0/veDHSMZKtQYwJElfcxVEQxgVNfrODpEi0pPNSIEyFwi0knZeAbHGqR8St4ThZHM9ZfPxAVOWsEjm+bQHBhOdsB589w7nmwdagq1wUN6Od1WmwHNyXnIH57Gxk6GwNXJSzaSnYJwpc3w/+It/EApGzBAKBQCAQCATCZorhSh1+dtdLcOGdL0QijKRJZYxyeUCwahuDdOWAi5mw6ExAMDdbg6xID076utom4OsSZ1EClzIwGk05O6woZ5M+vxxSQDCtcrbzCjeP6T/ngQwrF4upK2cvvOMFuPKBV61p/IWFVIqcEEii8sb3rtKyNXBSzhry2FwROSDYBLtkRM4SCAQCgUAgEAibKeqeT55EiRaOOdXxopwllVh2cI06noYHqSvpmkbwMXv+zb+uBJesnI1BzqIMBiLbGtg8Z1NSzmporTQUbo++th6ufWRp7OMlW4O8KWdLhciB5Wx4afUgXHjHi/DdvyyypuPnnodrkBf4nrPRrwl+H/IFi6jKWboV7qSrH+xxYl20cngSAoFAIBAIBAKBMBGBJ6JRJjqNmMdx1ITnbDvJ2bYVtVnDdp0T7BzW5GHOpSx5eSYozIKoEe/xs8bVdXExMBrN1mC4oipn9Z+jwtlzNkEZH/vlAwAA8KatJsHeO0yPfLyk6kaVzIPfarlU8BXYKVRn44gbaS/b0jAoFArJCx/nSKKc1QUEc2pfkpK78+2x4+B9asjDQMpZAoFAIBAIBAKBMKHAYpI0njS5j14uec5OLLi2I9dtq9ayhJ2AOU2pWMhcXRU1IBhOFsfOA1+zpMpZXBtXWwYdZM/Z4O9pBIDjWLJ+JNZx8tZx9DkHUsWuUjGyd7ENru2KkWIzgCSWK5KtQUs566JKTmuRZKLAVWlPnrMEAoFAIBAIBAJhQkHeVhlBOZsSOdtO5SxNfrODtHXcMmVO1XPWUo5MesUvy60+bgXIvpQJA4Il9pxF+UauiQ/sOavrP9L0nC3GVHcyQx+Xh/6gq5huO6033OwqsKqTrA2aSKJcxe1KKGc95uCLnY69yESB6+JdmlYgeQKRswQCgUAgEAgEwmYKPLWJMs9JamvAFV5t9ZydQDqbtUMVuOKBV2FTRJIuK8hbx83p0lDO6spU0VTOhqdLo3x3WwP/czzPWf9zZOVsxew5m+RehJ0HbwtpkChxd96bis4DKdm0NWgijWtU9+xKZg5Zsdn565AHJLFcwW1ptIYXLNzKdEm7OcDFrmCiEbIY5DlLIBAIBAKBQCBspsDznCiTniS2Bowxn5xttG+iFTb5rdQbUCwUoKuUf/3KZy5bAE8t2wQPvbIefv5v7+h0dZyjjot7kEg5q1dj4vZbLhZSCT5mg080R0sPEG9RAi8uRPacVZSz8nMfuSoC+Dx0NgFpbj+O64tqOtc8kJLlUlGoqFOxNajjRTMzktrSTEQk6S90tgYATdK2VDS327QWSSYK+BVweofAxGu7+R95EAgEAoFAIBAIhEwgBQSLqZyNirrHRFnVevTt3bFhqXOt4cGh582HD//8vvbVJwGeWrYJAABuf3ZVh2vSRNSt/Yk8Zw22Bjg6eqmIFYmxi7LXo/XXWTmLPidVzg5GVM6OKQHIslDO6nJJ19Yg3nG4neSNDOtCJ5WKrYGHA7TZCC5ka5CD65AHJFk3wu48+FkLU2fnbbGg02AO7wf820TaDQNAylkCgUAgEAgEAmGzhaviUUUS5RX2ma3lRDm7YbgKr28Yhdc3jILnMSjGZYLajEndpU5XAQDct0n7Qbriw0S64naVdqAlbT2iEo8oXbXhRW5nuJiBsWjK2UBeKanPMDmr95zlZSS/B/E9Z4P1AciHrUHa7RR7ztryw2Ti5kwKDlfq8N2/PA3v331r/zrEuBy4LY0hW4Mw4jut53CiwGU3gkTOTrBrRspZAoFAIBAIBAJhM0VczzspIJhhNvvk0o3wxSsfgVfXDkvf463QcaLWx4WVrBinSrJJPXnR2mBSKDxVGspZNQ9M9De3Eqe3pV5bj9ZfV5JPrW/Uto8JzqjK2WBe5npFgRwQLPg7X8RJ4x7EV876yJtytuk5m566GLcpxgA2jda0xLhEcLWvC84dHnxlHfzfY8vgkvkvi4YSR40pB/tDytmQxUeTqntzhYtH9UQmtImcJRAIBAKBQCAQNlPE3SLYcJggfejn98Gti1bB5694RPoeEwgNj7VNwWYrBtdhPE2SJ+eEnHX1LhZkXYJLzAykK1bOlooFcb+zU85Gy19NFtXaAB8fRXEeSs4luDySd66lnDRuQXzPWab9nAPhrKycTaFCWDm7eO0w7P3j2+E71z0VSJc3krpTqCHv8yRtFb8/pPdbSGbyjoPo5U40iMU7h6CSOP1EAZGzBAKBQCAQCATCZgo8uYkyKZVsDULSLrYoZwFkUi1tmIgZFXgyqJsY/v7B1+BPjyxNs2qpIC/KWVmdaE7nEo07tCxDHnWFsBT3O6MZfFRbA5UEq0T0W8ZH123shYKRql9OuSU/zcJzVqucTXgL8DMb29ZAUx+AztkaqIHrfDV58rxxu3hx9RDUGgyeXTkQSIfPfTztFEgbfoBCf2kyzuUwPUNhzykjklyCm+dsMP1EQT7e5gQCgUAgEAgEAqHtiDs5bDiSngBBEkQlZ6sND3q7svFOdd0CabM1GGr5EpaLBfjoO7a1Rt9uN3JDzkqXzDax5qrXaJNqz2Nw3u3Pw17bbYlIFDmPmrSlmyHSKyPlbMT81VTqcxB6PCpHJaJtGK74/rQ95WKgLmkpZ3X31FcjxisEdx2xbQ0MfVwaStU4wIHruspFJ0LKFVhRbVOpu3pET3T46ndzoEEXmIj+sDWUiUw0xkFkz9msK9Rm5ONtTiAQCAQCgUAgENqOuP5tjQjKWRXqluyoJFUUyKo5c00lJZkyM6zVPWCsWW+PMShBZ8lZPImf3JOPgGCu28UxGRIFz6wYgJ/f/TL8y6zJcPRuc5p5KWkkchaSqzbDEN3WQFXORiRn0ecotgZDlWDwsLQUe86eszGLwM9i6gHBOkSGSYHrkHI2DXKujvLmJLA2UFuCgI4TCR4ixtOyNcAIV7jTfcDwd0WYL4bkkTzBrhnZGhAIBAKBQCAQCJsp4gYGSjK5b6etgedIGkqes0rCtFSGaQGTev3d+dDaSCS45ULHVVJyErBSbxi3H9eUSPW+IjFSUc7gCjvX/AOes7Vo7V7eku9+7HDFJ1B9ta8+36jAbdGm0IyjRmwe7x8Xk5uVS86B52yt7hdcLhVFBdOoT03y825+1t8X82LU5gRMyIp+JUE+ge8jKGc349sggMnysDQA8fuVvILIWQKBQCAQCAQCYTNF3MBAsuos2gRJjVKfqXLWkXy2eTCynE0GB8Zq4nN/d16Us+izJZ0Xk4jCXrUmxWqtoScKs9ou7BJZXEqvJFOfg1DEtDXAylmdX2+S6yPZGugUmiFqxKFKHb5y1WNw66KV2t+zVM52ytag0vDJ8lIBe84mrw9eoODNS5cv7uM2R1uDZRtHYf1wVepLonpIY5iaUrjnLM5j87sPKlx2VqQVzDCPIHKWQCAQCAQCgUDYTBFXFToelbOu6VTSRvYFTKVaiTA0FtymHgcvrxmCy+5bHDkwlQ6u2+SZtI3X/WJiUpHnEVTOyuSsjojMAq4iVpXYr9SSBARzPynsOeurffGCQ3xIylnN776Ppx7n3fY83LRwBXzxyke1v2MSMX5AMH3b7JRiFBOoDNJVeGMy0GbbsDnbGmwYrsKB59wF7/jR7QaiL/oFMXrOhlxcU9vMC55bOQA/v/slGIvYV8WFi3I2/rJw/kHkLIFAIBAIBAKBsJkilYBgEctUFYNRvTfjwqaUsypnczYFHETkbJIJ/bk3Pwc/+NszcM8LaxPXyZXkj+txjO0QsNrt4cXr4fhfPwgvrR4MEJZxg4+5gj87rt6lavOL7DmLjg/3svQxXA0qZ72Yz70KvNCie74a4r7pj39p9ZA1f+wvGT8gmP85D4GwaooVBBOfU1bOtvpZrecs+kolFjeN1uDon/4Tfn73S4nrk0c8t3JQfMbPQxLPWVNbCltEwY9xDrlZOP+2F+Antz4P/3h+TVvK858FcxpSzhIIBAKBQCAQCIQJB0kVGuG4RoJJZS2gnM1uhuWqEJS3+So/5kw5K5Oz8fPh292HNQGjosKVdJUUezHyZ8px1z/+Otz/8jq4ddEqqV15mMTNiPvn9YgbECyqnQcmmWsN5kzm6Txn8UVM5jmryRshTAm3caSm/Z4DP5eFmMpZk0dlx8hZJXCdyaYjDnCb4t2qLlubrcHTyzbBMysG4C9PLEtcnzwCLw767TNc5W2DSTkbps7OQ3u0YaTaaP1NZ7dGGJyUs9KYJX/XLAmInCUQCAQCgUAgEDZbxJscyuqVaBOkPHrOYtLQGhAsB5PBQeQ5m0RtlyYp5EoyxFUuYj9IbFfAvVdrDQ9qylZtYX+Q0T2LqrRT0yVRzjbLdztOIt/FPcf5pqScVRXniCA3YeNoVXx+cdUgfO53C+Cp1zeJ79KwHjAtHGTopmJFVbXfaN2UNOqD2xQPCKZ7zuQdE/JvmLCciFCVy82/DPlaRz/x2ORsSoskWSFq0MOk4AtpzgHBcnjNkoDIWQKBQCAQCAQCYTMFi0nSNGIqIAGCHrPt8py1TTAlWwOVnM2bchaRbUlUoWlOvGU1kxlxJ9ZM/GWSb6pQr3pMJl3AJ1uyIhaiktsBz9mIXr/qebg+NzggmE6ZlqRNVzREl18WoN/0hWxCytkbF66AO59bDdc99nqgvgDpkOzSIkyHHuaq0k45UlfO8oB1mnQNy3VIc9Emj9ApZ5t/+GJOdJiuVTRyNr3r/czyAXjolXWJ84ka9DApXPyX4+72GQ8gcpZAIBAIBAKBQNhMETfYVcOLT+6oisFMlbP4s6Wirp6zeZgMYluDJIRVEqWYCpyDfUtqPDIKq2V5YQzl0WBM8mGV0mVELAhi2DF7lUiPbGugnIdrUDA5IJj8FyA9z1m1fi4E8ABqy/wZNC6UxKxm7jxnG/I5sRTbac1IPMqwXQfRRvLQ2WUA2frBX6zw+8PoeZrWScLI2SQ7UGz4zO8ehn/734dg06jdNiQMpuCLWcFvexblbN4idKYIImcJBAKBQCAQCITNFLJyy/24JIo2lZRSbQ7SBA4oZJvHSR6MVuVs5yeD2NYgkSo0ARkRyMqRZIhbXz+4lzKBb/2j4QFUG3JbzppYiK6cleFKrprQcPRqlgOCBZWzcatRb3jSOajZuPo9+2mCdUui0FfzteXdTpg9Z5PnjftWbvmhex5lGxf5NxHoLo/77FOApJz1UL+C+pioiK2cxXmk+BpcP1yFusck1Xwc+D687WkLLpYarrs0xiOInCUQCAQCgUAgEDZTuAbXGByrwWHnz4dzbn4OAJIp2tTt2NkqZ92Umvh8RqoNOO2aJ+CmhStaefjIA18xNBbcph4HaXqyulo/xN3GjdV82H8Wb9OvS+2KRSZPo8KvhyM5a1GWuh0v/7vmyOZU60GCM66CWcpXeY5N2+PVzyboSMo07BdMx3WKfJQ9Z5PfB1PeDQvR5VnKZYbvJwpk6wedcjb6ecf1nI26gBG1PkkXE3G/2w74VjS2Bb7kfUJeQeQsgUAgEAgEAoGwmUKapFu4nmdXDMJLq4fg5qdXBI6LOj9SydhsPWf9z7Z64vN5aPE6uP7xZXDJ/Jebx+VMqiPZGiSoT5qKPVcFdtwdqf79YUjN5d+OhsdkRSIibrO6ZYLEcmy+6vnWHZWvfnlyek7ADIzVYGDMvH1ZsuVg8t9WglhQn2P1/GTVq72Q3q6ilhyLkocJJiKyU8SO7DmL1czp5u2rQoMZ46YXIMJ0bWQCAfcTXPntecn6CSM5G3IRme0+JEASiwaMNNtmWuVlZQWRB5Q7XQECgUAgEAgEAoHQGbhODtVAQkk8ZwO2BlkqZy12BRiYHx6tNv8xVmu08kD55YCdHaxgW4P49UlTIRe1HUUuF5ENWP3Jb2mTnJUXDPzzcy8mCsT2b2dbAzld1OuuCwhWa3jw9rm3AQDAi/99FHSVgtqrqJ6jrlC9o9X6hVkn4D5ki75ura1BKspZQ51c71vaUBcRcHtOCsnWQKgng+nkwGjyb7r7MJGgU84CyIr8qDDduzDrElc7mLh1SU7Otv626b3nLx7Z3iEofcb1aTdIOUsgEAgEAoFAIGymcJ28CXK2Na/FZGbUiZuqlG2Xcta2xRT/xuvD/0bdnp010lPOxicjgnnpP1vTRckfEUbYlxB7qKrBkFwm+kkQlVRTm19Uz9lAQLAGkwL+4HZhO46ha6irlyuCiyoq+SwVGjh+ANV9Wl+XOFx+Zk25u0NeOMB554CcBaxgT16fCrY18IL9F4fV1gAteExEaJWzuL+I0dJMRL9tQbBZFkqb0uWWyctkmWa9wKXCFsTOR3rkc95A5CyBQCAQCBaMVhvw63tegVfXDne6KgQCgZA6XD1AOSmrCygUdYJUUchYVYGXJvD52ZRy+Hx8cpYF8sjDXHAwJc/ZJB6LKmQeztaO0LWMcNtF+wNZzYWJJGwTwBBxm9UE3hPEjlt627Z/p+OVf9c9mWQtOB7XvDb+vz3G4PcPvgYPL14fqT6VekP6tymwlK4OAAAbRqric7FY0Cq509nCrM+jU1uia3W5Dv7CQ/K8ZVWoX4YK3PZUAtH3/UxenzxCp5yVbFBinLdpfTFcOet/TkupnMbCSyCvNj0rbp6z/ueJ1kSJnCUQCAQCwYKbnloB//33Z+Gnd77Y6aoQCARC6jCpylQIOwOdrUHEMjE5AQDSdvS0IZ2fo3K2alXOdn46OIj8RRMpZ5W/SRBGxHHEVXX5KlVcpqyoVQMt+eeXzT3TkYk2qOnCVHXGAluoK0aZxYKeng1uW5fv18trhuC/bngavvN/CyNVRyWeTJ64APp2umEEt2OmJdOT9DO6sjGBnIuAYJCucraKCHOsMFdh6/ejBrobb6ii9w0OCJaEhzTdu7BnPE0iVZdn4oBgbSbqVfskWxqAiddGiZwlEAgEAsGC1YNjACBvvyMQCISJAteJjhr5u+FwnIErgmpDVtxl6znrf7YpZyVytq6Qszi/VGsXD2kpZ/nFiUwS6rJCn909Z93z9xBhhEk832ZDUc4CIhayal4RiQs1WWRbA/X4BpPLNjxvelsD/98Do832NGSwRTBBJTeDnrOoTM2TsxEpZ5v14sfhNpJcJmdqmxmuCVkh9XdMv/AQO29pyz7vv4IZN0zXGKIvOow31BpB5azHcADB6OdtIvqjKGfT85xFn5PmJfJsU1tw6FNxfz7RmiiRswQCgUAgWMAnwdUMPRFteG7lgDUKM4FAICSBTFxY0ilqKs9B0WZS8qlkbLaes1glZU6n95wNKsjyMBlMzXO29TcNVZSrAls+xr1g38pAJgw4kdLwdIGW4pMtTnVC9XBKrypnI968gOesx5zOTS3GY/I14d6kkQOUBWwM1H/bnxtZOatvj7JyNt59NPVVaSxKxIHsOcu0pHRc6GwNdKcpEeCqApovwE1QXwNd0DTcuuLZGugPCrunUsDKlF4uuiBnsWFRX2cBTxln2NIAZNe3dwpEzhIIBAKBYAFXzNY7ILF4YdUgvO/Cf8Kpf3yi7WUTCITNA/IcyDIhQgpF/Nd2WMlAznLSs9j6OcvFL1y1hkVCiZVkvH5VrXK2s5PB0WoDRmvBrctxgAnPpHD18pQn1jHyZ3K9hZLb86DmybYGnoWcSgMuW3Ax1GRRlbOBgGINz0l5p7ZZBrJyltcjan1UJbpafkNzr1cPjMH5t78AKzaNSspZE0mZxNtaLVvNo1PKUHURgdcwjXZak7bsWwKCYc/ZwO+cIEtenzxCJrD5wgSIhhLntE1tKWzuIC8WxCg4pC5J76GX4JokKc++UKz/PBFQ7nQFCAQCgUDIM7hCqZ7ZvkgzlqwbAQCA19ZRMDICgZANZOWOOZ1qa+CiXikWAaAR/J5Pjid1l2GwUs/U1gCTEDYOGKcL2BrI7GxHsWawIv07CaEjlKUpzHBNBJgKW5R4l/ybHIpPigqVH1MCLeE6ZXTPotomJPWcVZ+zpnI2WJ9AuRqFK77n2gUXB6jp1aPxz/zcr354Kfzszheh4XlQQD4MktLZoHaPTc4aCGybzUmWqAYC1zU/Z6Wc1QYEs9kapFifPKLa0KmLUXC9GKdtenbC2ljc/hBjrNaA3q4Sysf/LekdTPMdEaU8Z8/ZzGvUXpBylkAgEAi5wlitAc8sH8iNyTsPvJJlwBoT+ABytKphNwgEAiEFyModcz8n7AxYkMgxddcm5Szv2yb1lKV/Zw3bhA9PoquIlG1gSRV0fjLIfdA5krwrPUHeJKlRMA/XSNtRLqbgTZgcuAfbbARsDSIqW6NCWCrEVM5GJUMDytsGc7IX0S2e4Ly4YjYqWRwgm23kc+vjSK254D1SbcAGSTmrJ7tTCQiGjrRt528XMIGKjSnSGPfivH0P1SCka6ySs+L4xNXJJSqaoGnYViPO7ghTHxP2jLPgIxIJVz7wKuz6/VvhjmdWoTzD382uwH1tO+CinE1TGZw3EDlLIBAIhFzhe395Go7+2T/hgVfWdboqAOArZ7P0RDSBDyDxFlYCgUBIE66TQ0+ZpOH1KtMEKcxzdlJPU+1Ta1dAMMuMDxM1uL+vNTxZiZTiZLBSb8BYxP59dUA5G79CPgmT/KQwoWHLzlWprQJHnvdJFP9zw2PSDhcp+rp7MZGACWMXqNc5ckAwJXnNc7M1UIthTPVijkYyq8eZ6qftW1A/slHynDUQqBIRE/NOSgsH+s9xsHaoAis3jYUnVGBcREjYDTLGlIBg5sUJ23UVC3ATjflqYawWDJqGlbNxTtuonA1pZEnb93f/sggaHoPTr1uI8tTnHwd+H9qetqB62+sQFmhwPIPIWQKBQCDkCovXNrfw8y39nYawNeiEcrZFWIyQcpZAIGQE122V6tZnp4BgRTs5O7kNylk5Onv4+QHI5ElV9fVMaTLIGIMPXnQfHHb+fKhHOP/VA4pyNmEdALIICGYjwdExEWqPVW2YFMVEUjVga2Amp9KAv/073vFx68Ufq0aDyeSOIX2ANDV4zkYlB1XlqXo+DQ3xhBcEBisosB3o22M6yll9HZMEvGKMwd4/vgP2O/tOGEbn4QI5IFh6iyRqP8rvjy5bWUEs/xZ10WG8AStnG+gaJVnMMXXhocpZ9DlJPzxzcg/Kx22hzAVeiu8It/LkcnXIW4DONEHkLIFAyDWGKnX40M/vg4vverHTVSG0CUOVfKlFha1BBzxnKy0Co1L3Orb9jkAgTGzIyjtzOjX4kUtE6JKBnK0ptgZZ7kzANWtYFtmwihF7l9bqnrMqNAqqDQ+eXzUIr28YhU2jtfADWlgz1FTOTmldu1SI1RQIZ2b4rEJeDIiQv6RqCxIqnqKclQKHZfT6jEr+BsjLmDYCXaXmFL7ueY5EjPwDVms269G8bpGVs+p2eOVwXd08pOZUbQ8EAW9UzkaqXmgeScjQClL7rxqIpp4NKmd5fWJXBwAg4N3d8MztE7e9iW5rsGpgDI64YD5cfv+rAABQwcrZBu9LmJNq0wTTMeG2Bvq2HhVbb9GrzSe9xcRUsnEoJ3yhaKK0Sx2InCUQCLnGk0s3wpNLN8L/Pbas01UhtAkj1aYCAW876iQGcqCcBQAYq+eDrCYQCBMLrsSjuuVTF4ldhdHWoKEoZ7MMCOaonMXpqpKtAZMJ7JTqJSt13XNdPdAkZ2dNbSqlkqjb0iQvZTWTRfVkOCY8f/94/BkrZ2VFIt6mnM37OyqpplYjrudsd4ucranKWcN5BmwNlLrw8U3DY5GuVTAgmErWBvsITPypql//epoIq3j30UTIJiHDcCwATpa7oiL1d8lIQQy1HxULTpps5UU5/X3Lc0CwNYMVuHT+y7BuqBKa9tHXNsALq4bgxoXLAUAeT/sEdrCNRoHp3RLFczYq6YgtcbbZos/PJ4Ugeurx7WoL0ZWz+W2jcUDkLIFAyDWGWluFOqFaJHQGfHtYVB++LNDwmN8GO+I565dJ1gYEAiELRN2Oziehkq2B4TCDcFZja5DdBEs6P8vsF3fxmOSoqbYGKU0GMSEb5f3CPWfnTGsqpZJ5zmZDXmYRzAVHUseEgVgs8Jh0TZOSLS4Q+TueiJoqMjnbyqGrXBTHN2SxsP44Dflm2t4fxwdY/Ftpxrhu6uKOWgfG/NBYsq0Brrd73TDwYfJ5x8sPAGAkwRgVt1OG2mnqtgYWkhWTiaZ7riqs84QrHngVzr75ObjqoSWhadW2h5Wz/DrIiznR62P0nA3JLMm7ZQXyO96ir0t8TtPWoJ2erq52BVl5wOcBRM4SCIRcgxN1tq2IhImFoRyRs0PIRyyKsiktYHJ2lMjZXCIP7ZRASAJXVWjA1sBB0YZtDfDEq6rYGlQz3Bkgbd92VM6qAcGysDUwedyGgZOzs6e2yNkEBFNa26mbebhdIxZzYu1zswyRyrK1gLxd3Ge9opBeo9UGbBypOqW1kV+29BxxlbPl1nPVDFYXft21yln0b2zpEaVOarNViRxd3cT98lT/Yb1qLhXPWcM1Mt235RtH4Z4X1ljzHK3648Oo9xEHQGTif9nZGuiybVjueRI1Z7vAx+dD1XC/X1X9iZWzftA0WZEfFaa2FCUgWFT7smUbRsVn0wJEUnJVPJMhdfvRjc/ABy++N9GY2DWQmU6RP1FA5CyBQMg1hluEVNSItoTxiXrDE3YGeSC9uN8sAMhedm0CDlqQFw9ego9bF62EXb9/K1yzIFy5QSDkFa7bfLGqiDHmqJz1yVk8SeUkgu85m907HudsmyibyFLV1iAt1JUyXLFmsKmW4uRsksl3VHLRBmcFdsxt5TwlYzLZIhTdHpPsh5hyjCv2/vHtsOcPb4eBsXAfYFEPx+GBWo+oHq88Nd9G31TOhhMx6reMmQnQKPdEfZ7Ux0uXl3TvFNLUV9Xa84gKmbjyP5v6g9OueQJO+O3D8MzyAWOeeDdT1PuoLiLwoxMrZyN4ztquMW5HebU2ENVyqJ54d7X+LSlnkeesaA4xztmonM0wINiyjX7gZLOvcrQ8VaiB/Ez465PLYeHrm+CVNcOJywIIe4fgY2IXl0sQOUvY7PDk0o2wYtNoeEJCLiCUs0TObhbA28TyQEYOjvkr8p32nCXlbP7w5NKN0PAY3P2cXWFDIOQZuGezbatUJ0QunrNYOVvXkJ+Te0oA0D7PWduET0ceAwRVrWlNBnXXI/SYhgfrhpuqztlTmp6zSYZHCbiIYF5S+3BsRxHyxwSLOI7JSsyqEmgpaqRxxpgQBbywcjBy3Vzyx4jtOduyNah5ih+yITu9rYH/77jK2QCppxxqaxMNlZxFd9aonI3bTpn+Hx5j2vNd2QrwZQv0JZGzEe+j1E4BEWAJn8NKwHPWM+Zru67433mff0XrQ5p/sfiDt32+6Bg1Tw5TF55lQDCsnMWVdvGhdoXrO8K/dvHLcyVdswh4lhd0nJxdtmwZfPrTn4YZM2ZAf38/7LnnnvDoo4+K3xljMHfuXNhmm22gr68PDj74YFi0aFEHa0wYz1i2cRQ+/Iv74OQrHg1PTMgFhjvo90loP4aRjYBLQLCsvbAwOat6ebUD5Dmbb/BB/StrhzpcEwIhPtx93hBhwhSvS8Nx2HO2riE/feVsdv0rrpttkU0OCIY/K56zKU0G6zE8Z9cNV4Gx5nXdakrygGD8VNJ4lzLDZxWxAzKhuuLtx7xZNRiT1MjNtP4xLsDv3N6ukr06Mc4joJyNTM4203eVmg9WveEp3qH6/HTkm2T3gaS/UVSgwe3wDG54fBn84h8vBX7nn7ACXyVjsKoWIPg57rMn5+d///Di9bDb92+FPzz0mpSek3c2kQBeMI+6eI8XfxgLXpu4UPsRflt12dqew/GgTIwSRE0NDIifc972sX91nHOOa2vgsrhiwusbTbYGoP0+FjTPpDZZgmvHEXUXT9Ly8oiOkrMbNmyAAw88ELq6uuDmm2+GZ555Bs477zzYYostRJp58+bB+eefDxdffDEsWLAA5syZA4cffjgMDrqvZhIIHKsGxoAx2UCbkG8MkXJ2swImZ8OUs6+tG4Z9z7oTLp3/cmb1GRhFtgYdIGfxAD4PNg8EGXwi9OrakY60DwIhDbhugcQ2Bs3t5OGkSRErZ9EzopKzeVPOYpKj3ghuv04D2CrH1dZg9UDTb3aryT1QLjancakoZ+Nn4eeFr7OlUq6LASqwChb7zPLKqwHB+HdRysFjkN4u+zTZc3xuTMcAxAkI1gS2NXDznFVIVCWtpJyNQDTq8j31midg3i3Pw8LXN+o9ZxHZo7YF/zc/zzSUs3If5/9j0fIBGK014Mzrn5bSu9hrJVHO1gLK2WDd4iBga2BRM5rUyQDJ1Jztgqe0Jxtw22OMyeQsanPCyzpGjxg3IJirz6oOWDmrvp85ki68qZYQoemSvI8c+1R5sXRioaPk7LnnngvbbbcdXHbZZfCud70LdthhBzj00ENhp512AoBmY7rwwgvhzDPPhI9+9KOw2267weWXXw4jIyNw1VVXdbLqRjDG4POXL4BPXvqAs5k8oX3gK5ukwhw/GKmQ5+zmhOGKP9gNIyMfeXUDrB6swN3Pr86sPoMVn5z1WHSz/qSoknI21+CD8WrDg9c3kF0OYXzC1V/QamtgOAx7zsrb+JufJ3Nytk3K2Xies56zKjQK4tgarG75zc6a2gP80iYhT/jEPW1fT1tuslLMvVym+UdTfemfgzpWjHp+Ud6zsZSzrYpz5WvU6+4rZ1u2Bg3mNC4JKmeZkZxLopzFeS7fOKYo+GTiy2NBAsYP9KavW9xWio9zGcbx8adtB9cIDggW8T7iRYSm56x/TZJA7UdxsCsVNnWsfL3cKrV47TD8z63Pt43/8NtTOHCgOdX6QSY1W3nHuA+xlbMQv30v36RXzsZdANOBHx7WV4trl+AN6T4WsTTecY6OkrN//etfYe+994aPf/zjMGvWLNhrr73g17/+tfh98eLFsHLlSjjiiCPEdz09PXDQQQfB/fff34kqh6JQKMB9L62Dhxavh02j4UbyhPaCD36JnB0/4FE4iZzdPIBVK5UQWwOurM1SVY1tDQAAam0OCkYBwfINPMF6eQ1ZGxDGJ1znOaoC1XMgTfCEDm/95arRvu7sPWclctZyfiZytmlrkJ4SiSOOrQH3wpw1pVcQ34mUSq2/qbxGHVVP8jb1CNlr1FIMTeebwbFMykE3DKExSNg1kckQt/x5nlz1HHVsy1NLtgYOylKVMGEgnx9ui1EWoYOKS//zSLWuENhyGjUgGN5WblITxn32ojy/WFlpEwngMZna7sJg8rFO2reo/Si/l7p8rUHg8PV3PLWTr3gELr77JTjtmifcDkiIKNvosere5MsLgK9X9PrEDQiWRDm7alNFe6xkORQpxyBcr3MavsnunrMoXfzicomOkrOvvPIK/PKXv4Q3v/nNcOutt8KXvvQl+PrXvw5XXHEFAACsXLkSAABmz54tHTd79mzxm4pKpQIDAwPSf+0G36KFX/CEfICvKHYisA8hHnBAsKz9RQmdx1AEWwM+aM6SuA+Qs23uO+SAYPROyRvwNu0kEWoJEwN5GIPGgTwhMvdxkrrOY4pyVn+cvHVa3soLANBV9LdnZwVJjWNTzqLK4r6+Vs9KORvd1mDJumZ07jdO7xd+vknGRmlsRVXzauZnUz3pj4mSPyZb+OcmOcuUY6KVg9WQrh6LUfLnB5VbNy9uQDCunK17TCEq9PkFFKpMWTiJ6Tkb9Cr1/z1cbWiJY0GsMxb43V8sCJK6SYCzCLtXmLyzjUNHMvGcjZSNNV+AMOUs6s+Va+KqYMR4cXVzgfru59sTIBUv0LgmZoxBRbmnOtV4nNsQ33M2fHHFdJwaAFFXl6Q7/iQLGWt9ePr4cH+HxLtm4wEdJWc9z4N3vOMdcNZZZ8Fee+0FX/ziF+ELX/gC/PKXv5TSFdCWKIDmzVK/4zj77LNh2rRp4r/tttsus/qbMKW3Sc7i7bmEfKDWemmpKghCfjFSie/pRBh/wIPdMFsDHowhy8WWgTF5B0S7fUVdJwmEzgAvDJBylpCHMWgcSJNDazr/s8fc3sl4EsX7ahzQqcXNZqp+kRSCljqbJrG1BpPOPa3hYxxbg1fXNReBdpjRL5SziTxnEWmRFBKBbckuNhmBPotzZrISM0DO+nttnYDnbmGKwTiBzYRythSPnOXl+OSs50ZUqOQsyG0aN78odbI129FqXWmb8kKA56lqaL1yNm3P2bA88NhTJfIwRhN4zkqkGvjsbGLP2UBAMDPZpdvO76dF6RzrFObRnDbiKGcZ0ylnETlrURqHlmF4FqIEBItCpLrucknas4ugcmH14X8TtGGGrqHdcxaf38TiBjpKzm699dbwtre9Tfpul112gSVLlgAAwJw5cwAAAirZ1atXB9S0HGeccQZs2rRJ/Ld06dIMam7HpJ7mFq1hUs7mDliZQETf+ABWUpK1wcRHFOXsaBuUswOj+VHOkuds/oAJFSJnCXkYg8aBq6pMVcp6DqSJjhjFaUtia352fatroCqTYrD5nLspeqIgjq3Bay3l7PZbTUrJc7b1N3YOwbwA3L2Lo9Rd5/HaJPSanxte0HMW+9G6IIpyVirHcd2WEwnlUkzFeCu5rJwNJ4l129blbdB4a7d7ddRnRlLOVhpaIh77AKvEss5zViaa4rXUKP7A2Gd2zGK3ItkaRHwGaw1VOcuvSaRsAlCJR5svuG3ng3YhJARv2mqy+DzSlp1eEfoO8ZcFhB+SvUOCG2BqA2FzFFml7F6eTbWexWJi2HPjGjjMBlfFdhbnlxd0lJw98MAD4fnnn5e+e+GFF2D77bcHAIAdd9wR5syZA7fffrv4vVqtwvz58+GAAw7Q5tnT0wNTp06V/ms3JnWTrUFeIQd4mGBP8wTFcJXI2c0JeFHLFogBAHvOZqdmHVSVs233nCXlbJ5RlzxnydZgc0cexqBxoPOF1EENINRwIE3w97z/xCmLre3dWb7dJRWejXw2dO+1hqf1O02KqLYGjDGknJ0kdhGmMTlNI9ilK8kQd0uqPCH3ySz+tU7NLZRwjmVIylnHbbwuaf10zb9dxZgBwVp/u8vcc1axBgg5Dv8bf6fzg3aB2m7woSPVupYcxOrYgMJP/Cb3NWoeURGFbMTk3ahlUXwkwfxEDgiWnoJdtTWwtQ2TOpnXyU/nVqfJrZ3DAADPrRx0OiYJolwzm+es1tYgxm0wLbSE9a1xrnUzrVs+SZWl4vqGZBNFyWyCvHDnlm6iMQMdJWdPO+00ePDBB+Gss86Cl156Ca666ir41a9+BV/5ylcAoGlncOqpp8JZZ50F119/PTz99NNw0kknQX9/Pxx//PGdrLoVPPIsKWfzB7zdo92BfQjxgAfKDSLUJzxkctbRczbDdhHwnK23tw3igfYYKWdzBzyJXT9chQ3D7YlSTCCkCR3pFZauSYTpf8PAQy3eV+OJYxpBrcLhpoyy2hrg3FKqa1Tl7OrBCozVPCgVC7Dtln3CczaZctYnLZJC3aJugmvQl+Bx+D7y4331pV45GzzWBlk5a08bx5eTJyuXYgYEa2UgAoqpCwem51BVRirEKK5HlPbECSmu4sZk7HC1ofXDxepYte6CaDfYLMQmZx37OACAsbqbvRbezRR1flLDnrOoJSW2NbAQjwGlpcXWII5lByY9n12Rvd96FNW/vyDApEC7AKqXOs8z+n0wXaewZ9zV8z2sPNPiWNL3FVP+htcnfoFpeM4u2zjaJuV2NiiHJ8kO++yzD1x//fVwxhlnwA9/+EPYcccd4cILL4R/+7d/E2lOP/10GB0dhVNOOQU2bNgA++67L9x2220wZcqUDtbcDgoIll9IytkMIwMT0sOwZGtA92yiYziO52ymAcFk5Wy7F3XwIJJsDfIHVe32ytoheOek6R2qDYEQD64TOZkkCW5J1oFpCCB8XKmYva2Bq3LW9C4JKmfTqSu+ni5+5q+ubapmt92yD7pKxVSIbX86nfycXAnsuH6BTHMfGfpeHxCMBY61AY9Bwrfx6j/bIMjVludsVMUyT41tDeRz1uennkrAc1ZSqrrXh1+jcrEAtYZsdTJSqWsDe4n7pfQhgCwqTORglKs1Wm1Ab1cRCoVCpK3jzrYG1fi2BmogJ3HeCYeYquesjdi2EWFMSudWNvbnfW5FG5SzjoGqAGT1p7orT7cwkapyNlSB79425ePUcvRlJn21CtVxqD1D8vJcFwVMyuCX1wzBoefNh+1n9MP8/3dI/Ip0EB0lZwEAjjnmGDjmmGOMvxcKBZg7dy7MnTu3fZVKiEk9FBAsr8CELNka5B8Nj0lbucnWYOJjWPEYrjU8MQlRwcnKLP2jVeVslipdHapka5BrqG3v5dXD8M7tiZwl5BdDlTosfH0j7LvjDJ8YdVQAqkRL1O3U3IIGF8HVn1n2rLg8Wx9uOvdawzHoUkRgwUDV4d0i/GZnTAIASMVzNgkZEYCj6klVYDtnjz5zoqCpAOV5sQDJHfX8RtAYJGzBgDmer3RM629XMa5ytnV8CdkauCySKP/2mFxnfN2iBQTj5GwRao2GdD4jVYPnLKqDujCkI3hkhb5b3VZuGoP3nvcPOObtW8O8Y/eItHUcCwOclbMxSXb+2b8myR5EVXhkUs42F9f06VoJ/OMcz63aZuWsSvbbgK+vXTnLpPRRYGoDoZ6zEdomhk4NL36T3s3J2pSrQpk/m4lKc3w3MPUBauHGJ1cAgP+uHI/oqK3BRMVkHhBsHEuqJypqMYIvEDoHdVtCJ8jZl1YPwrKNo20vNyvc//JaeH1Dfl9a6o4D28DYDwiWpeesGhCsg56zpJzNHXh72GpyDwBQUDBC/jHvlufg+F8/BLc/4wfbddkWDRBUoNoigfvH4HFXkCjj6s8s2VlXNY5pcl113DoeFbg8l3fLYuE32w8A/rVLJSBYCiclkafWdhSd1FTT6vJoBsdSyvLkNGEYlgi3kPrgchxPQ1XORiX1+HnzReua5zkp7wLKSIWcixukjRPDZY2H7ki1IROrws7Ar4O6wKOzoYijnH1x9SCMVBvw5NJNgePCTs+VnMVjsrj2FLxy/jWJlE0Aaj9iUvTaVJetKqHf3CqFx6srB8acjkkCV9IQwCcrPaZTzgYXJuL0h8ZgfBkFBAveW30+SafOrgsHabRh137I1CesHarELzwnIHI2A5CtQX4hec4SOZt7qOrzdnvODlXqcMxF98InLnmgreVmhVfWDMHxv34Ivn71452uihHq1n1bULB2eM4OqLYGbe43SDmbb/AJ2VvnNK2WKCgYIe9YPdCcvKzc5E+enbcSYhVWICCY4RiNOktraxBe9dhgmjroYIy23WDSBDotW4NaRFuD11rkrFDOivrEhz/xTpAJz8PRt1S31d0FJsWtaFceCyzW8nvqWo7sOetGRrik9dM1/+rITBfw1N3l5hS+aeWAf3cj45qKY33aKIQxv+dlpOTlGK7Ktga8ati6QFUf62wNpPo4Vk2oKpG/LS7HBsnWwKacrfltJWpgWvmyuD03LlBvnUk5q/Z1VhWmY5WwIjWNAINhUMl+e1r/GFU5q/M3jlN7s3LW3jZ0vswuYEq2uJi4C2Dachx3H/i7FOKX57pDxeTTu26YyFmCBhQQLL/AxAptkc8/1AWOdnvObhiuwljNgxWbJoZydvVgRfqbJdTBjyviKWezeZbrDU+QxVNbUWjb3W9gJQJ5zuYPnFB5y+wmOfsKKWcJOQef/Jj6MlsPp06cXEgTPHHiYzB9QLDs+laT4lKFOSCYJ51fesrZaLYGyzc2CfVtt+wDAIBiMQXP2daxSUkhAHd1onyZIxCBhvvIiaYGs3jOOpaDRQGRvCIdxwb8kLgBwUAc75OhLoSG7lxMaaPUiU+rSi2bBlzOqGproPz1PJWYMtkaRF8YET6ZghCWy7GhIgUEM887RiKorFWYnhVTm3O3zZDTmTxnA8+J8m/XPhOjgq5VVA/eWGCBD0YIRbYXvKeSrUEUOa6hDBWhCvyY7xZ7QLDgcxcXrrsr1Oc7Vlnos7NyFiVbOzT+g/ISOZsBhHJ2jMjZvEHy96KAYLlHp20NqmIima2vabvAzyFr39RlG0fhHT+8Hb7/l6cjH6suarlsKcvq3mCieEZr23o7lbOMMUntHxYgjdB+8G3aO8+ZDAAAr60foXcLIdfQbRuWJ4e2CZH/WQ3m46LY06mSuKV4lm8lnLdVOWuzNUi5TgDRrbZ4/bhqspiC5yy/Ommcn2s7ih0Ax1hW82/DY4Fxok8+u5UxLHnOhtQnBqmCA2gBRFcY8uesW5C7Zj/kV9YMwQcvvhduXbRSq5x1sSIJAyezhAcuOp+mchaXyaS/ntqHIHbWpPxzrZqqwI2iTsVjLduOJSkgWGTlrIFI01Ttkvkvwz7/fQcsXhu+Mydo6+FWjs3WwJUYxmKCdsyZdES+MS1qexXlnkoBwTJQzoa1DWnRKYpqPaB+9j+79sUucCVdfRI3flmuuy90iz4AAOvI1oCgA9ka5BeYlCLlbP4RUM622dagNsFsMPg5ZK1Afmb5AAxXG/DIaxsiH6uqQ20DY776ndW94X6zvV1F6O1qeom3sw1WFJKPlLP5A3+W3rBFP0zqLkHDY7BkfX49nQkE7M/J4brNXFUumiaDpmOE5yzq2nzlbGjVY8O4RdqSDqNWZ7GIuDDgurjYGvD0/JoVxq3nbLB8FxiVs2jh2ZSfaznDUWwN0OeoSkHuGRv1OJ6cH19vqL6tDB59bT2sGhiDe15YAwtf3wR/fXK5VmVnVvpFIIhaaUsasnmk0tAGDcSkmkrechJVXQhS8wgDUwqT1Kkhj5qzrUECz9kofr/n3PwcrB2qwo9ufMYhX/n4uub6A4TbGsi2IaHFgufJYoK2kLOCcHVJ2/oLwbE1Jk8bIs/o9TfahIRk5dpvBstT8jG0o6Rdu8t1lsnS5O8jgHjvEFLOErSggGD5BXnOji8EPGfbTKjX6n551QnQXvj1q2VMMHLlYJz7FbQ1MF93Ttxm1S643+yU3i6hCmlnv6G2OfKczR84Wd9VKsBOs5rqWQoKRsgz+KQNe7i7Eo9qADAd8RIsz/9s95zN7r1k286LYfqt1vAy8ZytS2NSfZ7PLB+A0655ApauHxHXrdQiZUVAsASvJS8CwREG1wl6nC3TzeP8zzpy1jZOcyVb5K3qIeRsjPMQylkeECzieEw9vubJJOvitcPwsV8+AF+96jFBCunOnTHzPYqi3vOVs0GbhpFqQ7vw46uZFc9Z5TdRBvbUdayaukPA1HZ0kAOChY9Bm3VMQkgFr5G2PJcFeuV4idi2XANdwDhTWh3UZ6+tylmH/tgn/ZkmIFjwGsWpvem5CVPOxu8PlXtmCAiWtG/X7bYxpUlanqtXrmnXzqbRmi75uAKRsxlgck8XAASJJULnISkhaetp7qFuca+12XMWl9du1W4W4JM/F4VOElQbjVZ50cvh95x7d7vYGtQ95jzxigKunJ3SW/YjI7dTOasMIJ0G5oS2gvcR5VIR3rRVM0gPkbOEPIP3YCZFlW0Chif6pu3jKjzpGC9QXjuUszhrm1LRpH6rNbxMlLO4PBOx+McFS+D6x5dJ6kduZ1DQHhENvAZpeM5iZKGclfLQBL+xEUKuxUSxNTCpH23geZaLMZWzrb/c1qDheRIpxAP+rRms+Fv7PZ0/pcUjM0KdVOUsvgejtYY0dhYKPH4sk20NgOm3RrvYpwTqxc9dQ7aFnZ6LcrbhMcnCKAoZqY5Xw5SzHC4ikYAC1gtef/V7APs9d+kb1PFqe5Sz8l8bfILRn6OI3zR1jdMvqdewBwXts0F+t0R49pSkpmcmad+uPre2NGo9IpeFPtsuWxbv47yAyNkMMKmlnCVbg/wBKyFrbXhxEJJBVZ+3Xzk7sZTWQjmb8XWMq5z1PCZUKzMmdwOAWS3KGEtNtWDCwKivnOX+cO0MSqdTzmYZNIcQHQ2snJ3ZUs6uDveFIxA6BZ0KxjV4CO5+1AVLI2miOQaX1+JmM/WclT393NJh1Bry2aVVV8lqyzDG4GOPSt0T944HAiumaGuQxivUdcIsT+SjE4EA7lYVuvQ2YOVsuK1B9PPgefLdOFHHLrwYvGCse5bl9hq0e2AqMYoQpU48rWmMNDjmK9nUhQA1ngMDWeGoq49rc/EJpWB+ocpZKSCYfgyqxsSIRs7K/3bdgu7iZ69WQ6cK1aWzEX0u11wNAtyOgGBM+WtNi4hc2zXy845ef7ULdydncduMUJ5N7eywq8UV4jq7KmcTlOj6nOrqgp+PYhorlx0CkbMZgCu+VNUfofMg5ez4gvoMtd9z1i9vIgT54YPm7JWzrFVetPs1ggbBMyY1yVnTwFj1jMrCQ5orZ6ci5WxbPWdb587Ji4bi6UXoPGpiYloUtgavrCXlLCG/0HnO4rmU61ZCtS+Kopzl3xUKPsHYrohgNtLAZmvgut0yCvA9MO3K4FwXY0xMuH3P2VaaRORsi8RKg5x1JCsNTc8hf5yHO9nWrI9bGXjcGTqssJBdYYeUS27EjQn+mMST2rRPfDKJeFdLYbgyCiKRs4Js5ucj/z6Ag2MrbBquI0CzzTD0m64+rjUTi1C8PtK9CuZSQGQOHnfWPaYdM6s7maKMQW3+rlblrMM8xNbObQsaOk9iU1odgj6u2Y+Vo1iy+GmDixK6usbpD9Vgfz2tWBU4/0deXQ9fuvJRWLZxFB0XzMOpPHX3ilQX9H1K7Kx1wU3q+xMUpSxUmIMWBo9ZN+wHA5vW1xW/Eh0GkbMZgAcEG6k2IkfhJGQLPJlopwKOEA9DnfacnWAexb5qKZqnWFTwAWRUIpNPiooFgC367eSsOjDOom1wxcfU3i7h79ZOcpSXNbXXH2SMVcd/O5xI4JO2rlIB3jSzZWuweogUzoTcQrcFXPKqc/RkDSpnTeX5nwWB0fpTLBSQcja7Z0YlJYwTPkP3Wmt4MoGdUr0w6WN6t/Dr0vB8UqHFgyHlbPw6uKiiXOFKMsTdcmsKXKd7/6vKKTcCl0VUzkbLn5cB4BM4cbfDY+Wtzl6hqRA0E1L4dxVJAoKp/poDo1g5y6S/qq0BA6yuxecUnWnC547LNGVRRg1G9SQd05CiaoDWSPdR/bfj8+AyD7GqDS3pAkRfRMIwoJxtx3xNvE4iXnsluVY5G6P6/Jy7W4pZnXL22EsegFsWrYRT//i4XKcWoly2oAIbf8btPdm9wAs+LnVJUppNwa2rEy5vzWBFn3icgcjZDMCVswAUFCxvqEkDYZo85x0jnfacdQjWMZ6AFySyvJaCnI04OONWMJN6ytDXWnE2BWMYqcVXLbhC5znbXuVs89wndZfExIGCguULvD2UigXYYcYkKBSaSqGJEDGWMDHBu37cl7kqGSWiVSUKjAqXIKErtucXAArQBs9ZyyQWw6SqDQQES6mudYns1r/rsFcir1+BBwQrplAfmS9PBFcOLa6qS1VZcqhEUKlYENfIPyA8/2rDk+5J2CK2uh3dhQThSeKRs/5nydbAC14LxjDxDoHzbxK2+nKiEOa+cpbbGsjHDo4FPXyFOtYLtgU/jf7+utZM9ZoNI4+4BzCAv2uJQ+f3n4icDfRH+r5YhapO1edtzsC2KBIgxSy/6cDH6twL2dM8D2nvQGQROi/+jAR8jlOEZyJnNeW9ssa3v4pt8xJYcNHnk/Rsdc+QrS5JyGDbsyF/Hzxm7VBF+/t4A5GzGaCnXBQriBQULF/ABBvZGuQfAc/ZDtoaTAjlrEX1lCZ8z9lo12yk1V9O6i5DT1fz9WQiIwNbyjK4P4MVTM52znO2p6sEfd1Nslr1OSN0FnyRo6tUhN6uEmy3ZT8AUFAwQn6hU8HIKinzsXjSpXqXmw7D39c9uewCFFLZmh8Gl22stu+rDdWzM526SgumJlsDdL94cmFrIIjt+PVxUUW5whQtPJAupnLWRBipWZSKhVjK2RFlzhY2wVezjLK9WtgaxCRjupAtQsNAKAsSVKectdQ3ynCKp+XzXpXQxtHT1W3oQeWszyKbVYBu9WJKu5bbTjATSTmrqEB1O7hGa4rtWiTlrJkYtT3LLju3rLVAP4baGjjWiYMTx3ysqpbxx4eXwG7fvxXueWFNaF6uEES+S9rWX88zL0rIeUfvD/mzzAnqnnLzWujmW3hOGUMYDgA6Kwr8W7w8dfCf1/A0aj2iwrZocO+La+HKB1+D1zeMKORz8zNWzo7n3WtEzmaAQqEAk7opKFgeUUtoa7B47TCcd9vzsGmkFp6YkBiqrUEW6kgbJqqtgfo5bfBIqFHL8JWzJaSc1ZOz6vfZBwTzVSrtQgUpEfj1IOVsvsDbOLe92KllbYBVEQRCnsDnLHgM5Kp6wf2susBtOgznxxfRsOcsp0Sy7FnVvM1qHP339YYXewJtg+w5a7A1aCWRbA24cjYNz1ngecTOws/LQKjZ0kUp1kTqqgRnuVgQxHWUclRBQBRbA109tMe0kvAF3yhTEZw7V+fVPNkP2Vda++1F6znLLLYGUQjjVoFid5HSkAZwQDBBpvkkrfpcYeLWLwOncaubSgSHPb+lktnWQN2yD6BTzrrfyLjKWbeAYOYMbISdSqpHDbjHr9EkRM7itvDoaxug2vBg4esbQ/NyhU5lbQIm6Z0sTmLUJ2Br0MVVxMHcJIV+zMWqoAWAPp+klkGqHYm+Lumws0Fytvnvat2Dk698BL57w9Pwr+feDf98ca1fXOsQiZyNX4WOg8jZjEBBwfIJ/GKLY2vwq3tehovuegnO+vuzaVaLYIBqa9Bun+DqhLM1QBPBHNoa8P5yck8ZekNsDVSSMmtbA06+tZOk5yR3T1cR+lsDXt32OkJnwBgT7Y6T92+a2QwKRspZQl6h95z1Yd+66H9W38cugTv488KTFhE7m6XQRa2biWwwLSg2bQ1QfinVq+6wO0dSziJSu/k3Bc/ZCARHWoi7Bdak8NbZGkAM5ay62zGUnDUQCTbwqvJ3RpRxLc6ej0nqDVl9yolVlSvRBXwyey+73xNenlDOKnlK5CzPX0Mg899FGi94TlHALysuS/wWppwN2Br49+jOZ1fBS6sHA+RsJOVsgFRD9bYpZ53IWUu5liBftuNcTk2nnNX5gqbZzfikoUNaRNK71CFOPfn5qrYGuraB+378azTPWeWZNvSPSadH4nhr28Kf4xdoejbqnic9c08t2xQoW7ITG8dTdiJnM8IkImdzCUk5G4Nk4dtzrnvsdSnSIiEbqMpzCgiWDHWp/Wd3LX1bg4jkbFXnOetqa5D++QyggGDdKDJyu4CVs72knM0d8IC7SyhniZwl5Bu81Up9pqNyB/+mLliajtJ5zvKvCshzNkuop2Qie0zn3rQ1wIRiOvWSlMiGd5hQEqLtuJwIS0c5GyTzYucVox3F3cZrK6upnFWPDc8/snLWQrIZj2ldb06u6rw5w44F8LdOqwHBcAAs8ZmpthwgedKqiEI0chLVJ5sVcnbU4jnLmPwsomshEU2xPGf9c1eP0ypnETmrjrO4zcF9L62Fz13+CBx2/j2BMWgUQjtoa4DasiUfJ1sDR5LVpFD089E/ayaIGAko7g5uC/49D83KGTpVtDkta5Xv5jkbh2AUylnF1kB3T2sxdq5w/P7B1+ATlz4AG0flXbzGZyZp565Z4AgkkdTtCYpSjsXqfwydLQTmDLK0ScoaRM5mBN45ka1BvpDUQ5Sr+Ooeg1/Nfzm1ehH0UAfK7QzGpJbnMijKO1y2UKYBfq2iqnO5aqW/uwy9re1ARnI2oJzNwHNWq5xtXxv0PWd95ayq1iB0DphY4f6B3NaAyFlCXqFTzroHBDO/Q0xzIfw93/rL8ykWfM/ZZtps+ld1YmfyrzctKNbqinI2pXq6LADjySmfcAvPWX7xUpgMJ936ivNSP9vSRVKKoc/4XgWVs0VxjbQHGxDwnA0ZVpiIBPtBzT9Yqem6kC0pZ4v+bh75WUbtBZEqOnLWaO8RQznL66NmiZWzSD8p6qiqRnVKV0zguj56frsOHqhXzvqUiLpji49Db3h8mfguye4tW7uxnZ9LO7H1TbYFDZvnrJtytnk9uLACQE8QpkmaMeWvU1pLu5fSx6gmP90eB+Wsqa90qds1C5bCw4vXw8OL1yvl29t4XLgolNMKmGny0VW/l9+XwbY1fqlZImczw2QiZ3OJWsJt6pgounrBUlg9OJZKvQh68IHylN7m89RJ5Wy7ieEsIHnOZngt+fYmxqIN8n1bg1KoUrQdnrODY0HP2XZaa0ies912JfF4x6qBsXFn2YD7Bz4x5bYGr28YnbD3ijC+wbtKmfBwm9RJFgUOylmVKOBBxPi3BWX3eVZiF5V4NClnTd/XVM/ZlOoVRTnbQIqv1lpQup6zKbzabMo8OZ2+7YXnr2+n6uu/VARQuVknW4PInrMqwRVahMiTL+gBuG/bx8m6EPGDryF/LTFEfDY/q8+rOTCSrj5/f2oFPPX6pmBarpwt6RXwfJEb11+0aU1QQZ+MCZYB4P7sqYHumOY3DKycrajK2dZY7JkVA+i7+GPQADHqmX+LClevZ7W66vOPf3Zpn3zc328ICOaToymShoo62gbcHiKsoTgDz3W4Yrany6yclcqy9GU68Otqewe79sUucFE9uy7whsG0aMCU9inZQmhY+nEsnCVyNiuQ52w+kXSbOn/5dJUKUK178Jt/Lk6tboQg+OLGtL4uAMjWJ1WH6gSzNcABC7Lcnl+LSQL7AcGw56ybrUEWilasnO3qgHK2wpWz5RL0dTXfKRNRObt6cAz+9dy74MTLHu50VSIBDw55MJStJnfD1N4yMAbw6joKCkbIH/hEsG4gPKzbYi2+5boJckCx6smESVM565MiWfWuQSJCX5Lpe5UAS2vi57KbC2/P5tevIAKCJfecddmy6p6VG8kQ2w/RcfJdLhYDtgYuxajjirBLEkc5y1N0ITLQdWirszWoNzxoaMk9JtJ7LKiLxuStCpVoXLp+BE75w2PwH398PJBWkM1FPTmrJegM5TTtF+Q+Qv3sHhCs9Vfxuca/Yeg8Z3lwKy4SwORsRfF/jaScVf8dkZyz5m05Xt7FoCfBdGld2jW/Hr1dJbFoJN17DUmeFAF1tEta5naNo3aHmMDmgcB6LcpZU1lR+hCb73tc6xgdVIsQbZ1iLrgFy1LyFd7R8g86ywyZnB6/7CyRsxnBtzWYeBPp8YzktgbN+3n8u94IAABXPvgabBiu2g4hJABf3Jja2yRn266crSdrL3lDDU+sM/Wc9fu9KErTkaqOnHULCJZF28Ces5x8a2c74OqN7rKvnB1v6lIXLF0/CrUGg4Wvb8xsW3MWwOQUn4wUCgXYaVbLd3Y1kbOE/EHYGjTwRM7/3fYM6vxjXcri4P0nLyOonM3m+Q8EBIuonK2qtgYpUQx4wTSMnG14vuKrJGwN5DRxoFMWxoVcDbd2FFby2qGKltixnXOpKJP+Yek51HsQdkyA0HIYHoiAYEg56zpOkpSzJZ/4we3WEwsgsuJNdy7mIH7y93wstEnxuATAytlwSkEleQLkklS3YBlRoLbrsMUVrJwdaxGNW/R3N/9da8DqwTHpOFU4EMlzNkDqB+sdF/ZFEf9H9ZqqfZ+8Td2BnG1dj55yUVxLqV2KtpheH88CH8zg5dsC4RlydwK+nh/Z6w3w9m2nwXvfOqtVdgg5iz87Ecf8+TET6mkuJvrPkDlNWspZ9WhVAa8/Ikgej5+ZRBBEzmaEyT3NiTQpZ/OFpNvU+crgkbvNgbdtPRVGqg247P5X06oeAcHzGIy0XvZb9DfJ2bZ7zqKBo0uU1LwDDx6y3J6Pr1U05SxXK/gBwUy2Bll7ztYaniCGm56zXKXSvjYoPGfLReifwAHBuIp7rOZpJ395BW8LXSWZCKCgYIQ8g3eVdY2qCcB9cu/iOat+x99B/PuA56yl3klgqocK02tEtTVIq6J4wdT0bsEEGyc7iopyNsnkW0deJc0LwK4GDVMxcty0cAXs/eM74Ht/WdTK062dlouFgK2By+mFEVYq1F/dvCz994Y4zlk564Mfr6q6BQmFVKjAgufPDIQtgE7RyvMOpufdgEk5q8+n+TewLZvpy8JdjWszVQOLuS5AAfjEK597VGoNeHzJRimNOr+PZBUWIGdTJNKsJBZOpx6n1sn/7KJJ4PPjnnJJkLPS1nNNvkmBg9+FpkU+x1l4zuI837fbHPjrV/8V3jy7ORYMaxtxvWJ1tiB+Pvr848DvRsIJUpw+DgK7XBjTfi+V7XdzuELjFkTOZgQKCJZP4MlEnABP/IXd21WCr773XwAA4Hf3LRbelIT0MFpriA6X2xq00+8TQLU1GMc9fQtJPZddga+bKfCKDsPC1qAkAoKp3l8cqoI0beUs9kmb0lsWWxDb2QY5yZ035eyPbnwGPvu7BaldczxwXTkwfny8+cQDBxIBAHhTKyjYK0TOEnKIMCWKbSKHh03qO0Q3cQsqZ+WJVrEAUEDa2bREVZW6sj1dVeMYunFjQLCGJ08+k1XPL88h6Cjeni3sIFpdjh8PLH6NVBIrERxJBldV17xbnwOA5i41gIjK2ZBydVDJ2LBXXID0j0D6YKWmu3LWz79LsjUIXncGmBAL+ss2FYT6ckzkrO758D10HchZ5a82UJImuI8c6MetoapKzbC2I+rGWICcHa014ImlG6X0A6PNMSInpRN5zkYg0sLasO1XU5A1bbkRCUNBznYVhbJfdw9TFM46KTpBScM0z4Itb1fg+68unoW1DRbh/uP0NqV/WsGxpIUfxwW3JCWqCnS82GQsW1OHtHa3dAJEzmaESeQ5m0tIir4Eytnecgnet+sc+JdZk2FgrC4GjoT0wJ+dYsF/nrIMYqUDtjVoNzGcBSTlbIbb8/FzFsUnGNsahCpnM/ac5Qsu/d0lKJeKQjlbrbevDWIlAidn8+A5+4eHXoO7nludmqcqHmCu2DR+yFnettVJ6Y4zmuTsa+tH2l4nAiEMfAJT1xA6+Hf9seZ3iJty1lPKk30N0phQ3fL0Ctjt+7fCX57wI6urryHT+9w0xqg1WOQJtAvqDrYG2IOTJ1cn/0mGRpjASwpm+KzClYwqWqwJbNXV2RqEHQOg90C1I4Tg0h7BUB1b5Tpee5yKk7MeAy056yEbjOZ3QdLDGBDM4Eeqq6awNSiGUwpqACfdOFSndJW9S0OLaR0v1zlsdwBPX2v45J1va+DBmsGKlH4AjRHVOoZBTekakBEgXFjkHhDMTBCrdXSyNagHbQ2k/tSBZBN1cbyW/r0NT4vtPqIo3F2BXyn8/PkzEU7ORmvfnnh+1P4Kp8E/hOdprhvOxq1tpamc9d9/5mN0avs20wWpgsjZjCACglWJnM0T0vKc7e0qQrFYgFMO3gkAAH7zz8W5ULRNJIjgUN1+MKYoKsw0ICmtJ4CtQdxAXVGBr1WUASsOCNbTYc9ZHAwMAG8h7JByNke2BrxeaS0+4gHmynFEzvq2BvJQaqspPQAAsG6I/MgJ+QOfYGG/U3liZe5LJVsDy5ZKXXoA/5nxA4KBbGuQQjf+xNJNUGswSemmZhtVNVxtKJ6zKb1u6tKCqb1ODUQq8Ml/Gp6zOjIsaV7N/Nzaka1YmzWBLf9yKWhrEHYMQPAehJFEQSLBmryVZ/NvoVDwFYautgYoHbZFqGjGXAxk1aiO9DA960H/0VbdNenDAoLZoBuH6oJ/xVEB2jxO9f67zb9jSHW/RWvX3hjaycfByVk+349EzlpUq7psutEYY6waRs66lRtQKFr8S11OrVIL2hrgPHWKaB3OveU5eOePb4dlG0dDy2TirwPZij87nE/U7hA/M2LxrHXbQslZ9DmKqtfm2SxbwCR4P+DPlmzSIkYDu1yY/nvdMVEXFPIKImczQt4CghFx2ETSbd3i5dMiSj64xzaw3fQ+WDdchWsWLEmnkgQA8BWCk3rK+lXYNkBWtYzfjp4DT8azvJaVmAr14VZ/ORnZGnTKc5YPvKe0gtF1dcBzFisR+gRZ3dm+vN7wxGApLdsefO/GFTnLlbPKpHT6pKbaZj0FiyTkEDq/R9dgHrj7c/KcVf7N3zs8bbGg336eBDqVnzo5Na3NmybR9YaXSbCRehRbA+YHfuLEI/acjTMZTfucpAm0dSKvr4MKVTnrqjAsFYuBY0OqBAA6xag9vVqFKMrZAgAa2zraGqAz6Cr7U3jcdkQdGCZVg9eZgfl6BLcWc2ItmJZfs5KLrQGT/+ptEoKf43iyqnYdYco+np6PsQoFgKmCnPUC5BC3NegXO/vcx6Bq8Sa1IAduymEL9K6esyZvTz+t/28X4tnf6VWEUtEPVify9/Tlqrj/pbWwYaQGzywfCC0ziiWLLRiaPu/wPDFkW4PmX1flrG5Bwl63ZpqgclbfPybp21396CViNJHNjvzvKJ6zjq+f3IPI2YyQp4Bg//vPV2C3ubfC/S+t7XRVOgrPY9KLIqpy1vOYGAD1tgZF5VIRjtvnjQAA8JhiFk9IhiHkP1oWL/o2e87W47eXPAK/yDO1NWjEI4H5ToN+FBDMREaq36dNmvKBN1fO8q3r7WwHOs/ZkQ7vxsCLFMMpLT7WJphydkaLnB2q1APelwRCp6HznMWTKVev0ICtgYPnrBoQrFAAaft5GmIX7USYOaQBs1JS3TqelirHydYA1Y0XW1JsDZp1il6+q2LaFa52Ba7beFW6Dye1vYrLBs/ZUOWsgZQ0waTyssH3Wy4ghWH4cQDytcJqygraYcTzYig9Y8GnkzHz+anXlt8vnf0Cfy66HGwNfCVvi1zSec5qCCbp2XP2nJXLkgMWmUlhXwEq71gyKWfj2BoELQXs7Qj/Hk7OupVrsq7Q5ePmOdsSE3QVoaRRjIr7EJKV6O8i9EdOalOUxo2cjdYfyrtBFOUsykunMI96rXkK9fkxqZ2TdO0qZW+CpJJOUJ7p2bDtYtAFhhvHwlkiZ7NCnjxnH1+yERoeg4XLNnW6Kh2F6n0ZlWTBakCunAXwV1YnAnmXJwyjLe7lDilnZaX1+L+/8uJEdtcSX6tGBEKd3/PJPWXobT1jFZOtQVVVzqZ7PoOqcrY1ympnO8BKBH+S0Nl2iIn31GwNUBtZMZ4Cghk8Z6f2dolJN6lnCXkDn7TUDZMpW1fasLxDtGo0pbvi/ac/kS0Anqum4TnrK2fNhLORlLLM6LBdT1pvGymaOdOTBvw88PXmpCzueeLUCR+TxmTWtR25Rie32RrYyJNSQW9rEHaO6nglPDiT/G8Xr0y8MMHfE3E8ZzHJo1POeoxJW8mDdTMHRgrYGiCSV4VqtWGtf+tw27BQR/Dj9K7t1Ffd6vLVpW9+iQM/48C06rlz66s45Kz6sIYpsHHWYTth43rOBgh5S/10wDESdIpRce8dnyknb1pFMrl2qALH//pB+OuTyzX5+vm5CH2idoe654BfB8b8vkEXOC+sbZoqFyBnDQsQSWwN4tgVJHmVqFXVKd9N5QWPHZ8MLZGzGcG3Neg8OctfNCaSI89YN1SBJevSCaqiTiSiklNYAdWLthPxKO4TgbzLE4a5rUF3WWyX6qTn7ESwNahLtgbtCQgWSTlb8a0sOBlZVSIRc7TLc3Yq95wtt3+BoIrIWT4BGO2wchbf27Teb/jZWjWOlLO83qoSolgswJatQCLkO0vIG7RqNEclo+Q56zDmMSpnW/8uFACwxjGNuRQO/CLyVdKY+nHbewQv0KfFzqr10F1TEfwFvbOLxaByNs4EPK0JvMgPkwPWdLgO5nS2gGA2QrNJkEQPCBZUztrT29SGJvBrjm0NXBex8f0qFf2FjSqan/DrwphMbASoWWYmL4IktfxXTtv8ssvF1kCjYlWhszBwJa+lshQyUCL2NeXz33mcg95yCXrKLZFA3Quc+8BocwF/Unf0gMVqyrDFI9wvpaWcDbZdc1t2Us4ixbFOMSq8Q8PIWbGgEFpkgLi7/+V1cP/L6+CPDwdtBnF2TtP1iE2O3yPcZ5XQZ34tdApz150rahp19wp+bF1tDeoND0787cNw1t+f1f7uuiAW1ZrBJR/8b5dFBxOxO95A5GxGmJwj5Sw3Nx+P2ys/+asH4fAL5sOm1kswCWpKQKeoZCp/YZeLBRG5HcDf0lqdAORdnoCVs10a/6J2IGkAubxBtjXI7lpWY3jOMsaErcGk7pJQzgLorQ1UBWnaZLMfEKypnC13VDlbgt7ufAQEq2WhnEVtZMWm8CAQeUFdkLPBodQM8p0l5BS6SM/uEzD/s83vTnyn/LvmyROtghoQzFZxR+gCiNjIDvlYcw1w35eGwhcg+N7S+c7yJHVJOdv8W0BdTyxyFpeTinTWLT/XYDUF1XPWkIeKcklWZPvH288xbKt3ID/l5yhbkosoIJjrsAJXr1AoiHePpOpG7R9HOseKXV4PU3WNtgaaa86bZcnB1sBFBadTzsaxFFFJWbk/0NWt+WW14W/PL4prFWw5fD7SHysgmL6uut/Vdh4WdwD3rbZyw20NmDGtDtjWgLdLue4M/d8M35vW4VkS95Yfa26nsqVDBsrZVpZYOYt9mHmddMpZ+f0bXhZPYlPOypfenOk/X1oL819YA7+655XQcu27IUIPd0Lw2eB/LeSs+Ktej/EJImczwuRcKWc96e94wusbRqBS92DNYCVxXiqpEpXM4S/EnrL82HBTfpX8JSTDMPKcjRo0IS1MbFuDfClnsafXpJ6y9JzpCMmxlrJaWF6kTDZzWwOhnC1lU44N2HO2v4t7znaWnMX3Ni1yFrfFgbF6LhY1XVAz2BoAUFAwQn6hm/y6knR4sq1aRekOC5KiXitt83tbwKe4aCikjK5uZq9Nc/kVDQGWFOr7RPd+4XXF/WQxE8/Z6McH8pPytkymcbmW/FSC1VXhXSrqbQ3ChiM2D0cXuCg8RdsrxA8Ixs+Nv3uqkpVUkJBlzCdqOSHMmPk5sG2rV+8r7xPclLPyX23ZEnEfrI/rPZHbClPauu45k/8W0cqR55nbMx+bRRGPRPGYVdtUuK1B829J8wDYnne163Hk9gSwmIA/t/WQe6mDIFqdSEre1/M2H+z7RVpMTLvkHfHhbyjPF4C8q8onZzXKWYuiWV+35t+AchaT+o7K2aEx+3jbNR/XvjkMZuVseNlqGrI1IEjgtga1Buu4YlXYGoxD5SwfqFZTID5rylNbq0d7aPmLByv6AAC6OxAoaHMA3uJeFlu/2tvRTmRyNksVsjxRcLtufCGrUGh6eBWLBUHQ6pWzze94wK6sbA1EQLCOKGf9BSEeEGysw+QsPv+h1AKCydd05TjxnRXKWc1ge/rklq0BkbOEnEFEejaoF+2qNvQOUZWzIekB/N0o/Oui4g2aRjeutTVwUM4yZvbgBNCrE5OAMeZka8BT4LQlYWuA84tRh5QDqMSxx7BNoG2eszYSoxkQTEdO2U9SbRdh44rgNlp3YiVOQDB+u/iZ8bExbpuCzGN4KzkiHYucnGXOixQ21SlP6+I568LO6rbey4Gl3GDz8dQqZ5WAVYUCyMpZQ8H9rQDgLn7DflnKvy1krXovwndPme8Hvo+Be2xRzroFBPNtDfx2HXzOwy6TCO4UQznL/62rr9QeXLyhQ1PIELYG6LrjxTPef3fp7otjv+bXLfgOb/3g54Pf7652PbqyLO9RDNlGKP7LxNSnWhf7DMe2mTJIDUTOZoRJ3T6Bl1ZE67jwydnxRS7hgatuq1dUqMrWqHkalbOtiblK/hKSgW9xn9zje862U7UIMAE9Z9H5qCuuacHzmGIH4XbdBBnfXRZbGflCiI6c5QpSbjuQNtk8oAYE4wr5TilnW++UkQ7bGlQlcja53QxA8N6NF99Z/gzpBtu+rUHyXR8EQprgT5suWAuA+9ZFlUgMUyvhMnk+TWfQdH0N1CAxumx1k1UTEdctrKvSCwh27i3Pwb+ee3dgV5hOiCDIdFQ+n/PjaxfPcxZ9TuHiu5IMMnFuzi+orNbnoSK2clZ5v4dd0zAFpA48SQH884saEIyPkfjCoKzqbpEZaDM+Dg7mE47max8k7sy/8WugW6QM1p9Jf3WQ2oYXLNO1masLAGFko6rsxH2Tx8x1juU5G0E5q9Y1jJwVylnNuMSkrNT92/VZ46iIOXJJWFxIQSdFvm7XKYpFiErK6o/1v3MKCBaxO9QHBEP9s0U5a1tI0JbVqn7gHWxYRLFlGSbcw8far0n0Z1QHU5/qVrTShsepsQGRsxmhXCqKKI+d3qLJX9phPjV5A+7UU1HOJrQ1MClneUdLtgbpgisp+7tLHfOcrU40z1nJ1iCba6kuergqWocrcuRbABBBwXSWLLw/4xYyWXnOTu1r2Rp0wFpD8pzt4gHB8mRrkE5d1IWCFeOFnLV4iJGtASGv0AWYkiZgjsF61HeILcgOB3/WzZ6zyd9LvDuxbeHVjSVMBFlPl87XM1k9f/mPl2HZxtFAPAVdvfhX+HrzrbOy6jgZOZvG8Mp1Iu8aAVz1nLWRVhjlYjFA7AYqqIEpEJYJAdLfSe3XIkmL/rvDPSBY869NOevblsiklbrdHatpVdiJOvk3sV3bQTmrWgfooCNR5a3VruSe/DlsQUCoMPk1Lvi+xYyZ1c18V1OqnrOoLDVfV89Zva2B+fkJqqXRbw7tWgSw7SoC5x/1AcHs+Yh7HiFoV5Ck1eRruab6rKN1iH5AMP87rKLVjRfxQor6XZQyOYy2BpYsw/gV5vjsuS64hcG0UGH3nGXactPYDdIJEDmbIfLiO8uJjfGmnG1IRFLyuqukUVRbA/5C7A4oZ8nWIAuMVJByVhBj7e1p6xPN1gArZzMiGdXnzPWeDaP7zcEXuNTBKGNMqAcmt2wHsvKcndLTCgjWGm12zHO2pc6o1L2223tgYIIgrXebSvKMG1uD1jPUpVFCcOXsuiEiZwn5Au8+Gg39hNCVVFPfIbrj1AkVfx/grd2YQkhjMqXzHQwQETrlnOGVyBfGJHI2YR1N0I0zdGS6znM2zmshapTwMLiSrq6K3YDnrKEsFaYt9mHnGPSctacP+q9ak7eOaf4tQPSAYAHPWYutAVaLMvE/v82oalIM9TrYiB5engs5a9qijO+XjoC3ET+PL9kAGzSLoCoRGda8VaKsACh4GlIeq+A7ZaMpZ+3/lq6B0jbCyFl+aEmzaCzbJZh/U+vkQhjKtgbNMZHuHeMaZC/K9v6g52zwWJ2lg82KI2p36JOzcp78ueB160KB8xrK+9C1XJ01Ef6+WR6gz+ZMw7gh2Q7CVif02ZqjHaY+1aXsccrFBkDkbIbgvrMdV862OvLxppzFg9R0lLPyY6sGswiD2XO2/V6UmwOGsOdsRHVBWpDb4Pjv9uUFj2zOR1WQu9oncBuLSRI521KLKn1XrcHEuUxtl+esJvBG1sCD3T7U73SyL8fPRFrvNpXkWTlOlLP8GdJNSqdP6gEAUs4S8gcRed1AuNgmcrj7C26pDCJAzgrPWX8ii9WRafTiWrWdSn5EUM7yMZ6kNM5oOKAb6/Kq4oVBrsiSPWejVyoqKRAtP3OGNg9TDJXocCV/TbYGYacYFsE+LD8XQgmrxjk55Dp+EXYgFlsD3rYZqh9j/jUXnrOa+qt5qHUGCD4n/nbt+AHBSoZFBqG0NXjOPr1sE3zkF/fDqdc8ESgroEYNufuewvA0Vf3oWhkO72+NWaN5zjrWBXQBwcLItBbxqHsALIsxAc9ZnNbh3PwYCSXgTUG7CBZGkov6hBYZJLktZUjENCewbeRsePFK/nrCt6iIi/BzwucTkQOCtf7afN9d3weh/IpEuprzdPURD4OpT7UqZ/mjq/ZN41Q6S+RshuA+NB1XztbHp+cs7nTSqLs6kYhKpnJChKv5OITn7ATwJM0TOPHTDAjWmWtcm2C2Bvh8slKAxlfONp8vbGvQa7A1wGQtV9pGXWwJw4AgZ5vK2e4OKGcrSDmL+53wgBDZAQ/k0nq38WvK7/24sTWwBQQjWwNCTiGUsxLhYSYyMfDkJ/A+1qmVlK84wemTTKAoZ5P3rw1ETnGEbeE1fYdJPvn3bN4D2vdlq+78HSdtm8XEdowqxZnMx8lbhXwpzSkD3InjIoLZc9Z+jur1Dxv2BYMo2dPjNAUUEMyVnOXlCVsDzaIxVo5jFSIvQtqqb6iwbYu7SYVeLjp4zjL5L4dJOatbSMIHP79yEAAAnl0xEChLVQ6GKmeVv1jVj6+f2q58z1n3MWhYXWSFq0LOOipnixri0aamtPkMu3nO+mIC3hZwni4kW7Nct3Q4jaq21Qd8RMe5WHFE7A5DlbMaz1m+gzeq5yw/l6DCHX92e6eHe87iexhep+Yx8WGyVLGOSyB4HcOOyTOInM0Qk4VytnMT6YbnB+cZd+Qs9pzNICBYVJJlDJmdY3SRcjYTjHAlZXdJvNzavZ0bE1Ht9BrNCvj6ZWZroDxnUT1nsa1Bn0E5y5/FUrEgCNxGyqSpHxBMVs6213PWD0JYKBT869FB31ncF3O1c1Lwd9R2W/YDAMDKgdFU8s0avC3oBvgzJrdsDXJMzi5eOww3LVyROilDyDf8bfL6SZc9kBNe4AtXzgbJWXniXSgUFM/Z5HCZzGkDAhnI2aJm63lWj4ze1qD5l49ZMZGV3HMWE/TJ4aoAc/acBblvdSUcyui+yfUzHwMQ9I0MtzWQ/x2FUCoWYgQEUwhC/u6poDFSQ/MsN4lauf0wYMZrr9ZHaifqdvjWv7sU5az672aZ8l8O/A7VkYLyQpKP1a2AemuGKoGxp9pWwq6wp/RNAEg5y/yS+5Tdk/09MTxnw363PEehtgZgJh6Zpm34/3avgw4V5DnLeXptILcwklwQraFFovYkk3O6+uLz4e8hvbpYztMVJuUsL8Mv0/9NKGcjes6Kd7j6vjD0q1ZbAyR+0dpB4K9c36kJXiaxPGf5O1/9Pn41OgoiZzPEpFaH3UlbA9yJV8aZrQEmQdKwNeCdIH9hRSVTfVuD+J6zY7VG6CoVoYkhpJztmOcsaoNRPYrzCKwuzSwgmPKsuj5n+H5zmDxnOTnZ11VCpGl651OpN8R5TG0pZzuh3saeswC+srSTylnZ1iClgGCtdrntln0AALByU8WWPDeoOShnN43Wcrtw9+0/L4SvXPUYPPn6pk5XhdBGcBJC9gNEv1u6OHmBT69wkcpSvhS2Bq1/Fwty0Kc0SE9fOWsmF3SPpO4dUkLkcdpEJgYnfHSBZXndeX+Dr1fBsB3cFa4TeFfgHEz1YYqK0UpGWDxnbSgVVVrXoSzAW4+bfXpUWwMXkpWnKEAhtmUXPzs+LsGLpjrfSVn56ROOpuuhLlTgZOo5+v6d8nuwW/NeNK2cFA3KWT84lL6vWj04Jr5bpXjVB4hIR6IdK5t5tfD1U63tfOWs+/MT1q6sytmQxXnelHSLE5JdQoDXU+654Th9mUy0wZ5yKZly1rHMZp3Vv0z6ty7fZr1auxBS8pxdM1iBJ5c2x1EBclY84/K7D8B/biMrZ1t/A+9g9NlkBaJCskRBCUerDbj9mVWSCMP1HZEksKepHdoDgumPHa+2BuXwJIS4mJSDgGASOTvelLMpbynnA9u+7hIMjtUjE77hytmQQV/Dg8MvmA895RLcftp7AlFoCTI48TO5o56z/j1tp9doVpAm1hmdj9rPuKoJRqrcY1hna6CQs8JixB8Epqlo5X6zAH7AsXYH/mOMSbYGAP71GOmkchbbGoylrJyd3lTOrm2pYNTgi3kDf4a6NAP8Lfu7oVBoDvA3jFRh1pTedlcvFCtaCmV1UkuY2ODzFdlz1k0eg5OpYyjdhEydHNXEZJQTjUr+KdCeDc0EPajgNZOgGJjkc1VtxkF/dwlGaw2oad6XQjnbqrOq9ioWmmliKeAxKZDCq82FdA2qTc35BQKCOZ5iuVjQjrHDDudjzO5SEap1L9wfk6n/diGUmmkk5axrQDBBHDb/8nFJVSJYECGmCTgkVMGa+nOo0xnrdnjGCW1FOVsuAihjFZ9okfPHhJaO0JP6KnQXuXIWoBlIlI8hAGRyymMRvE5bf3FAMAD/vvWicUmh4IsIInnOhiSVSVSFnA1ZnDcpONVycR/MNNfHdcEOQJ4fdZUKgvTUKWfDnykm/bWmVfPWqJ85dNfUZmsQpTc94Jw7xThWzdIP+hd8FvlinE3RrK1bK4k6H9EtbKj5q8CCMY8xKLXeeFc++Cqc9ffn4HP/uqOfj6VOab0fg+8Hfk/dj0mjHp1Evmc+4xyTcxAQDBMl4005m35AsGYecVY5ASzK2XJw5VqHgbE6LF0/Ci+tHuoouTJewJ+b/u5S5zxnUbvLq/otCvCCR1Yq5Pies9zGImhrYCJn+7qLYnCV5vlwcnYyUm13tdlzFrd1viDU1915WwOpX254qfbNM6f0CEJ2PBCGugAPHKViAbboa6qu8+o7O1IZn8FCCcmgU93IihvzsZKtgZNyVv53RUxG+US2+ewIEiSF7lU3uTdtlcTQLSTKW89RGSlrZ3stylkRmdsw+ef1i/MKlLbTRj/cnp8hw2CgJjNsAcFsKBWLWuVsqOds6xp3lYLkkg5hW8N1wARrVMsuQai1/s3HJyalJSc18XcloZxlxuuhCiFsW9xN/p065aywWVDuusk7WSwkGfqkNYicXb5RtkNSLaJdg3AJX1/07GPyEitnsb9qtDGoe7tSr3eo52zrr97WIEjcd2lUrs18zHUI5ut/LhULfruWSHX5rzEvUWZIQlQwr6t/bPBgSf0t1N425az7/cTj9YByVnnGca587Gt7VxlqJ+WJfaR1+VhtDQwLO2uHqq2//jNmDfIYgcy3wRSozn4/gsQ3+nrcgcjZDCGUsyn58sUBnnSNjTPlLH5RpEkAcH+gyLYGRuWsm6IOnwORs3YwxsRWCkyQtd1ztjHByFkv+/NRn1VXMlNna9BjCAg21np++rvK/pahFEnTQcVvFsAn4NIOPGYCXs3uCdgadO6dUlWucxqLj0KBWirAnKlNhenK8UDOWmwNAFBQsKF8krP8maP30eYFXdAUecu+uS/Fk20Xz1n1W96v4a3DAD7ZlEYvrpsEq+eke/3pxhflUlFULkvlLF9403vOMuk3dSuuIJAMV2/5xlHYNFLT/uaidI0CfAlN9bF5W6pQyVnXGpZLpoBg9uN4G+CLsZE9Zx3GqNhvWacwtJbX+suvi+7dg4coOuUpL5OBRTlrCTSkHmMKCNalqRs/Vs0DJ9XaGhiePUzOqoFE1XzCmreoW+vfRckyxG/NPRI5W4o1P3Gtiy7fUM9ZvvClI2fRZ54tH9uaAjEBhLdryacXsE938B0TbulgT7dmsAIn/PZhuOXplUHlrKF9qfnVDQsKGHF7Q7XPCpCzqB7CczZiP+wrZ2WSOaoCF0D1nPW/5/WVlezmfKRnNMGbPLiQyvM0w392lTY8TtlZImczRB6Us5jUGH/K2WAHlgScNOoXg2AWaTA6ZlDOdotBnP3ljAfdnVS+jQeM1fztZJN6ypmoI12Ay2uXYjJLSMrZNnnOulpRCOUssjUwBQTjZFJvd0ms+mehnMXkLC8n7DlPC/g68j6mVwQE69xCgXp/07DtqaEJ8ZxpLXJ20zggZz2zrQEAwIxJPQCQz6Bg9YYnFBNEzm5ewOSsP2HGv1uORY+/upPFVTnbVOw1/82fHDnwTjL4PpvmuunIBt1ktljwiQZXD784EJ6zmnrxavF3XMBLUpDHwXw3jlThgHPugv3OvlNbrkRgp3BSMqFjSKNOoC3lBmwvnJWzBluDMOVs6yLyHRzhW+HNJKb5mCYKgLY8O56XqL8SEEyuAyJT+DZvrJxFvgZm5ayp1sHxj9giruwg6dHYEhnJWYUI9T8Hy8SHrkaLuCsU5ayq9g27wmHKWf59H5oD9pSLPvkW4QEKayc25WylZh//8eS6YFcS+SZIdX3fqyNyjWWiz4WCT7brbA1cFzxMZd730lq454U1cNXDSwKEuo0Als6HK2c1u57Ueuhwy9Mr4O7nV2t/M5Kzon35v/HxdBSVMk4jvHMLQYLdlfBVbQ04+L2TSVcz0nqXmJT5tgUC//6recWvRydB5GyG4ORsWr58cTCGHrpx5zmLRnZp1J1PJPrRtukohE4F+Vxi4JVrmxoRE8wjHVS+jQdgwkcK+tRG9WrDY7J6e0IoZ/3zyUoBGlDOutoaCM9Zh4Bg3Nagq4iCxaV3PgOjXDnbJb7DE492qKh5n4f9u/jC0kgHd2Oo5z6cQl34c10uFX3l7DggZ20BwQAAZkxuKWdzSM7iYG6jHWxPhPZDR8S6Km7wJE/tC2yes5zsYqz53OCI9fhvGkoXlWRRPwPoiRTdohsSzioT33RnfS4BwUxbcUXQIk39X14zBADNdyYPnoQRNSJ7OMLzC06gzeWqBKtrFUsFU0Aw+3H8Gnc7BgRTm6tbpPXm32IhekAwTOwC6N89DemeBr/DSmtTdW12Da62BlrlrPJX1EkKCBYsS0c6DVfqYtwIoFPOyuU6K2cR/82bH1beSrYGXb61VpTdW+EWC/7nQOAuR0sE3ZZ9HXHP75PaJ0ZRYXpK+9IFBOOfwpp6GIlbR2SduBaC0OXtRZcvIh4FMR2dBls9MAZf+v1j8JnLFmjraLY1CBKxfAzpujjKwZOI3Vsh99p2+0wBwfi5mXbYBOrkSOKGwkCw2j1n9aR82u/pdoHI2QzhBwRLrkpZM1iJ5QuHj6l7rK3kVlJIRFIK9ebkDSc4AKKpB7kKWV0N7kKkjY3Aw+dASiU7OPk0qbsExaL+RZ811DY3IWwN0DlkpZxVr5NrOVw5O7kngudsVymyZ5sLtMpZx0WYtMBJbmyjYroe7YRKHqRja9CaJBQLsHVLOatOtPIIn1TWqy+4rUEelbPYbinu++jOZ1fBknUjaVWJ0CbgCUtdM2G0zawkW4PA/vRgej4R70OERqXeEJNF4TkL6SlndbYGalV1i4Y6AqJcLEYO2hQHvRZbA7VaJs9Z3bUrIfJh0bKBwO+uvoSuYA7NKJrnrP1YE5rKWXv9dFBtDcIVjvZ/a6FRZkYPCNbywteSMv5nnecs9qc0EX1BWwMz0WMiunQBPU3+kbLnbJAMklXrzc84GBiAg61BCGUkfEsFA15ARLb/e5/B1iCK2CesHdoCgoUf2/yrDQimKcP3LTYTW6HKWdR+iwXQ2nWY/IZNMD3rOB9fOSvfO1fPWYurQeuYYD64nemqqNpJlJRnXN59ktDWgCtnNfdQp0DXweQ56/cdwXJtdQpNGII4nrNMpNV/P95A5GyG4Ntzk05eVw2MwYHn3gWfu3xB5GPV7Q/jST2LSZ00PGd5HjjgUBQ1JJf+q8rZLjQg0ake/N/88yFbAztU/9E4g5+kCJKz47Wb9yHZNGSlnE0YEAwr23tNnrMiIFhJKEfSJJsHWp6zU5FyFpOz7bC44H01nuD0CeVs5/oP9f6msfjIt/KWka3BuAoIZrQ14MrZivb3TgKPS+K0p+dWDsDnLn8EvnHtEynWitAOeJpJqqtKCh+rjst0R/FJM17UHqt50tbh5gdzHlHh+TN2vx4qiaZ5L+mGg8WirJ4z5ZcUfKu0ztZAvR+qmtTmOYvtzJ5atinwe+oBwRxIhiChaS454DnrWMlysRC0fwgpCwCRs+WglYUOQVuD8AoKS48CIsacx7byc6Ml4DTqSE8iZ/0gYqZibf6jAeK29dyoi5Q6claXH4BMpus8LiVVZ+sj95vlx63YZA4Ixpg7qSm4WUBe2IyJ81QDgmXjOasn2XD9jMe2/uo8Z3Wkbxey5jPVMYrnbFM5q/Oc5WmtWVnVr818/HeWuvNDtxNEV0dhxRGinNXlg8dLuiqqa/UqcYqPqSoBMk1lBuvVTKQqZ+X3OEpvaTXY1gCT7IJMtrRFDFWpHhemBS+7clZf7jgVzhI5myWE52zCLYPPrhiAat2Dl1cPRz4WP3TNf48nchZFBU/R1qAPKWejKOBMytkiikxpI/CqDf9ekHLWDr7llpOzZcfIuWlCvZc24n28QFajZ3Mt1T7G2XNW2Br4z6fR1qDqL5Rk4UesU87iyUM7goL5yllEzho8eNuJADmbgm0PDgjmK2dHbYfkAvz9YRrgi4BgeVTOInI2zmIhnxivGcof8UywQxcYxVUlhSfpal+gI+OwQpb3ZZV6AxFUSkCwFGZTnsOkUjeWEB7SaHZdKvjepWkFPFFRLPg7JPS2BvK/VS/JgiEdgBwI+GkNOWsjsONA9k7Up7ERfypUfsm1iiYvybDjeRtwtTUwqUitxwiCtRBZeCCem9a/ddYBOrUirpcfPIgZz09dgLY+S0I5q9oamMlB9fkpFPTtWBB1WL3X+sttOv5l5mQAaEaXl4gmhfAK61tUO5RiQfbCFgtNiuesICIjPEDhNgH+Z5uKWQdmuB/NH3G65t8uw/wqig+qFBAMK8I1Kmh3z1l9Og/9LvJU6hGmnBX+3SHSWV0NcEBeXTlG2xnN+YuAYCi9ywIPT8LPg++QkPLREOM6YBGfzvZCR7DrkNbiZdBSxXxPRXmBD7we45OdJXI2Q/i2Bskmr6sHmpOfOEo3k+JsPAArCNIhZ/nA23+ZRlHA8Zd+j6Kc5XniMnSoIuVsJz0jxwP4ggYn6nzyu30EqWoBkjUhV2t4mb5IGJM9dLOyOFGfVVcSWGdr0GsgI7GtQRaqap+c7ZK+5yr5dqioeX+D1SfckqWTynu8AwAgXVuDcrEIs8eR56ywYzDZGkxuBQQbyh85KylnY4wL+LlPhEWrzQ2SCq4hT27VzyrwBCmgnNUciL1lfXLWk74H8NVvabwCdYFX1Gx1Ez3+iseEV6noe5e6TlKjolwqigVora2BUnuVT9ApezmwclZHzkr3PYWTclHOMuUUbeUGPWfd6lg2BARzVs462hqoP0fZklyAOAHBmn85+aWz1MHtlDcn/F0Bb9U3FGurj+pL6QcEU20NgnMloXBTsi8aFkH4M6kj+fjc+C2zp4i+BY8bArYGYfdSkH7Nv4VCIdxzFtka4ACLSaHbXq7WM+xYXUAwXb5mWwN8XFiZ/ueCSTmryVeHgL1EoCxN/64Qn9r+XUN4m3Y9qfliSMpZTR1Vxb5qO4OP4f29qwWBKFf5N3/0TIsotnY5ZggIpiNF7X70+HP858D0rnbxwg8Em4xdi86CyNkMIZSzScnZ1upgHIJSJWPHk3IWK+7SCMbEO8HuUsGJTFXBiW7V1gAArANrtXwAsjUIA39muAVFJzxn1TaXJSE3VKnDv557F5x85aOZlaGSl1lZRKj9lOs9U60sALCtgcVzNmJADRcMjvGAYGXp+642BqbLr3JWLjvp4iOAv/BRLhVg62l9AND0k2vn8x4Hfr0NAcFyrJwdlpSz0e8hf59NhECJmxNMgbHibF0M5G1JXygURH9eqXlo67DsOZsGdOq8wHnrbA1aafCCGN4xEYWsiIJysSAW/rReuMojpqq9ikgJqQKP+ZdvGoN1itI97XPCWXis+R5T6xVFOau2Ctc5f6lYjBUQjF9/P4Cd/YBgcKzwuvHrXCwUhMLX1dbAV902/623NQjWz+g5a1InWtSaJiJJJbq6owQEK2D1vL3+/HfuOTtzSg9s1VoI3TBS09at6Tkbjub1aF1jQHVC5faW1YBg/nm6jllCCVYPf45GOAkCXzMs0V1bo60BBNOay2z+LgI8Wm0NwvJqpTNcS2w/wdBnuQxtzuKTKbii+Qgfsq1BMIWap7rogI/xbQ389G7KWTmNaIOG/tyW45iknPW/140NXOuU5FWinptKatsI9UAbzvcUwggiZzPEJEHOJptIr2qtDsYhh4Lk7PghBfH5pjEBrGLlrAOZqoKvLqm2BgD+IMR2j3BZw0TOWqGqKDvjORuczGVFFi1eMwyrBiqw4NX1meQPEBw0ZuWbGsdzljEmBjzYE9onI5UdAFXkOcsntZl4zsrkbNnhOU8Les/ZZn0mqnK2q1SAmVN6oFQsQN1jASIhbwhTX+Tb1iCZzQ5/rtPY1UJoH9TuWOc5a5tZ2Ugk3URITNqL/nbgZkAw/3sAu/oTl333c6tD+wVPc05qtrr3kqqaBGgSaH7QJjPZmwSlYkFLZpjKMimztLYGyhxg0XI5KFiUrcsuwHm8vmEEdv7uzfCtPy1UylSPMeennqtrHcvFgoGcsh8fVM6GlKf8HIVYKRR8daPr2NbPvnlcl+YksdJS59/pk0fMeO1tak1TsCpVxavbUWILCGbydjaRk1y4NGtqD1pA0bfnJhEdqE4AHkqHt+d7zH9W+rplWwN8C5zvYwh9ZVNShi8YNP/q7JZ029ZNtnHSPQ85L/6rUHRr5mxhXrJq/cM9Z/0gbyopq7tGOruMMOXsy2uG4Bf/eEna7Yr7VN2tMNsaBI/RKWdd2qmaRMPNOuc5VtVbgUS1NZCGEAleJaaFIXHPtP1KsA7Nf49PdpbI2QwhAoJV64kGcvwFFMvWQJk4qTYHeUbaAcE4qdBVLjqRqSoqFuWsixJXVs6SrYENfEGjv0XOtlOxyOErrYuB79IGf/FnGWhKrXtmAcGUZ9XlnlXqnhgAyJ6zXGmlV85m7Tk7tU+xNeDtsA2esxWhnPWvBw8aE2cbelrg7YhPhoZS6Muwd2upWICZLRWMGn05b/BJZbtydsNINULAl/YgaUAwUs6OT6jkEe83dRNXl+MxdBMh3yOzIPqysRq2NVA9Z811v+aRpfCZ3y2AYy6615wI9JP7oMJRV9fmd/idXy4ZSCNrDaLB85j1PRbwnDVM/nXXTt0tt3G0Jv1b3qLuWGEbUB5rh6rAGMB1j72ulKmSbeaC1Z3ZrlVs2lFoJvEhx/HrL3w4Q7lZlUgIr5tQNiLPWWflLCIOAfTeumFbpHU+qoE8AgQJ/k1fVqBdongcov7KX1wnfr9Ula6JKB4Ybb7DtujrRkHxNIWB/VzlvP1UBfCffWA+kS0pZ8sliQR1XTwItctAv9tIU/2xrb5Vp6pGn/mrm9ff9lyGE6pyf65r167KWV5Lo+csWnxTSTkbAYx5GH5Nwzxn33fhP2HeLc/D/9z6gvguzNZARTGgnPVR1dgKRfGc5SgVgs+OqxoX78STlbOtvxqCXYe03o/qsSqprVuQYoY2k7NhtzOInM0QXPXHWLIAUFg5G5XkDShnx5HnLCZAUvecTVk5yyO7Wj1n0ShvPAYE2zRaS1UtYoOvnG0OgjqjnG3ey35EFmZVPm8PWRId6gAvK/VngJx1uGZ4a3w/Vs62FApBz9lmGdl7zirKWe45W8++HQrPWUQU8Gsz1sH+o9Jqo9NaxHUaylncNwMAzBFBwfJNzgpS2eA5u2WLnPVYkBTpNJIGBOP9RztU5IT0EAjmI+6f6wTMnLdVOSt5zjYQyVSQ/tpa000LVwBAeL/gv+vMk0Wdp2ZDIeYAzAHB0mRnqw3PStKp9yNoJan3jAQIkrPBLaPM+FscuOQQZQKtKmddq1hGdhS2slXwNsD9UqMGBHPynEXb5qMHBPOPBQDoCrM10OTLmzcDsw1DkBDV9w94XKmSJsVCIfhuVIgWPy2Ik1IXVUyBqhoogF+YctbFc5aXbVTOtn7AQaV7u4oSKe2ugLans9nMhJHMPLluWKK7Pry/C1Tdgdz7yxPL4Ft/elKIl1S7Dckr2FrrYP2NlhuIkBU9vaLIDvOc9dXFbnY6j77m72ocQWMnfi96UZC4QSVIrlDOesG6+bYGbu9fUxo/yJ8+jSnHWsOT2qxOda/zDdZBej0meJeo7VBVznZpOBi/zajfj8/xKZGzGaKvqyQeyiQTWB4VGSD6REgdmI0nz9nUlbMJPWfdlLPm+4PPYbyRs/e/vBb2/vHtcO4tz7elPK7G66TnLL+X/eh+ZxX8ZlgoZ7N7PtW2mZX6U32mXO4Z7x8x2QoASGmlkLOt69XfnbXnrKKc5YswbVDOCs9ZNOjrbU0KOtl/8Gdgy/4m8ZjUtgcgqFbaukXOrhrINzkr6q3bPwvN9wK3xlg/nC+LBjkgWPTxCe+rsrR7IaQPda6iDZ5luZ22QEG2raTFQkEJCNb8nvf2vkDNnL9rQFtdwBh1MjtW8wLjSn+bL7I1QAHBZA+/ZG0eE4e1BtNGN/fLkqEG+lGjgWOo18ymwkvjKY4SEMv8hQ98qowxZ2Uivm+ORQGAPy7i7yLXLeSmf9uOKRQKWsWbC/yAYBpbA0y26MhZROSYylV3cZmeJdxeVRVvsRDcWq+SabhOuj7A09SR/7MuntdCIOgSPxaX60qcCwIcEcYMWUD0GAKCAeDFrrBy7DAR4ABmQl09tqRTGGruo0k56+JD/ou7X4Y/P/o6PL50AwAElbM6K5jQBQ9Rpv53TNb5pKxyrMMiF65nGHA71ylncZ/MbdE4uDpXs2Yo5kumdmtC4J3An2mD2tl0yVXhC75uwtbA8h6Vjk2JCDUtINoIdfX+q9+PNxA5myEKhYLwnY0bNIUxJmwNAKITKurAzHVwmwfUUw4Ihj1nY9ka2JSzxXCydzwHBLtk/itQazBttN8sMKLYGpTEdvJ2krOcHPMXWeLYGrhsV+Mve49lR0C3y3NWXQBy6bM4wYeDgQHggGByHiIgGPKcTVPBZ1LOdmXgb2tCVWOr0Z+DgGD8Gdiiv0lcqyqBOODXk080Z08dX8pZ2wB/RsuiYd1Qvnxnh5MqZ1F/kpXdCyF9BJSzXrRo0TaCQ/cL9tfki21Ncrb5fVFhZ20965hjzARtdGcl40vmvwwfv+R+6TtB9qDnuVwsaMnPJJM+plHxlS2BoVw9Z3V1Ut/HtvFF1Mn18o2jcO2CpRLJ7ZJDFOVsAZ1rlLFRUzlr3/KvAyfX+Hs3bPgSFuzMdkyhoA+cZD8WxLEAeqIibBuybwHg3hZM/QNury7KWd3WboCWrYFGOdsk5PV19IM6FbULKAHlrD4bCYz5dSuATPry73vRHLCnXAR8C6J6B+vU3c36+p8DKuaQvH1y1p6v6uEZVOgG06oQ9kZ1WTmr9+lu5eVILpvKxCpJn5STj3HtylyVs3iIg8ffOiI5qJw12xpwsYP8bonOznIi3hRIzmMM/vP6p+DKB16VjlN34eGi+b2T3km2sYEhn6hQ7/s/nl8D/3Pr81pPeL9s1CgmAMrhSQhJMLmnDINj9djqog0jNYl0qNUZQLf78SqpMZ6Us9J5pzD5qyF/wHIMD9Mxm3K2paizkcj4HDrpGRkVr60bhnteWAMA7fMXVG0N+NattnrO1n0FRVepCJW6F/n8b1u0Er5x7ZNwwSf3hMPfNtuYDm+TqTU8KBWDbSwp1GcoK0KFX6O+rhKM1hpORCZXDk/ukc+bbx8L2BpUfc9Z/i5Oi9RmjImVb1U5G6ffiAuu1McqDXE9Ori4w+/vdKGcTdNzVlbOrtw0mjjvLOGTyuYB/vRJ3bB47XDugoIlDgiGnoFK3dO+Fwn5g9pNcjLBdUtiVFsDrBLkWz8rtYaYyUXxnHWNmSCCnEn1CGb85OvyYnMDkRXFQrPuxUIBPGVbqpp3VOiuIb8OLp6zqk+iTTmrBgE2qRBN9bLhAxfdC+uGq/D6xlH4xuFvCeRnglqOjTbDp6pTUZpQMtgahCtnZQLAVeXn19GFnG3+LRYKkT3zsSUCgCk4jp2c9S0AzPUNWgnof8Ofg1HqNcpZA4dSLIDBc1an9m7+W7x/i+ZgYvgYt7bpqzELBZBJ39b3+F3X01WEQus+1j13Zbdv91LQq+XxNTCcvzHv1l/dojF+1vgrXLR1i6re1Dz517z9qgHBdAsFrlYhYcpZhspXj9HbGgS/06mLtWWiyuDxt18X//cBxcLK9wQPnr9OOevGzcqJdCQzLufBV9bBwtb77t/330F8H1DOavoOV89ZySInwRtSLeKPC5YCAMCRuzbn0PpAg7xcGWmpedsNUs5mDK4EG6zE85vDqlmA6OSY6jE7nshZ3CGkExCsRbaVi+JlFOV68kEu9pbhELYGlnricxhPAcH+8NAS8bldCimuNOfPTwltC2lXYJ0aGqTHUVoDADzwyjoYqtTh/pfXWtNhsj4rdbCab1bl8Hbe3yISXUhTfr+x3yyAr1Co1j15cIQ8Z7tSVlVX6p64zybP2XYsUuiUs715UM62/Ha34ORsCn2ZOiHmnrMrc29rIHvl6jC95Tu7LmfkrKScrTUie3PVU148JbQH6n3m9xF/a2sJuv5cbAHXHCl7zgaVs5xU8VWO5tLdbQ142bgeDsdxJR4K1FRCylnJPzHB60ZPErTK8Bj8/akVcOofHxfnq6ZX5+EFm3JWIbRtxGjUc+J92u3PrEL5hcMWbEoFVgm7+oYCNN/VcWwNVHVWVM9ZJ3K29bdQ0AdOcimvIEgwja0BqoP6vBYQCcrARoCp/8btBOWPPgcD1ekCggXJLJ4Wk8a43ABp2PrL37/NZzTEc5Pp+6fDdpkFn9x7OykdB/acxQreXsXWgNehWSfH+9j6q1qU+HX3P0cVHvBz0BGPqioZwCf21KYrvROMKtYW4ejJ/blOEc6Uv+b6M2uZfv8etDWwBwQLfuesnEUH62wNcHkqz+J7lgfrwWM44KrFCQjmWyfoiVT87sTX1U7OBr+z1Szq+9YEU3NftrEp1tBZuYi2pbbh8cnNEjmbNTi5FFc5y4OBcUSdBKnbwMaTrQE+17Q9Z/nD7bo9ueExQdjg6OkcfCBnezFjYm+8eM6O1Rpw7SNLxb/TuA8cnsfg1bXD2hfwsMFzFsDueZcmfOVsURiQR1VM8pd0mLpwBPUPWakyVU/WrLbm8zbCVZ41h4ElP//Jiq0BDryA+7IxZGtQSllVzVWzhQLAZIUsFkRwG2wNfOUsDgjWec9ZThpv2bI1iGvZg6EG1pozlStn803O1pByx4QZLXI2b8pZTKoz5q5K5KilHLCT0B6YSBcXf0HTZJm/n23K2WKhIPqysVpDUtQ2//IyzHV3baO67aOmbDHxgyN4Y+9ETmbhV0wSZZBNweUxBpfMfxlueGI5LHh1faCOvE4YOtUgh6qctXrOxhxbmSb+rrAdgrmrRgRlYslgaxB23/gYvrvM70dYSQrR7NBEsaWHLnCSe2kmxZz+M0BTCYqDZ5nul62dyLYGzb94EYOjWAgqe+3K2SA8xjTByeQ6YuWsOSCYvp0duesc+MGHdpWO4elUwpi3na6Sv3jDbe7EfXT1nBX9n/53W38c9gwIWwOtcjzY34m4DYHrHEwbLKv516ScxXPiMNJVpFPOI1imT8gGCF8Noageh+HqOYv7YEmQ4MA4qzsbcB/ExQ6qz3JofZRz0RHsOB+8oIDFJeouPN2igKudj6P7QShM952/h7XjbcN9H6fcLJGzWYNv04279XO1ohyKSgqMZ1sD3KmnUW9ZCdl8uF3JbjzA1Slnux0CjEm2BuOEnL1p4QrYOOKrvtNUSF1890tw8P/8A/7WisCMoXqQ4gFeu4LP+BHkC4KUi6qY5KTFcMj9xi/7rFSZquo3M1uDgHLWxXOWK6XlhY9etBCC+zI+oOjrKqUeLI77RU3uKQe2j/qLMO1QzjbPEStn+7r0AdLaCX5/t5yUnq0Bf69xz7qtp/UBQNNzNs/RVm0eWBzT80rOKvdtJKICmk8qAEg5O54QUM4KOQ9Ooz/W1MeWhXJWUx7fhq0EBOPf8y42XDcb3AlmgrA1cCCcddGpVeUsaIifRMogzePCFXR1j4k+VqdqBoAA6VhUlFkYQeWsmeiJe0qjGiWZDUFrBfNBWDnbiKScDZKFzbLtx/G2023w4QzLL5rqzW9nruMXVXGuVZFZ2n2AcHR81k1EXQM9M7p2GVDOGsjZguZ4ni6onG3+m/ddknIWpVP9VU2XWFZny9dMXCtg4rnFfZlKzrqODbGtgQ5yQDD12LC8m3/V8at6rLBxMQQEM11LOQ1r1VHuz3WKcJ3K1FZ/Y5loQdFvTzKRqLtGuu9010gHzEdI/Z3idauD2j/jpPqAYA59iPLvkmj/QTIcQJ5LYTGQqpzV9R343F1tDZLYCZjeB/xWdWvi/ghFfoz+OI8gcjZjcOVfXHXR6kFZORuVuOGTeH9QPD5IQQDF1iANz1mkhIy6PRkTQzrlLJ+c2BREsq3B+LgPVz74GgAAHLLzTABIN+jS4rXDAADw8OJ1gd9Usg6vbraLCMAB5OIGneKLCiMhzz9uD1mpMgMBwbKyNeCes62+z+V8hK2BopwtFgviRYwHEfxzb1cp8nayMHBydqriNwvgP+dpPgcm2JWz9Y6Rlvz5my7I2eR9GZ/Q8Os7a2oziFal7sGm0XiWQO2AqvjVIb+2BvJ9i7pgWCfl7LiE2k26+rPqjuXgixM25WwBVFsD/j1Xzpq35nO4BgTTEUD885tmTlLqFyRBisWCmOyWCsjWQLNFNw5stgaex8S7zEQ0qN2N6mmIERYQzOW+hwHfFxdFcdBawQx8qp7nrlculXzFs1RWyDmqVjWuRJLp3zpg5awucJJLeapCEcPkCQug2hqYlci2dqLzQ+Wb2zDXWCgUtOSxmgdAMuUsXhw12S80PwbPFQcig1YSX9VaQD64/tFNi5YWOdtaMOf3wfUZ8ncU6H/Xkag+URyWNydd7cpxXoYfECyQOJBnoKxW96IqZ3Xjcv4pVDmrEK2BMlH/rvYI/De9j28wL/eAYIicRXMR3dZ/FYKcFYuG/m987BQ12KSahj9/NtU8B+ajVKGHVjmrIdh1kC0zzOnCYDzW0ueJd75rXjkHkbMZY7KwNUhHORuVmOIDs2l9TaIh6tbFTiIrWwN5m7rbk8tJbbydBaPLwZNUDgiWf8/Zp5dtgieWboSuUgE+vd/2AJDuJJyTeC+vHg78JshZYWvQfuVsHQWQ4wRh5Oev9eILI7CG20DOti0gWKuNTGoRiS6kKVftqTYCAL7v7JiGnO3r9j1n01PO8mBgwbp0OSjk0wJ/Pnqw52zrmnqsfcH5VPBz57YGw9V6Ih9oxnzLGD5J6O0qCVJzRY6tDfzo7uah1IzJXDlbMabpBNQF46g+xvhd16m2SIgOdRLJ3zcuk0PTBNR/Pwd/F0RU0d91VKn7Hsf80REEo4V6cF0U8wnnIFHz/t23hofPPNSvH2q6WAXIFVXY1kA6/wSzPt11xB6NvD/VbSsFCKrtbMpZ2+QbQFFsxezHdR6MNgTUu5ZyVVsD10XJsoHtc1XO8jlC+BZslRwKrx8m/3SBk0KObh3b/JduYVAO4CP/hslIxnRPbCsPyz3SETh8MQPXplgIEik6y5FmWn0AN4+ZiWKtctZATpn8igug8TVGv+ksIApQEAtNvnI23NpOPgfe/4UrZ/m17zIoXAN5t37WzVWl/k7N1zO35bBmzfPi16tUCPaZPulqz8sncfW/SwHBmJzWFnRM925xtjVA+ck7BYLt+byP7yEdq/rB4j5FKGcNZemg65N01kLSwiP6jPvr0ap5Z4XOv9feH6YzBzO1D36ndDvV/DYToGdTqVO7QeRsxpiUlJxVlLPRbQ2aDyEnZ8eTcjbtgCN4m3pUWwNOavdqVLMAbrYGNp+XPOL3LdXsUbttLQL0pDkJ50rml9YMBX7jZKUaEAwgO8WnConM5+0lIjktPGdDtgxjZW1WREcDDWQBMvScbci2Bi73a0ixscDoVbbyN9C2zz6knE2LMB0Ybd4LHTlbzvjaYfjKWb/P6UOfO9WHCFuDVkAwxuSAdlGB20cXIjnHg+9sHb1TTJg+qakCXjeUM+VsVbU1iKicTXnxlNAeqBM/3wLA/85EkJomjTblLN6+K5SzNQ8FkOHPTrhy1hV8IoqJCEG4FArSrgjJ1gC9I6WAYEV+LsH84kD3SsQkna+c5ent5KzOb5ODj0GE76FFHhf3nPDz76b60pNtYYhia1Aq6HSz4aWpwSnDSNPgNtrwuuEgebrASS7l8XPT2xoEy+IoKOnMikjzPdKRPvx5wW2zWCg4e86aPIKbAcHk71TlLPactXm1asnZgqxebRJ+DP3m90s+qe7vaPIDgjV/cx4btpKZbQ38z+rYPeyBsVkm6O5j2WDhwTR1CNaz+T0/b34PdcpZX/Hq9kyFK2eRrYGyrb15v1SyOZhXHOWs5Nev1HnBmYfBx965rXSs7zkrHwPgz5fUhQQbdD/7c+Tg9QaQ78OQEgwWQ14UaP513THiTuLaYTp/fopactZwDClnCVpwsmEodkAweWIa19ZAkLPjSTmb8rbJKlJCim3qjgMiYQ+h8Ztt5hlOEI0nz9lNozW44YllAADw7/tv70Q+RwVvy2sGK9LWZcaYWMzgynOsMGgHMQages5Gay8cfDEk7H7j37PyM+WqI65EzaocPyBY894l8Zxt5iOTs1gJlI3nLFfOBm0N/HbQPuUs9pzFCwVRlY7p1at5naf2dYnBUhLfWfw8dyEvqa1bC0J5Vs7yZ8qmvshtQDCxO6H5fEUl+/Fgvx02H4R0oE5WOLkiTdoN3ZvZ1sBMrGKVILbXEmQp/1uQ0yeBr2YKEjWqUg6/N3RKvCIOCBZx66kJOqWo2N7OWMAzV02uCvXVaOAYfAzSz9/HFgImlWsfw9bA7mOI0nnu28bxPbSVLf3m+WSPu+esSgCF189v+759RtSAYPyea20NMHmqnHARebsyMD/rAeUs0//mKcShTM4Gd5UIEk1pJwF7AZ6eBW0N+FXgY1hXz1ld2ywUZA9nrJyV/HlRnQsFf1zG+zSTb6sJfhn633UEuAj6FJI3P299sLhgn2iy8ND1nyp8olxeBNJ6zgp/1rD6M+lv4HfdgqKG+FUP1xF4rp6zuC7Ys1UlgXVjQX9nQ/C8+HwpSkAw3c/ierPmHObpZZtktTv6jOMLBD1n/c+83clKfLe+Osm7xES0ij5PI4ZQSXKONmm5UgeRsxkjcUAwRTkblRzjis/xqJzFUS/raKtXXOhsDVyVkFx9oPOb5Xk2yzDXEQdQGa01Eq0sZY3rHn0dxmoe7Dx7Cuy9/Zb+tv4UFVK4Lb+C1LOVuicmSZisi2q4nxSYzBf3N+L5i4BgIc8/fllm7TnLyc5aw32LYBSotgYuxI1PzupsDTg52/LvRSRST7koXtTpe86abQ3aopyt6xeEuHq2c8rZVqCycjGxpzqATHTjycTsFjm7ciC/5KzqT6gDt2fYMFLNTZ9fqTfEczlzSlPZOxrRaidt2yFCexBUzgY978KiZKvg6j0d+cG75QL4fVml5nvO8omrr/tJ/oxo1cCoPDyB1vlnNpWzze9Mqry0lUE4MJRvZ8ALk9MGbQ3MdeLvzT4RoFMhZ/HnFPonlyxcFI3iN/S5wdxbR7lkIvvMx0i7OBw9Z1VEszXwiYaG45hCKM5b/w4j4FRiEytFbffbFhCMafIXzxSqDhZV+MfKfzmMnrOeri7Nv3wcVi4WtepxlfDSKmeF5zVPh+0LsOqRob6sANvPaHpXbz+jHwD0SlEbfN9hg75b0y+ZFK7GvC1R7Zv5Nv/ie2TyFzUVKQKCKeejC3THywt7ivmvpkvp2xow9Dl4THDhJJhXVOUsY0xWzjI50JwuO/V5w9XSBQRz9eTF4NebMQbvu/CfcMxF98K9L60N1B9Ano+OVS3KWQ2ZbKtaGsElbcfa+jzRryhHpzGe6AQ6Ss7OnTtXRGjk/82ZM0f8zhiDuXPnwjbbbAN9fX1w8MEHw6JFizpY4+gQytmIkZABmue/eqBJzk7pcQ+ug8En+NP6x59yVn3JJd3uzTvB7nIBuiISfWHK2bKDshT/xlh+/X8ZY/D7h5qWBp/ef3soFApO5HNUYLL6pdU+OYvJt37kQRrdmysZtLYGMT2fw8lZ/5yzsjXgJBheYMjiWvoBwfSTQR34YEdLzirKPv4s9nWVoFjEiup0rptNOVuO2Q7igBNe3Qrx1yeCgnWGnOV9QHepmNi2B0BRzqJz3VrYGozGzjtr1BWvXB04OVtrMBgYy4fXOPbA3mpyk5yN2p7wM9CuII2E5FAnV+L5w5NDw7GmBXKh6NL8jIMf4YBgeGs3QLrKWX2QM78cPLfTRZ4vFuSAYEKZqrFJiAN3W4Pg5BggqM6yec7yOQBf1LP5SqYxHHDJwkXRpkvrecy5jiVE2GHYiC3cFnyrjjCiRMnfoYJCxV2QFdMu4Kn4uekWBqV2qmRbALwQYr4eJkJUzZ+nE0pzdM1LRY2tAc8jQM6abQ0CNhicnEWLKbpnVF1M0Z0pL1KQpIjEbX6FbQ38Putnn9oT7vzmQfDm2VMAIPr8RCwWmTxndV7YGl9Rbd6tvyXD9VTzxdYYJoItzGLAJSCYOCZsuCAIfHuZmHDXBRELKoGDcPWc5fcVB7PkeeIydWYq6s4GXA8+npZVyva6aM8DKceXbQyOmWVyNhi/Q1e254VfU/lYNxI3DKa2xptzoRCM/WPqV3Kih4iMjitnd911V1ixYoX476mnnhK/zZs3D84//3y4+OKLYcGCBTBnzhw4/PDDYXBwsIM1joYkAcE2jdYE0bHNFn0AkIZydvxMotRzTVp3rnqUlJDOAcHCPGfDSZuK8ttIDMLeFc3tWfF6pQdeXgevrBmGSd0l+MhebwAAfwBYbXix81WBSciX1/hBwfizgv1EAfwBRLs8Z+uYzEfnHwW83YzUGtZB+0gbAoJxZQYn9wCyuZacVIziOcsHC5M1tgYiIFhrkomDgQFEVyyEgRNoes/Z9BcpTBBqfWVBiC9YqIFe2gV/kasIk3uTK2f5c1YoyAPlOePA1sAlIFhvV0moyPNibcD72J5yUbTz6J6z/jMwnsYVmztMnrMuqlCzrQFXzgYhe87igGDN3/nE1eQQqkOY2kmdsAOqXbEgb6HWbQEvFf16FYsFQThJ3nsJXgG27bUNz1eDmchZlcTyt6kH860o72Pb5NV1S7YNLuPDgHLWlh8o98exjmVkR2ErGwOLNfjuulDPWUO0ePsxTRQgekAw9bnRBn3StGkOiQRl7uSsSY3LLxmvB77mWlsDcahaL4NylmmsOLhaEylKdXasMlFrv/cFlA5TbThQIb72/d1l2GnmZL/+EW3XeCoXWwOhnC2an3Mpb1XNrCkXl4E982XfUP+zqX3yNA3hOdv8tz0gmNszZSJxfQWqb1XBc7QRyvpAWq62Bs2/KpfDlC6poBkKqu8PnJ7Pl0yLCjroftbZSGBItgwWWwPdcy7fe9f2Hf9dYuoKed9SLGjaNmoTmq/HHTpOzpbLZZgzZ474b+bMmQDQvMAXXnghnHnmmfDRj34UdtttN7j88sthZGQErrrqqg7X2h1JyNlVLdXsFv1dYhIcnRySPWc7NaGPA/VlkFSdI21TLzcfbNftmOGes+HknbolPivlW7XuwWEXzIfPXf5IrOPvem41AAB8YI9tRPvF6r20iKmaRM76ytkhwxb3dnvOam0NYirXGfPJRR2GJVuDbIgOPvHo7cL3Mv2yfHKWq/3Dy+D3HCulOfoU5Sz/y5VAroE7XMHz7+8OEsXd5XRVujZUhHJWrgcPkNYJ5ayHVF1dknI2fl24j3OXMonj5Kzqu54nuAQEAwCYPpn7zlas6dqFIeTpzZ+5qDYZ2H+blLPjB+pkRXjOGiblUlqTctbBc7ZYKIi+q6k+kifzUZSzvV36RXJRT8058cmvILUsSjscEKxJ8sn5AiRTzuJ83rXjdPjNiXtLZAbvV3TRspt1l/+tBpzB4GNX/j6zes5GOgt9v+dy/wJqU0flbBRbg1JRb2tgywC3b99z1l6OSiC52Rq0FgqKMQKCcd/T1r9198DmOQsFkCxETNW1Eeg6WwOdclYXEIznFFD02jxnjbYGvuesT64iUlMlBi2XGPuCYuUsVuTaCFU+P3H2nFWumwrJ41e1NQh53QrLmDDPWaQ8xr8/v3KwNSfD19J+Hi7KWdchuq+MtRONDFA7YnJ9AIJtTJedq+csvwfqWBdbKwDoFxj8oHJBApFzBrhnC2tCNlsc06G4T8AxkFReQnq2Wz/he2irW9bKWQ68s0WUp/x1zSuv6Dg5++KLL8I222wDO+64Ixx33HHwyiuvAADA4sWLYeXKlXDEEUeItD09PXDQQQfB/fffb8yvUqnAwMCA9F8nkSQg2OrB5qR01pQe0fFHmQQ1PCbIpPGpnJUfqqS+dnibOl/NjWprYFLO8lV2G3Go3rusAvqs2DQKr6wZhn88vzqWT+9Aa1v3dtP7xXfd5fQJPYmclWwN9MGh2u05y+tXLhaR12jExRFkXWEjsNpha8BfsH1oYpsF0S1sDbrcbQ34PZ9s85xtPf/8ueEkcyll0p4T6joCIGogwWT14DYUqnK2RVZ3YKENt82uUiGxpzqA/0ypk7hxERBMTJrsQ6npk5rWAeuG8qWcndRTjm2TgftC8pz1kbcxqAqTctYt+Iv+e76wYvOchYLfl8XxnMVjmV7DIrlfpj95F3VHwXwA/Em5TmWIfWmLaMu0yc8yKvip9JSLcO0X94dDd5mt95z1DCrbgHKW5xtMW1EWS9UxoUwKyL/d8vRKePCVdcbz0L0jXa5KJM9ZhUxynWyXi6Zt8uZjYtkaqP+OQE43A4K1ynZtT4g4BPC3upvqoNZfCnLFzNfDppzVEYdCOYuuuc5zVre1u1kvAB215TEzGSlISxwQTDp39FlTJq6vLvBXsSATscKLVsPARd3BhRet9L9jArz511XlyY+1eXPifLE1xmi1AR/9xX1w7C/vV3YKGN4JPC9Pvjb2gGAhz5RhUYpDtCHEt/O/NgWqrlxnz9nWscPKjledPYcK/10j1xVA7znb/He094sg2B2eZ6ycVevvseb4kDGGyGT8u7leSRb65Iz0X+OFIJOX9Ti1mA2go+TsvvvuC1dccQXceuut8Otf/xpWrlwJBxxwAKxbtw5WrlwJAACzZ8+Wjpk9e7b4TYezzz4bpk2bJv7bbrvtMj2HMCTx5ON+s7On9gpyLAoBgVWy4zEgmErCpUXOdpeKfoCrqLYGIcpZu+esXFZWyreaUF3E8zr2t5j7RBlenU+LnMX387X1I+LffCFjUrdeOds2z1lug1EuCMVk1HPHZJapD6g1POlaZKUM5vlKRHsGRHcSWwOt56wIIqO3NSinTNqbSFGADnnOKvXoZEAwfN44INhgkoBgIqiHPNia3fKcHRyrJyJ/s4RQzoYM8GdM4srZfJCzeHeCIPsjvivw+4yUsz7yNgZVoXbH/L0gec2FTIpV8J1IuomR5Dnb5VvUYAIEIOjLpwLvPDEFZhVl8sAzGkIJb40EUDxnEdEkoo4X9LYGScAJCzyRx+ROQ5ATemWjqvZSlVkYFTUgmE05iz6vH67Cl37/KBz3qwdhg6Hfwgu9OGBOGHSEgAn4p4bheuiA1ZRyfuYMpPtftLdHkZ8DAaQCPxMlvvPHNSCY0o5tfuc4PQf2UW26ROjLVX+TSD1JDamSs346va2Bvp1g0liuB9PYGjQhbIVK+oBgqkpUd668SLHA4cmBvwriWmG/42BF/fmJ27tQXSxSofP+xEGfbFAXvqRyNdcHz++GKnUYrjZgw0hNeseHLdiZlbNyrBX13LR5auqK4aE2xJPoPWfNfR2HzpdXW2ar0qodYTMgmJ+xLjusysZ1BTCTs9Y+UXceIcpt/MxiGzI1/XMrBmCvH94O/33Ts+IYiaQ3V0uuc6LFS/2xvI0VCsF3oGpvkUI1OoqOkrNHHXUUfOxjH4Pdd98dDjvsMLjpppsAAODyyy8XadSVT8aYdjWU44wzzoBNmzaJ/5YuXZpN5R0xuSe+J9+qlnJ25pSeWJ6XOnI2r0GodMgqIFhXuRBZicyJIdOkoMshP7X+WXnO4hfqwGgt8vE6WwG8RSwtlRSuZ8NjsGR903d2uKJXUZYzCEpmA29/3UhpXY1qa4CVs4b7rZL0WSmDsT8mH4xlopzl5GxPdFuDSRorAdXWYEyxNSihSVQcpbgKn5wN1iWugjpePXifow8I1hHlLHr2u4rFRLY9HLy9q4FN8PPfiXMNA57EhStnm+TsupyQs9jjOa5yFr/rslL7j0fkbQyqwqicdVC9mNR9ZaGcNZfX9Jxt2RrUPEk9iGGakOP2qVs409VT55+ISVdcPwCZnOPvlebfIFGXZNKn1sUvp0VGoXuim6iqa0G6YEjN45kgtX3PWXPF8W+4T//rk8u16bF/Pe+jXS5LsA7moyTVlue+Ndpka2A7HgeYUgkVY/0i5K8eUyj47dA9IJhM6ql2QCrUfCXlLNiVyHJ715Nevtq8+W98yYuFApQMAcHUUosGMh0/D35d5LKxSpopx+Jz0Z2pGhCMMb+Apq2BX6a6oKTWHyCC52wrmSkglc77k4+RQq02FMJcKhenE+1dvzNSroOpLDmvoHJWkzZUOWtPJwjZwP/V+6/WNZifTnmug1DOqrYGTC5Hq5wVOxuC9dIFBDPVVZSpacm+H7EeeG40YtnF+ezKQag2PFi4bJPvOasschjrhRdzjKnCYVbzNxuTTTkb8Jwdp1LajtsaYEyaNAl23313ePHFF2HOnDkAAAGV7OrVqwNqWoyenh6YOnWq9F8nwbdmxyFnsXI2jq3BmPAsLAoiY1wpZ5VzTUIKMuZbPMgeoo7kbJhytjVZqNbNHUHA1iBj5SxAM6hcVPjkqD/wLhQKwnc2rYk4z4dPtF5aLZOz/YqtQbuVs7x+cdoLQLPN4efNRH6o7SAqAewK7I8pbD1SLosxJq5bf5e7cta3sggqZ3uErYGsnOVbKjEx5rw10AJBimqe9S6hnM2+DYYpZzvhOev3oU1lUZKdIRy8DaoKoEKhgK53/sg/rDoPi/ibN+UstjXo72oFBItIgONFJLI18JG3MagKdfLi95nMmIbDNDHrEp6z5n5RDQgm1KOt7g1vK9ZBek+GiJ20tgaIcGmWGxxPiKjohYKkAPMn13jyGf8doPp08nJ4fYRiSVLrQSAth2lHa63hK8sEOeu4XR3fymsf0S8w4Aky71NcXsEBtaml+1DJNtftvphgtZWNIW+Tl78z1i+OclYQWT7J4LqwLBY1LAHBdGVx+EsN8rZwHXSqR/WzqurEirZiIbirRBBvSr1MylndAkXTK5dJZDo/1NieDf66/MgCTsd/Q+Ssx1jAtxojuuds86/ZczZIgPu+oiFlWIhffN11yllVNOPX10SUNr93Uc6Kilmqr9vtEDgHpJL1STn5N1udMcKU535ezb86URUux6ac1anGTRYOrvYBooyQ9ofnYUNVs3JW+J17TLQV2ZrCDFMfERWmY/lcoahTzmqIb92/xwtyRc5WKhV49tlnYeutt4Ydd9wR5syZA7fffrv4vVqtwvz58+GAAw7oYC2jgat/qnUv8gQTe866eJqqwEGselAghvEC9VyTkIK4Y2qSba1Jv4VMxRgLU846kHfqBDZrWwMAgIHR6KSJKSBXd8rKVV7PnedMAQA/KNiwofy2e87WfS9MYWsQ4fmpe/LEyrRAoypqswsIxiceRX97fsrXErcNEYAk5O1YqTfEcTpy1lfOyp6znKTEE8Q0yGaudtY961G9qhPVw6Dg5efdieCO2LcbAHuqxydnq0qeGKJfdeyn2wnc1kIDguWMnNXbGkRVzvrnT8rZ8YOArYEXnByGKZZUuChnCwWQAoL5BIi8HXq4Uoezb34WFr6+UcoHq+dtEz+81RUn5J9U8sC0fRgrZ/GWZ5c6hEGoidG7iyso6w1/3NDcSh0sSCWHTCpPvDjMPWfVR1XNXhAI6G4uWj4AzywPeifjYwU5G0gVRKBMy1EqSeV63cvFot7WwHK8TjkbVp76uwvJKto+IMWlKzmLjgUIf/eobQIH3mIh9dWpHgH0CxqqdzQvS91V4rcvGcVCUEXP6x8YQzK5PmbPWfl51T9LvHy/PxAEOLI1wEfq+PConrNqQEQVOgJcqCNDinBWzrb+UXZQzoa9E3xVY/PfviI8WJ4r8RgaEIxhxaz/nVqeLb+wxQ0VYcpZXRtWPcFxLfxXlVw32z22eeeajsN1HLHYGvBxHZ6/NpTnyATJvzzB4mUYwaxVzhrKTeIN30l0lJz91re+BfPnz4fFixfDQw89BMceeywMDAzAiSeeCIVCAU499VQ466yz4Prrr4enn34aTjrpJOjv74fjjz++k9WOBEw2RFUXSZ6zMZR7Y0hhxhULnZjQx4UadCeJOkfySsRKSEeSJUw5yyO72kgbXgeeR1bKWaze5cG9omDYoGL01cEp2Rq08tllTlNZxIOCDbeuy2TVc5Z7c7VpKQx7FPvtxb1sdSHEtJVEbQdZqQRFZNtSAW3PT/daYpKG2xqEkfl4sKOzNehVlbPc1qBbtjUASIc0HXNRzraBLDQqZ8U29Pb7sPI2zdvPlN70lLM2ctaF/Gv3IAw/O6qvnoq82RqIAHzd5djtCS8i5ZE8J+ihPiYN4XkXPgEz2hqUzBNDrDbzlbOeT0600vFJ7V3PrYZL578CF9/1kpQPfk/annWZZMaf5WN0hKbwmizI5CwmbkQdjDUIhx+pHdVHszsOE0UYqk+ir4RUyVk/Lz7uDKoQ1brJfzkWLd8UqAfOi4sN0vacxRVsMOY86TfZGtg9Z1sL8lnbGrTSNAPP8eMcyVmF1Auz1FHHywVMgjI72S1tZzZ8VlWdWAlqI1HUC2f2nA0SyAzk50RaQNEsyPDvdacq+h9xSZh0jfmrXfpe6zkbbX7CU7koZ1X7pHBbg+ZfnZ+qzqoCNyFMLssLV/qyeJKAcrbEdwJg9TULrb9EXIYQjZhw1ylnXTxnXQOCcQQDgjGp0lrLC05U80uheS9FUs5qvhOLE4ZjJMsa9C41L9YyveWR47s3mXLWQM62LmChENwVoQteBpDsPd1JBGVKbcTrr78On/rUp2Dt2rUwc+ZM2G+//eDBBx+E7bffHgAATj/9dBgdHYVTTjkFNmzYAPvuuy/cdtttMGXKlE5WOxK6WsGnqnUPhip12KK/2/nYVUg5yzuQKAoVTCiKoDrjSDmrGqsnImfR5LELkVOuKlBfhWxXztptDZq/TevrgrFaJUPP2aS2BsGAYACQ+hZjfj3eurWsnB0KsTXIKmBWoH6eTxrxgVeUc1fbq8lzViW2stoyz1+6XcXonsuuwOfsK2ftZfDz7ykXtRONvm55YWlU8ZzFpF4axL2vnNUFBIu2qJOoHmGes9X29+ViwaJVJ06mq2qCKOADLt0gucth0Qugue32v296Fn570j7wzu23jF2XKMB1ClMvzZjMlbOVTOvkiiEUgK8/pucsnsRVG+Nn0XdzR2AbI5+ASWncjuUQke0txxQLyKKm1hBlCMVd6xES3uKWnUa2bl4OXhIknHl5/oQ5OJkvFRHJgEgjVwVRGNRz5+UAyGN0ZiAj1a5SRx4D4B1fRa3HLi9D+reoo/y97t7j8qLYGriQJn590P2JpJzFG/hR2ZZXia+cLWqtLLT1i0Cq+Mf45F8posUUTyXI2TBbAyXbplrXz8tWqikQkE7daAwIpnrOcmJNKatJGuvqH7T2YIqatlwsapWznvq8ak6W1xcHJMSLNEI5K30fzCe256yRnPU/N5RrHEY58WdGq5w1LEYVC81/40VXnUI6WE8WSAuAlLPoeTP1Lbr8bOmwPYC6mGRbkMtEOavkq7O8UPuSQLuEaIs82gW7kGBx+L7iOaeanKdr7uCw9/m2eiWZiZnKwAHBTHYUAXJ2nCpnO0rO/vGPf7T+XigUYO7cuTB37tz2VCgjTO4pw/p6NdIEljEmlLOzpvQmszUol6RADOMFKkmVhJytihWXZifmB0Ryy5MHUus1BKIoR7A12KKvG1YNVCJ7/LlCtjVIJyAYgE/IpLGFFXuTvpUrZ9cMA2NMbLlQyeGo24aSooZUgl0xbA1Uf+cRg7owEBAsY1uDUtFXAqetQuZtvFxE6tyQMjhprd5vjl5lG7/qOYvHVmkQ224BwbJtg4wxcS1VcpZ7+Y7W2q+cxWpygHRsDfgiiI6Yd7U1+OeLa2HTaA3ufXFtG8lZfwJkC1IKADB9Ug8AAKwfyodyFvuKp2Fr0K4gjYTkME1YdYoqFabvbZ6z/JtioSB2I1TqXkA9yp8gXURrAHnXl+s2eB1R4wesaf6VyVleF1852wxU1CJuNERuHDTEJBORs6WgAAMHHcRQ/fZ0qkEA/C4raj12AXSkAIMSFALf64YlOC+hnHWYlocRxPJvcnmu171UKmhVbLajhf95sSCuV1hxUc7FP6b5t1goRA8Ipqg3wzwzdYpxmXC0PEsGz1FcV94u/EUWpJwt/n/2/jTsluQqD0RX5h6+4UxVp0aNpdKAhJiMBRLgi5mxLewLjX3bxhjbDXS7sZ9r030fZmPLuC9yM7VNcwUG2rYaA7YxbYOxwaZBILBAAwg0ggSSSipJVXVqOHWGb9p7Z94fmSvijRVrRUTu6ZxPfOt5ztnfzp0ZERkZGcMb73pXFXmVaLqbrlyGRrCsm5bCeSUyZ0MwH+4lw7p2us3AsK0oBNZkMDY0FxOjuF+w0+L83N+DZQ26Tx2c9X/7YG5df9cs2rD/afXnr6UnmbOaljL/rSX1Ww89Rf/kl95L3/ynX6LmH9xfX8RWKVfKA0RLbSg4K3EIbC9EackLTdLDg8t5INlfFB8aJGuQ8ELhuZwqJ0LlY+8q46OVBwYflJsaQ6WYbne7rTRnP1ZtmaBg147mbmJ178WdpWQNGIjdndRuUnw0X5yanYQoINgKoJXTSqzrPtDM0IBgOeZsnonIv13amxBROmLiKrYKODtbNG7wkbICHihZHTzExfyL7jtPo7qiG8dzevTaccDqQvMBwbakOcuMvlG10vvHdtMAPyQ4uymggwe2yahyE/p1a6eeAKBdynS2AsCxOVmDWag5y6ASBtVYC3PWYKwSlTM5VzXUe7JkDTYli5Iy/3y7eji/BnAWA9VJK5U14D7pyo2jpcsx1GYJxq+0u0DW4HYYf1HXe6/v54cyZ7EvPAsIdnosYsq4BbO9qGWzXsNxgjnrwSTfpy4aH6C1EqAOuqyiBczZRHOzwFkEiYn84i7IBwBcfq3Htc6cXcWQocvG5cF3qTHAM+nSaemj+jXAKMGc1ctmB47Da/0x3mQtqaIS0EQ7d9GWKxnic0NLgQbool8XPvMY3FbybFr6T2//KH3oyYP+GgQW/TklxsUpZc5qsgZe1SANdltM8ZSsAZamquLyteKTzboNVdagJcGc9cCuBGTxGv1WQyY9An4YEKylcPNG2mjgHJTLYskaaGC4lzXItEne+FI1Z2MAra58/4vzdW3jykpPBnj0WsrgCSDKh/bv3vowvf49V+jn3/HRbJ5BQDCRptVO5W9sQ8FZbaMgx5xNjW2mO37hGMfmg8UZ5YbKvJHQnOX1tYyZ4strl6s1vwwz67nznKGuKjMgmOUJctrsDJzdgp2bDtfle+xat8i8uDum3cnILVyHAJROcxaYs217elgucpBbxQV7JgCA8WBZA9vVmYiKwDv+7SKDs5vSnIV7unY0DDTBNnpOgGXTQqCkxLCezk3H9MDlfSLqpA2sgGAuiNW2ZA36fNalOWu9/1LuYFMu81zno0DWYL11ye7N07EPOpabrDowfmowZwUYeSQCghHRWsHmlL40s0BS8iXrMFygRwHBuD5ugX44v/tO1mBndc3ZGbCVpJVKqfBzf/z69pipKa1caaw5ezxvNtbvDzE1INjA9oSbp2cBwU6PRYuxRX5RmzvuIrJrwJQDk6qgL+N+3LsV9+eD5h1aqQyUJlNAFAIuXB4iAUD1nzVo2iEzXltUL2MaMMOL6xCcbdVFeqQ5azBnUT/dZM4aAEYE2irj+LpkDdL6ivA8m3Im1AgYz0F6ietd0NRRueasTFA7/y0PPUV/88d/m/7uv39Hf053vK4rL2swGJxlhmJ6/NGZs31acfEDs94lzXWc26TUnB0ZsgZquQwwXdZNS37M58jtWhcUbs7okhhR/4NAG1Hw7rv3VqlyF9Cv8Dk2ibTwdyKFOZtJm8upzanCPqz7xM0InENbz//177lCX/HDv0kfePymK6fJnA0eSHxvMi9ck1h9bABy8t9KOTU5DGmWrIRlkhyEGxxWUklZA6LoWHc81SfG5gNc6tfhOHeQkjXg8dfwUkiCs8p9LWPWc+e6R0KOzE9eeRtwIZayM3B2C7ZM0JTHrvtgYEQAJg4ABXhitjsZBUCDdLe+XU0u2lfRy3XgbA8qDNVPPZ6HrtTSSjRsedLNzNlNuSXjonmo5uyNhP7nULZxyjCNyaii599znoiI/uCxGz4g2VRqzm43IBhGkV+GNRzJGljMWdEvbMpl3jNn64255/M7Oh3XIEORrjNLxoKNpUSsgGBEvm2s43685mz8rm+KcRyVAdpZxJydLKcRug6bCUByHbIGXJdJWYNMn8MbUo/f2J6mqy93fnK/P/VBOZ+8DYKCoZSIb0/DniGOdWfM2dNjVgCQMNKybtbY65mzGoDHi/Zwc5v7cRnlXQZ4YUNZg7Qrtn5cgloa0w3TxQBHqnv8CkONrxMFnBVuxSpzVnSVOebszngUB6XpzVrMyuPas8cFP8u2lcka6Hnmzl20rblwlzauaz0gWDFzNmZiaiZT016RJ/pxyY1P3BaJIq+f3FjKyfOt5WUN4mMa4Ig2UTbWQ9DTf3OuxjWn7c+rq85bMSy//n7XJtNZdyVfOMCyS1/2H9Hfjd5v8HXIvMXNE0w3FRDMBcAqXB85XdiCgGCSnZx7BSRgHv4Wn1eBvAYSDzRpBSKiv/rP3kS/8b4nus2GNiwj16PGnHV9uzZONEqexn2iPIAD5Rzwq5fZSm8oczbaKIBCWCxoqQmOKVjjXVrbVQGZM20jkKCZLWATNDyP59qLdriswbo2L60+128AxHXtg83JZ3460dkzcHYLtswC9tGeOXvvxU6rzus3DmHOegbYFBa+R6dEd5bvlZk9K2nOzkNQYaibeo45y6BvmjnbleHShpmzq8gaWMHAiEBzdg2sQV6AdAEDanrhvR04m2LObltzFt2tlwmGFgUEszRnZ1LWYFPMWT/BcyzkNYOMyDbmSbPmlobmA8Dp4Kx045eas0Traxtt2yZlDaYbArWloXavnDxyf3h0K5izIFtB5PuJVZiznoGqMWfL6ps3TbYJzqYYv9KqqgqkDW61oXTM3tIBwXzfsak+68zWb7EbY7w4HKrfNh7ZC0MEOuraSwTxZpsER/hVj5mzheBswJaNj3N+GtPIA7j+93GtQTGrMYM8kOGP6cxZPR/pOmtrzvJYWTv3eYsp676zm3LBIhfTOhgka1C+gA6eYVMua6At4InSz81tuAE4mwMZYpf7+Hz2uOJ+ku+irio3nt88mdPP/u5H6BP//n+mH/2195n5SQb4YOZsHQKZ8vcK6s3auNCD6BnMWcv9WJSzrnTQs4tPEQdhmi+MfI1+DF3g0Zysiksb6qQK0+XrtSHfa84qmSgmN4ukyU0JIj9HygFOyMyO8jVkDfg+QzBVLw/bzZO5SwOZzEQeGMYlBiehussLeQQsnzSUXpGgnMYMlnmglWyuB3krLG4vd6Fb1JcoZZQlS3sTxJZjAMtxjtdRkXxNfzPzRZv1lsjlsazlNWerONCgke8pxWbPwNlt2DKun445e6Fjzk6XAIeOOSDYZNS7lHEwhtPBnOXBd793d14FnJWBbIbLGmSYs3X6+WAArE2Ds6GswXLMWQmMEg1nG6dMMvBecM85ImJwVgeI/W7+tjRn+zKO6yJmtLRI1sBgpknt4c1pznqm3zqZpmgYxAon5SnQFIMTacbvHNfnYb9REsgarElzFnWWUszZTYNR3EdL1iyRr49bw5wNZQ3OO6+Q5cvitVttjd+s5uyCwdntyxrkFsdsl8934OyTN7cHIFvmNsCmywcEm58xZ0+lWVqi2sLqV99zhb7nP/++61dtWYM6uE7Lj9eOPA/l/osBhIg5K9JB2Y3UggvZnBbwip8hGNB9oqxBDUBdeF92GXKmBezhPKSsgaovWKg5e6QxZyNwVgKlfFyWOS4Hjrc3XUCwvMWgSfLsIL8SJpSTolCZmPb1nqFYA+Cdzkv+rM1BeKPfB9vpjleVlzm7djinv/2TbyUiov/lP77bzE8CQTlwSd5uRSFDNQZJK91F2gDqEDCRVldVtOnaRn/4c1XmbNPGgaxbAuZs338oGxSy+Nqj5yzxHWrdb1WQruzL0DwTv5Q5y/kavysMUJbASL0weF1O1gD7O74nHNdzQOld56auKG7Dqf+uec5ZetZYlrD/jk4LjuOz0oDfaINJk4gpnL+xacxZ3GzRzGmWK14q/l5kP5wAZ5WfpHxI7hqnES7Ow4BguQ25VB6rrMSs555izkp5C3/4dKKzZ+DsFowDK1kBgTRj5uw9PXOWwcQhrMUj1k7sQQYJctzuxi+iY86uUXN2uKyBD6ygmWfO6s8HO/Q79ntZg00xZ+H5DpU1sFirRBCcZw3th9NgsPwF98ayBvtC1mDkAPDtdLYYRK40MBGa3ASxACwJsslAeOsyZPq5wFZrzusEZA1wUp4CTblftDRnGYTlDZIjTdZgTXID2DfuJDRnNw3OIsgtjTerboXmrNzk4rHtBAIJDjXuG1PM2Vx98+83judbYxTPBsgaEBFdPteN5U9sEUC2DPv5/Un3DOdNO+gZYl94xpw9PSbXVhpzlhdgr/5P76YfeN0f0Nsevtqda4GzSVmD7pMXUy44raE5a0VzPwyYs2ox+t8AnEmUY6SAlS4aO/n5xqgiFeRbZdHnAvbAAtMF0ERX8lZfpEvMRWoasqEXiBWwSKau6SJ218X3gUk5eaaCaokD9ZQt+DtZg3z6WnAqLT1pcwD8LDA7l57WNhnw4v4Vg+Q5cLaYSMEAYb+WGQgu1YBZa+1rBC7uOf1mPMcxWKE47BkXlN5tvoT5ooQAWtPG8+6WvA4tg1JOqiG4VpY5fjj8CjrN2jbcyMFAYb464pIO1ZzV+gA0BEZdQLACzVl8nCpzVnmOdaXLqiyU54x2+dwUmLPh/fj+Ji6bVkWu32n0dqad20Ka/jMNKEsbqjkbSyV4QoeVlA/GSMFnZ/H4q30Pf4t/HHofvB6VdcRrqHnTqn3fNpiz1nPj9WpSczZGZ0+lnYGzWzAGuq4PCM4kmbPLyRr4YABEfqF/K9xhlzF+ETmK+xC9T2moH4qfpcxBV5eWrEEGuMTFq2fObkZzNpQ1WC4gmMZi3CmQbig1qQH8gl5z9tFrx841WTJnb53m7HJgptztt543H+exZlNAB2p0OZBxzXWJAcGQFZSST0htCBD5wFwMRh5qAcHWxAQ+hr5xqmqgDpuAL10OALml8X1vanMnZcdz/04QhUEDl5U2mIm+GW1a2Oegt8CV69thpqKGc4mxrMHtoDmLHhK4yTGkTeG7dlo2fM8sXlzxc9SATLchNgtBJWkpWQMZLIU9Ehw4S1XwqYHFRHIzyu5/AzfaIBEPiBGBrEETnRKwZUejemPMWU3WAG3R6GCkBF20gGVE/r1EcDYXwVyCHb7M2kLdH7thLPZ9ugia6Hmq12F+Rn1I82zKuE6TzFlwlfcajhlwtiB9ni/wnNI//4ou7g7zDOTknfv4QLfsqoIAd0qQrKry7cvS/1RlDarwPSbq0olAFKN9VZX9vORcum1DCYou37A8ssxNq7czvznk77kVfYU7DmCmNBcAt3AO6p6jQZ0N67v7zAV9kr/lNWe7zwo8BQLmrAK2IX5w+dyOB1wFOOu92fyz8wBaXH4+ZHk+aOeG7M42uqZEmmUdmrN872ZAMNGXaH3hsCCJsQ29D56vW/OBpmkT+u3p59KVcfkB0rp1HDfle9OKdiCvOW12Bs5uwRjoGrJ4vXKtW2Cy5uwysgZOc7afDDNIe1oWUgwcMbNnNeZsuJAeGtzqJMeczTD3cOK1Tc3ZZQOCpZiz6wAPTwTIc2lvQvdc6No6t9tbrznbt5lxDSBRed7yPbthMGeZOcoMinUDpmw4mR1vmjkLmrNE6QmrB2f1d0su5jepOYugqDZpXkbeYpVyaNIKToP3VjJnx14ehjdtlg0K5hjdqYBgGY8R7JOubEl31ssxlDJnbw9wtm1b2IQb03Rcu3sY0qbONGdPp8WMyBh4dUF7xHere+VxXPvZg0khc5bbWu3AES6fXs6DQuZsyIS1y6ExI1GX9jmX94iI6Nl37m1Mc1bqc0ozA4JFsgb+fLRjGCsx4BFarEGr35m2KY4ssgPDTdanC9cNACIk2FYSaMbrkGZPDSxkzvo8U1ZSf9xXzhZN8HtVdR5DQ8rJVzMIWjr+uDwJgcz49xpYaZLFzaYBh7VS5ymGW6SFa8gatK3CnG1tzVnLrb1t9bbpNofgHcK+wjP6kVEbF7RS8k+Zd4XXf9cCW00Sm2A+XW8aYKe9hzUA9oEMQROfi/MXJPFwP+qYyApT3+vDKuVWfrPAQdSX9YBv/xmcp1+HNvT9iTa3IMecrIEm2dMqx7pz7TJoz39ZcFb2V/zOzxMSMlb7C4KKrjBAcpmse6oT/YrcvDqTNTgz05bRnH30eidrcN/Fjjm7lKyBm5h11zJIG+n33KbGnTozZ1dxp58LpubQgEg55uw0A9qcODo+0YXdzbolI4vscLYYVG9FsgZrAKYkyEPkdWfZpJv7pgBFy9CFm4HGIRsEXO8sY2ExZw/74xd3u/M2dX9zAMHc5HvNICOCmyOIvpvUnGVZg0xAsKNZt7A5TMgarMqqPk7ICWA+m26DJynm7JIBnNZhM7ep4st1fomAl2iub1YmYtxOc/00goOPb4k5O0+Ayppdvk0Cgh3NGjfx5w0R36bKnmHbtsFYd6Y5e3osAmdhoevOacJzHavJ6F/HCc1ZiznL/bgVdVkmFWrOJsA8E1BiZKX74L1D1RWzIvqWP/Px9Atf/9n0uR93j86IWmH16RafKGugMCAttp9ctFrAUMCctTRno7Jx3qKdaOAsHHKas9aCPshDAprqJdFvi7YtAr8kmxKtTHO2CpiUKZM/a+WbgawBns9B8i70cz+2C8ZcKMivv7nB4Cygs9ozHdWVCqxZjMSFaMsIXNZVxzwPy6+/3yi3gNYxZ8ONnJbawBOMCOQUtPeZ7I0On7/fYEJtWU2LVqvyoWCQ3CyyfieCOnayBon+D5mzSkE1ZnEna9D9jWO5pheLskxYRp4PxczZ+HnoLPz+M6Nzi8dbeCit+y0+Tysv21DmuVwztW24qaeZ3DjQNjpifVz7GauBzQb2Aweuvw6P83y8MWQNuvx1WxeviNOxwdn4N9m2vOfDesq0bTsDZ7dg5wYuXtu2pceYOduzCZeRNfCRWkPm7NEpCQjGC27WHl2F8euBtqr/LGNkseU0Z12AMVPWoMtnMqo3Dq5IFtOQoGDcRs8r+p/r1JyVTGYiL23AJpmU2m7+Js0x40DWYFBAvv49u3O/A2UszVk+zozqTbEykRXi2uuag6udCPDOP7O8rIGUsWDDd+543hiyBusBTf0mjMWQ347mLGoFStuf+M2qbUl8sJ3AhgXbMpuPaK5dapqz43S/yoa/bysoGLdpTStXs9tF1gDnIbwBtj9wTJLtbls64Ge2usnFig9SgueEoKylQ8rm34H4dwlC8ByMPWQ8czZczMuubSnNWYVFKzVnAzAXzpmOa3rJ/RcDl9/gvuwiZE2TNdClE3RASZ5qAUPogcFddhRtPAIX2+Rx6xhrztoL9xgUsr4H5cPzmrYI/OIgPxrDMbVY5z59hMzZzBgry6PKGriAYE1wNpfu4l4492ECRyo/vnYoYw7bswakVxW+G3oaAYAmNGdlm5abrnylzLoGQDzIqyU6XoTrr7aN5w3MgDWZs0qe/YVBuVtgznZSC3w9BARTYDiNuZsyqYEd/x7XMQPRpaxKbd9Y6+cxACKurzQJhMfBM0nTpGWQXPNMsJ59l34bpGOdh2XpsFkAails07L9avU2FNSMAyrmgXb0bDCZ9qJspRtWLo+B98HrqFhztvs+axqzDEWyBiugolIqRRoGLXT5CW8fTYP6NNkZOLsFY9DBitYu7frx3L049zrN2eHgkJM1cJqzp4s5yztU+9PVZQ1OVpQ1yGvOVskyzsDd2wX02RA4KwGqawOkDdj1XmMxluo/lpgMLERE9MJ7PTi7M64jRtpo25qzADROlrh3XhjdmWHO8nEPzm6IOQuTWa+hu966PBGMaCc3kMiHwaJ9IyDYLrxzhycLz5wNZA1482q1+8kyZ7cUlK6EOUu0fWkDvm8s19DNxzhN3gRRNGcLZSSQzf/41mQN/GZHid0uzNmb7n0buQn90CBz8j07Y86eHosWYxCdmU0uoh1IazxmfndLmLMRK89pVXa2kJn3hvOl1MJvoYCtXTkoyCfFDpRvtOVuvayhOzGbxXJT2V6RrIHBnAXvOSvAVQwuhmVk05mz/hiTPuwFvf43l8IyGXyqpN7TzFn7OmTOloJtJcxZB3gs2qAeOY+Lkjkrvmvpo1Zq6QZhlye8a8r7jMCHpf+p6c/WSp2nGG5avjZzNpyXtRQ+K6I4oKAsc9vqsL7rD+B5t/ArHtc2VWQ6paCUA0ZLNGcFGzCFOIXgbDyn0oK5IUMYN7o1FivOr4KgZZwWy22MYoA/YLwa5S7TnPVAnMQ2U5qzWsUNDaQVB1RsozFOWsC+NkDYZaVe2AaDzG4TVJ8PpNZsVp9oBeMcapyMtfFUVVX03ORcxQdhO53w7Bk4uwXzi9eyhQ+zZi/s+mAdQ5meRDFzdtdpzp4O5izvYjOrZ5WAYNIddzwQ7D7KMGenozQ45IPeVMBSmq+0u2SZBDKuDQhElwoItozusWWSYUkUMmd1WYXtMmc5n+mo9s93Cc1ZBmUOThYqC4PZagzOrhswZWPQflxXPiDYmoHgmQAVJwWAeqrNEXULf372h7OFZ84CSDlZl6yBCKIobRkPhqXKkQCJd8a1mwRuOyiY9t5ecMzZ5critJ1Vjd/0phdbIGuwJXDWyRoURsu+6zwzZ7dTPss0XXHe6ChlzsrncaY5e3pMdpFaAC7JlE0xZ+sKmZuxte68kLHKfWikOWswZ7HPTU2b8DqNycOvq7Z4sxhQKgNzheXnQpQFy4PWAUJancvy9WUS5/K8dWcyMsHGCCwQDCRZZlk+93vD1+uWDtRjXKSUIXXus+7Yo3Fd0XMv7xORxZy1E0DvopLgS93v+fRxThf0lX3xYnA2JWsQgmBEw9izFXm5KXymnERd+XZpsRi1Zzly1/uydMBxGiDE/PVNkNaNNyFzNtR816Q9JItWZwqHoDICaFUVgq6OtayBswDAlZjvF/XfA+kIaJfdtWXAndantEr9dFIW3d8Y80IDSnFzGX+fN2HdyH4e81Y1Zx0DVr8XNM+cbc2NRPm3le8QxmnTtHpAMNdebDCRqN9cEr+14lMe10xlzg4EmS0PCX5eqXV2ydi3CrTB6adkDeKAYPzZunP6xE6l2SPAma3Nzg0MCPbYtU5vliUNiEBzdgnmLC/wTx1zljVn18CclRHBSxlZRB2oxYPjbga0WTTdzrjsVJBRyKBS03YgjAX4LmuynoYEBSvTnF0DOAtgNdsL7kVwNq4Tz8LcrubsZFQvde8M9DE4S0R0MFtE7vsHMiDYxpmztddOXTPQzfWz09fXaBRP0KQdZDRnibpJ+WwxD9oygrPcNlatu1QgLiIAZ7fGnI3LUVUV7U1GdAAs4m3ZySIGZ4eOb9JYWiMZEOx2BGdduUuZs914/uSWZBcs02REeMPwsNC7R7b/0xJk9MwURqTCZpLaeBa7h6jbnGCgSAM/JBuVF1U89vCiMg6aEi+C3d/qncVl1IBXLqsGVqLWJJr2hq+0+HSAFgBsmuZso4ORcmHqg32FJ/M4EoCNEfNLli38xLJIQ/DORWU32W6QlmTvFrLEujLY5953cYf+9d/4DLqjl5Iaynj2bMw6ao+WyXaqbRDj/Af7Sn6MvDHPlgJn3bUwXE7qmo6orA/uAMf4fR3VFTWLbu2ibVyYmrOSOQt1XleVOj5qddQxZ/UNCsmcJdCcZXaotkHUKu+/NM4xCAgGwboQ9E2BcLVSZ0lrw+uinzUAvEBHE/PX9o012ZcuwFIsWxfKV3SfqOmP0zIZ5NBvbsTvtyqR0oTp8LWa+c1CYNEqG4gl/cwQxum8aY3+UwCCwvB9sso0hDmr5rFkYLN4E3R54DWUCFp+gOS2YD0bLSCYz9efs2o5bqWdMWe3YBd2uoG3GJztOz8OBkaErMEh4KzQnB2fHuYsui+dm64eEGwmwMDxgPo8gnxN0AYYbhqQgIyzfQBjNwGuSIbxMFmDBDg7XqfmbAzyPOPirgMJZDAwIl1gflOGAW/Go2ow05rI62Rd3J24QftA6QNuSlmDDd0fg9qjunKM1nUD3dIdv0QnOCdrQOT7sKdg1x7lDtbVNkoDgq1jg2KVcjDTceuyBorcwqqyBnN4z6SVguFhQLDtgJ++fyibRrG8yc2TYUEa121+M8SPQ0N10GW/ccacPUVmLMZCUKP7LGHOjkeeXqa9pZKN6hhVixC09ZqRfV6RXqC96LbOCwHdEHhV2YGuLKGtXXO2vzcEeXTmrK45K9elFiuWrx2PalXGgSgGLCQDiU2+4vHv+mLfnZ+I5F2qoZljzlZVRc++c99tPGnL95KAYOM1yxogCQTXX/z8peasxjaV+SGQWbpByHk65qwisVCBrAGOu3hbqYBg+K7UlQ6waHWE5UJrWzKYs/5ZEemyApJFqz161x8A87WBOg7K5PoyO53SKaiXNrF+93+7djlizVk7E/xF8+rRnmMna9Adw7FcMo+JQuasCtIzcxZuTMqRaKV3mrMKeByfy+kAczZRZu1+2IYwZxcKc7aBPsliztbQNqz+Qh5PbVhpPw0FZ52ng0ishHhiFU2bQ5TaG9/3BP3or72PUGd9GHPWNYrunFMeEOyMObsF40VQ6eL1sesxc3YZWQMZ3IYHttPAcsEBYm8N4KytOdu5ulidKpFnQBLltSi7NGM2rNNqHHVaqtNRTSeLhg5mC7pziftJmVwoD2LOntjBmaaFLLYSc5qzUJ91XdHz7zlH7/jwNTX/demKlpXP5zEBWYNBsiK82z+p6dx0TNeP5y6iMRoDInfss6zBZpmzkwBsXm9dxuBsHlw7VMAiaQxGPnXQtWV+j9hGBSBwiaUCcRERgNqbbYMnfTk0zVmivk+8eSs0Z1kr2vd351cNCMYbNcpCokRrHTdSiIiubIk5y0wxTY5Bswu7E6qqbrJ49fDE6clv29wG3DRmzpaCs3IDadObFWe2PouYs/27E7qDhkCbA2v7x1xXoUusB0aU/ByzjoJPfqcl484RMKNyY/n0eyOyN+gkIMpjxqPXjuhzv/t19N9++nPAnVkyU+P0Vln0acCMznIzFuKR5mxfJnFe4KZvac4agG5c/2mgwweWSwMqWlqpqgwYt43ums4mu2L1uSXycmzMEYCzA+cUuqwBMGfBc5HLK2UNkmC14lqvaYtahvIB+K6M64qOKdSJtYLrNeKZdGXw4K7Pq1IBwpINBzz3WMT8aMnPwThfBFe1fKyNDu69AmmQALQEkJGPqwHB+usLt238WfqNh8Bn9+llDRLpwlCsYfyadrDFnNX0uIOAYPC79IRA8Gwh1ti6h0X/WcCcxYCVLqk2/E27XuZbVcM0Z2dNowZU9BuQ+nUeKIwDGmpyDlrZw9/iH0vltVwayqYsUdlczpabgP5iUGmI/uIP/yYRdR60OLdQTWHOSpAemdun0c6Ys1swXLyWaIw+ei1mzo6XAMbigGB1f/x0MGfZNiFrgDvTOYCKmbNTYB9Iy6Un898b6EY6xGLN2TUHBBsAUFrGaUzF7IF1Z/dTmrNbAALwPZuCrMEyAcF2xiMzov180bjJ0MYDgrnJbL0x7dTjhX9XurzyoOmJuEYz7sOePDgJvrOhrMgq5gF1iyE/3INhqXIUMmetIHObMl3WYMWAYG7TwJY1SPX9sr9Dt7tN2izB+NVsVFfuHX/6oLxPXrfpsgbDglRGzNlTsOF7Zp1Zboz6wir8DZmYbGOIsq71vnyMz3GBqYRGIb9FVtAY8zaw/AABAABJREFU/JZkzjb6eeiqjOX4J//3e+kDTxzQd/3C7wdMMjSdObv8WKMFBLNALFWfU8xDPTClA+9dgCtSz4kDgvXPWjQUObZG3wEw0WwIaGKVb2HIPLBJ0Ex7bqm2g2A2RlhPmawn7Xyc/yA5hst7UcgaJGUelK52SECwrkpi8JXb1KiqondU5hsGggqvx5JUlS7Xod1eXVUqSQY1Z3ccc7Z1m6MOpFGeV/BsWj1fyZxt2pBBjyVKsV01cDhlfiNI30TQNjMGyxpkdiewH+Lnh+uPhfLOPg6yTJqsCT9DBM+69zYHusbjUA4E1Ni42iYjKb8R9fc9AJxdLGLmLBHem55WIJlhgLAl0g8+x9iWlzVI9+ul+ROl677UHn36yOWQYs5aAcHkO7qJuD7bsDNwdgvGi9em9YBpyljW4B5gzjoG0RBZg7kla3D7L6SQmcaMupVkDRyjr6tHnMzkgJajTJAgoq4TSWmiOlCjz38oU2mIcV4sB7Gc5mwMTpUG5ymxYwXkISJ6YQ/OXlCZs+thR5bYPGDOVkUMPmnIwtw3dDkPYKOE2RPrZrOy8aA7qf2u47oZoBFz1gXqSoFreltA4z7sau9ShXqzRJvQnLUY8iHjXrNHrx3RR64erlSOk0w5uP/Y9kbbCW+qrFHWgPvmlKxB6rnK364fz7dSLy7AXqGsARHRHf0i/OqAPnndpgYEG8qcFf3GGXP29Fi8GOuencY4c2wmsfBBtviorpORyqXmrBzHHaAmNBtTbp6pUcuSNUBXZSIPXOAYzKcXLdhXGDodYw3r0Qjeo7riSmavSzc8meu4C/gTA26ch/ZdZisZtyUM7PB8+9rU+hl/W7TpxXakFTyQ8czvAtZXVtZAfNfODzVnUdag+7woNGZLgJlAEmPZgGDQbWNgLU4vcDGHO03KGsBwWFeV6hFjMWe1u9A0Z1sK2zbnxee7Mos2l9pQ8RtMLQCnoaxBEoNjAK5wfeIY0EZy2M7d3B3mSNZ7gEdzrGVkfPLztzRnOb8ngDmLaXnmLKcZgrMWo9kf43PjY9G5jXYvGrgbXieTq0jvIyybNY3ad2WZswj8x9iuWrYULKE9+8GyBmKMd8eLNGeNtmeMvUNsf2fsypTSnJX3KxnIqQ3j02Bn4OwWbH86ch1AyQL20T4gWKg5u7xbNQMbp0rWAHomZoltjDmbqVNZj5alwMvZPMx/6GJ4iPG93nW+A/evHZaDJhqrim1awGIrNVcfAnz6sk99Fn32i+6mv/Ty50TXbFNzlu+xqnqN1gEB5NgQ6GMXYvm8D3qm8qiuHIC7KVbmDBYe4yXup8RORDsvAYGd5IcBRBL5d4+Zs3viXVyf5mxG1iDY1InzWjQtfcn3/zq98vt/baXNpFxgst3J5vqPlGlA+vkVA4LNlYUHWwlbH9sWt4NtBAWbw2ZHqXGgGtROHmJPLnkd2k3FO4J10A9mZc9wBv1j9z3tbnxmt49F7EplcciLcsli1dwNO+asnR+6zhLZLvn8yeVJAXiptmYBSlIvcqSMGS4gmEhzqHt8zkplDSTjzJ0bgZA6kOiYzoGsQXiOCc7KtDKgrqZdHJ4fPwtZTvU6UYZUvcfPSWdiWhYyZ/NAWPdb+F1lzkKl47zAgbN7A2QNlLaT2tiWhiAoltWBnDXMp6DcUr/V/S1lDaDONRCFKAb6u3z1fqQB5iyuwbwOK4Oz3XELRDY1Z8Vnx5zt+4FK1xHVZQ2GgUHYL2p5aAxSlK+wN0H8D7nNCe8p4DcjTgzm7KLpgmHhHCRkzvo6I4qZsynNaSyLyXxWzg37ev4tPs/6Ppg527TRWqZpdU+IMB+fv+mpsDJzNlXy2JyswRLzNlNuAv8ekCxuWJ2bjiKmuDSUXpH5cf3yeHda56Vn4OwWrKoqB86ULGCv9MzZewPm7DJu1cycPX2yBqgnNF1DICqpORtoxOaYsxnAhi0F4KHmLBFGx94cOHv3+Q4IGCZrkA8Itg4XVhmgje05l/fpx77mFfTZL7onumbsXPE339m68tU1VVW11Pvn2I+TkXvecnOGNX73p6OldG2HmN99r5cKMFhipuas8cwWTRuUyzLHnO3dweVGSS6fUsuBosiS1ADng5M5PX7jmK4ezOj6gPdOmpN6yDBnN9F/pOxE2VQ53we8ZEmUocbvlMbyKPEYwY0UHjPR9W5TNjQgGJHXlV6GOfvjb3yI/vg//EX6v3774cHXonldcd/Gh7YnbvuoW3vGnj0dFjNlmDkbL3Qli9IxZ4Xet9drjPOTYJLlki/ZtzIpixErLWR7xddLN+awrBScI8sYnrv8WCMBayKb5aaDszrAzed+8IkDmi+agF3oNPgkyCrS9gykNFhgMWltVpWdVpo5CwBQG7sFo0WM4oGg+gKkn7CZlmjAuu/KuWFAMNSc7TKJNWfzwAze2pCI8wRsUM0FHgHVhfHOacxZf70/r670TVcNdKuNgGBNG2+aty0EEu3fGwZMw3L6v03erOuX/L0hy14rky5r4K8vMuiPLMYwGwaqc5cbyYZBvjTQNz7XYs7Kurx5Mg/m2Dpztt+Ek+CsKHDcv/hztfTDa+Py+WP29TK5qtI3xSybL1pFs7s1xw021K+O6sEoW7pPjI8N0Z0mAo1wNxYNuNgomyYjVGI3Ye2wNx25MlngLLL7ZZHk/ZxSbPYMnN2WDQkKpjNn+0XqEpqzDDSwXs9xgbTCrbY56AmtA5yVjK8OcCur03LmrA3gnSzCAD/7E51JuQ7jieDlc8ycLQMC2rZNMmeXASjtMuZ1RqV5Fub2NGe5jXgws5whdgxaxVyfUiPUBcOajt39DZEuGWIz2PBA9/x1mtMGG5dpzmJbSumm7bHmrCVrsCY9YgziphmWUXtOGKDraBXm7Cy9IeQ0q29RQLCdQHN2Reas2ziLn39JO8W+/W4GZ7egOzs3NphS5mQNDoaDx2/70NNERPQbf/jE4GvRdFmDYeMRt/19eA83JcdyZuu1yPVdDQgWnuuYSoKtRtS1fweMKAsy6WYombNOc1boXKYCUCU1Z01wRpRD6VplWV0ZlXxWWfQ1AsggGhYQzNacJXrzB56kP/ndr6O//7PvDHQ5bVkDvZ5ltnJotSQULEu5GyfBSAFSDZE10Nb2KbdzZM5iG0h55DggD8C5pw9m9C/+6/udB8fCkjXoP2PNWTM792CWlTWoAbTD++I0RhAcSmOVE4V16JmzxAXzedU6c1aX6tAZqW3burUfr8FaigFLfn9aAyBqWlJBJRcQjPNuKQDbNIAzxaYtxmZdWpbmbAwyYr9rvjMOnKrUPiWok8afy/2ytcnawHNg05izbrOt8rrNGjgbSQ5ozFnjHrXjblMpSDN93VDm7BzIJD5fn7fNnO3B2dZmyA7rE+PfhgQ2I4o9VIb0ITnQXP6dsxtHfu1QUaUyxdFUWQMxbp3JGpxZkZXq8t04nrsF0r0XNeZseVNjhqxkzuLk4Ha1OTBdudzrkDXAKOMlkeSJhjBn451Hl//c3w8RyhpsIiCYYM4WgrNHs8YNEGpAsDXKGpwUuLJL26bmLL9nzBBEpmDpO3gMWsX7LiBY+O4xoLU/HXlm8obAZ7dQG1VukrduoHsmGJ+TjOZsCM7mmbNPZWQNVmfO9n2mwZxF/TSt38CNr+MVgNNckLS9ybAATusyqZ1NBAEvl+zL3EacFhCsgK2PGz13n2fm7ObB2VkzfFLLsgZXlwgIdv24u+ahJw4GX4umbcDx5sdQ5iyCs6tsnp7Z9szSmFPdgdvwGj6MLM8cc1YyVuX7wouoyp1PQd5spZqz4eI5vifOJxUsKgL5lHe8ZKRZNK26EeMYa1nNWZ0pKouDwNQHHr9JRF0/we9pnQhwZYECOTdbK2BYBjNS0yrAIvu00wHBYi3eYc9tAX16yJxNXMVAAgCeP/GmD9Kr/sO76J//1/cTkR8riMJ+0jFn94ZozobtmGiYrEFF+K759u5BNX2uHT4//7cD5Zz2q/+tBq8zNIsNboGUMhZA27aR5qwPcqaXszVY6J5J7/PL6cGmmLOl5A0HAFNlgNL+b54+B8xZIxvP+rXAbvzbg4q5uA1tG6998FQpa0BEAQM7ZpjL71z+NjomTQVnletz/Yylc2wZeiNgvrllR9i2QvNFTPe3wTWJPErNeaj0iQ2Zx1ol0zZDSwxxMRzzbM1ZrbzhnKUkeN7tbGfg7JbsvBGtXRqzZs/vjF0EZaLhrEXsRHYFc7YkKNmttjkASV5vdxVwNgRHu7/TO4VsQ5mzGkB0IlhW+xtkvnlwtgMqSgOCYQe5r9xrif5jqZUEgZK2Tc1ZWT4EyUrfQXSRP2eA8bwRs78zcsDfuoN0saEbGDKB12kn8xBU9BM+PR88nmoLe1lwNmZ6LGNHGeYsLnK1doDv8yra3jkG7960O75tzVmpKUy0hoBgrl3GE7FpgXcDstx5Q+rKFpmzmjuyZavIGrB2+AeeuDn4WrSbCnN2f6oz+y2bwybMOLOoO7Pby2LNWQbj8Bzqj7XBNRpzdpzRQZQu/DHrs/usBLiR1pyN8/G/6Yv7NlMOInQZXw9z9i/80Bvoj33HL9JD4p31deKP6QxDHVCKz/XAFD+jedME7MKRY29F8ED4TQDxbHJstUD+Erab0/YtALTCwEjD3GUtN3nLkDk7KgDCiHztYQAxnnMzIww3wY81zdkBsgaSqUukB9O0DDVOGfSrCEHKSg3kaoFeMiAYlqSu9LLpIKkGJXb3K5mzWLZIc1YBH/m4VqsO2kXdZqhjlTmrlNTSfbYs2AjS2mmj1DH2tcZ7gPqnGrYlZUK4DNzerU3WRdNGY3xOcgV1veNNIL3cJbIGWh3zIeSBWOxcLKvGgrZs3rSK9rZn81tTwRqAQu2WtE2nVDPS0qiM522Z7K+HzGNN5mxGV9iyAJyF9LUxmihkesv8JBO4WGbkNrMzcHZLxoNvTv/zsWu93iywZomGu1WjS60LCHaamLMwSZqukTmLDMhpIVMxFyTIpZcA0CXYt9GAYD14epfTnC1bcLtF+3SkdoqTdTJnFZAnZ5sKYqWZ15zt6iHQKB4MztYAYImAYAzOTsdukrmp+5vDwtq7i68XUDk2NGct0JTz13dCvTnm7M2u/5SyButmzqbe9XHiPUfm4Sra3scZ5iyDadvWD9fkSHjj8UZhPyONN+K0vqCkzzkBr4RtMme1CMo5u9MxZ4fLGvDc4bHrxyt5XNwAtj7b0PHoBIBp94zOmLOnwizQTdPqk4xZDDDFNgIXcF3WgMGC/nzxunjeW7j5GkOI8aJYs4VyH3i+Y/AmmLNWwK1UeTR76wevEhHRz73to0Y+Pl1tca25wWrlQWbWAkAOBHVsWQMS3/X6tzRm2XIBwfAHLoIP2mJdFKY3WHNWSy+RAAN+o1Ho7lwiuzB2AEzr0uH7xA139K7h53hpUEAwd7U7NkRzFqsI9WI1zVmciwZMTvgidfoDqY6qcmXLsT5rRIjBdOYsAXOWperiskkpFO3ZO+Y+bBQ4wN1g81bKtEzLP2WOOZsApdm0uYaVDR+25RLiv1GT+sRYf+BzkOVCCzacgE2e07B2Y04CXGVT32ExRml5RJdVwxin80UbM2ehnJasgQfu9TbYgbZl41uXZ/wbjsMlxu++37QsvtRue3B8yCbajWOPizUFzFncTPD5hZ/ufS4uxe1lZ+DslowH36cz7oyPXe+YsxgMjGi4WzW61PKA5jRnT8EiCll+DASsUm6NqVksa+DkIQo1ZzVZAwFq7G8SnFWYsyWAfioYGNFyuse5Mk4HABt+F3aLmrOgncqdfSk4fQJAn8WcxYBg69T01cwz/SqQG1jv0BUFBMswdEtBemaQchuVzFmvObsqOBsuNDTjd1jL62jtzFm9HNwXbZ05q2xynSv0CrHMB9ayN4TKmLM13XNaAoItIWuA8jSrSBuwtMr5gDk7zJMDdYLXsXl6ZtszuWDldoxH/UInZNfwpcE8auTBhcSa2WbOOupsWL68+32cF5HQyUyUQ90MdIBJeFhb8w4h5Mi5o9ecDc+TZWoUxhlRDCyj5iynjfqIyATNMbT4e07GwPpuzTUlUEaEbFO7MoPrFO1KtPi5KaB64vpQczYur16+HiQEAIbT4d9w/sMbwJj+/nQkmLp5YAabyhDWWwWAI2ofc3p1rWvOBqAXdPVH/RyEvXnwvqqq25Ac1ZUji8i02GoDpGzbmDnbUgtrRA8qd795k0CtVqvIGObzXNs2AE6tnFr+KXMgElkgalz3JWxuLnsHzqY3lTRZA2uTtW3jeZjcsOnyLWPOxptCcZrDmLMa6JkGhIdrzjYKcxY2/ozrAlkDpewYhM4fs8thbW4MwFd9f03D57FmH7+krgGSltpWb+9oakAwN0fxbTpV1tvdzsDZLRkLvj99mF7AcsCbu86H4OxQt+ojAEl4AsQg7bbZVsuYi+A9Wm9AMAQDWTcxK2vgJgbp12WckEmYCY1VjnJ9uAHNWc6fJ0OLpi0CcVLBwIhAc3YN4P4qsgZb1ZwNAsgNY+4ii9TSnMWAYJMN6cCy+YVHvTEWstRKddplxj2VBoaTYKzFnF0VuJcMDc084Lw5WYO85uwtCgjWs1SxXC4g2MkiGWzFspQ8wKQAdEedY96QurIF5qxj/A6gHPAm7VPLgLPATJZu0kNMkzUYypxFneAz5uzpMn5FGZDnjfyA9SKYs/y5UBZNgeaslp8DC3pQVLIbhTs0l8NidFrf/XH9b7cwZyzYxmajBftQPT9pUlvfYlrJ712ZNSBL/96xNrvzF40HsFBDNccmk3rDbDlZgxxzVtOSdGxT4xpZQE27Ei1izqrP2L7ea87WIXM20bVxarxBjOCeY84GAcG6v7FoVVXRxV3fH5cAM8vKGlQELHV4JzxzVp9rW8xZnoPwnATBubqq6K7zO/QTX/sK+j/+2qe74xbj0tacDT2aQuas7D88SCP7tDTr2p0ZyJukJAy068s1ZwFENQKhscngZ2Ep5XVcHh141Jiz6Llm4QtaQDBtvqdqzirIeOwJ4fORx7SySNOul++tvKqu4j4jZfOmjeb92COVBATTbqml2LMjNZe2vCmG3Isc29ehOdsWnKMZet2VMGc1T8tWfK46Zt9qOwNnt2SOOZvRmmNGzZ37oZvLULfqIyXa9+4pYs7iYITMnGV3QU5EQC4iKtb49HVZyJzVAgUJhiAvhm9ukDl7cXfiwI2cnEZXljRztlQGosTc8xgQEIwBxVuhOUuEjMn1ac4ic9YBphu6v1DWwAYYV7GIOZsB1GXgNcsk88jSnF1Z1gCCuFnGeZ0o2suo572SrEGmHI7puGXmrAz4RkR0YcePVQdL3DM/s+k4nk2VMGdRz3urAcGWYM6yrMHTA2UN2rYNmLMfWIE5e0PZhNufDgswNwPm7M4ax4Uz27zxwo7npNf79hDKGlBwTOrAjsU8CiOdx/l1n5KhxiY1Z6W7JVsMImp3Z0eYR9CCKC1rIE0DT4Zo2cnNPk3WgChejHayBnF6kn2Mepfcn84XLYCNfuEeRxsXoGsTllGW2freXWugD6QzGkdQbsuC6wwmMZt8Svpzs68PNGcHyhpozFluf7gm4HmhfPZ//Ll3luXXf+K9DZU1cO8aMrjh/WSgeQF9OrYTZDc6cLYfQ7AkfI+veP5d9HH3XXDHtWlnXevM2XnTuvpzzNkWNGcZnIX653PQWqNpVu4TADTos7Sq1Y5JHd+cYX+Ukx/w6+Fa/T1I1zGrbSayT4MBQd/eTc3ZNtac1UF2hTmrbKrETNF+jDHY2qlriZDxH6fpzhHXWXVv2XyhM1yRaa2Z2xhT5B24XHyU2/MyzNkh1FmpOauNh0Pyx7S6c8rHx5uG5qwFGCPTW5ZJjvNnmrNnljQfCCS9KGPwVmoQITuhhO2mueLzBPE0gLO48GVQrBuQl3vRPBMXA4IVas66gGBlmrMaeCfBvk2CK8jSZa3jkqBg7FrATDhpQ5mj6TKWMSbRHNC3Tc1ZZFoPlHVAgM0KmnRwzJqzo7XKRmgWyhpsJviYDAiWA9S1etZMgrESrM3JJ5RaiazBJMGcXZeswe3KnJWbTERdv8jzpGWkDbjN6MxZ3piznyuy3O+50IGfj28zINgA1tKyAcEOZ4ugba+bObtvbB5ZhjrBLrDmKZhXnJlfNPHc4Hq/cRt4JAqAw7OSuk9ki4fMWQWwc0Bk9z0CFqkKPmUQMpmOK6OBAi6CBSJez/n5ckvzoEwBAzMz1OA8UIKzVgAZWTdNGwegIbIZohhALNScBVmDDAOW61XenxzDtTF93ti8VMzXAZrcdxaAn5xnatG/6nNbANO4VNaA7xijg0vgQwsIJsv2I3/10+h//4pP7a+zyygZdkTDNggRtAuDR/XM2bpSN9VxuoPVwd4WPCcJNWf9ebn6tIIzHSkSfS21AdkA89UYlPxd15wNPxsAEivSWbI6m5Zc2UosyEP5XZU1CDRn08BlRTqTM9iEA3B+lFl/tG08xuvP0f89gjWbBcbK7yWyBjrAGb5z3d/pa6qqMoNOaTZvmpg52w5hzuqbS8gWXdYd3woAZ5nUlR/CnLWfC/xdXhS3Qdyl4evTBmdjMFkL9ibLdJrsDJzdkjHYei2zKGMQ7Y69aXA8dKsuYc7GgOJpkjWYw64osrSW1bVTwbZxGRh2NC9kziZkEliHls/ZGxgde4ghEHzRtbt8PjlZg3UGBNMCtOXMDfRb0JzVmNZj575b1tuji7yPhm4EBNsZOyb3KpsQKQtlDTYDBJ8IZqUH1NOyBjl5C7kxImUNRmsC7ksCgqU2KQJwdiXmbFpzdu8WM2exH62qytx8KDG5yEIr0pwFwJiZs9eO5hsPfMnlngzQ+7ujZ84enCwGlU/23x94fDnmbNO0zlsDN+H2BmoYz0Dv70xz9nQZDy08Jz2aNTRbNAGo4F0ewwUvL+Zx0ZTTnGXzWq/yePfp3TnDMrDJpK28ArasctzSvsXz1xEQDIPyyrkjj+8yXY0NpE0F4jr0bCt+DWdNEzBBHXM2YpPJ7/2nyFMOd1r958BTtmHMWf/jwgA32ORj0tb2KaA11JwFbdYkWNp9YnRwrznblxsS8JqzYeHqunJz76TmrNtA8MeWZc7yu9YBeX05KuGOzvkG/YP/+8gxZzXNWZgnQBksUE+7CwygFjJn/XwW85Xu2r78Vp9RBde3rWC1alcoB+uCthyUh8+r9P5FZ84COGuk69mw+c0JvE9OO7XJWhYQDDbuAJSM+hlDcgCnEVZdqrIG0R+6NwiaxYy2bN60qlSCFUiSLZQ1SAPOyzNndQkOy9yz43wHkAysommeKiUWMGdb8NBJac6K8rYif9wsO412Bs5uycplDTpm7SUha0Dk2QolgAoDA7swKTxNsgZzYEMhe2xZdo7G1PQR6zOTbAeUpF+XFGgTBQTbYEAfBFAuFrY7Ip1RhbYO7V82z7AsHxDGyoRxU+aZYb580wGbI23bOrBiZzzyupySOcuyBpNRMDhugj0byhqsRwZA2kzIGnhAXc/Hsbyz4Gxa1mDi2sYWNWeVZ4RM1qMtMGeXkRFYxWYLvX7OrxAUbJ4A6KcFG2jY313a81Iumw4KxvkOYRxc2Bm7CXwuOCialKVZljmL7VMLCHY8jwNeaIaeKGeas6fLeLFyATQubxzNVY1XPiTBWnxXs5qz4DpLZAezkq7WsRusDiJKw65CWyx6eYVEWcVx7Q3PLfpwo477sceuH9FPvPGDboNE1oVcjFpgpyUN0VLrxsBF4/9GWYPc620yDyPGLbcFX5ZFm2DOKkCJW0AngO6A/ZwpfAmonjKsry69PItNgv6LpgXN2e4zkDWYxZqzvrwUXJfKD+9tMHNWAPUBc7YymLMKWEjkN4h3M8zZQMNXBcp0F3Mes6rKz71aKJt/VtT/Fta9z1PXK5ZyKwgkWgCnegzyKTGPzeqQWqPUPXoXSXDTHWfAtbbkEmKQvS6QNSCiaENZWzoHAcHAo02easkchH22XpeqrIHSby0yaQ3WnF14zVnXtgHMt8BRfmxN26qDJDJqy4Ik6u14SHfHdeP64gEXW/1wa/yds1BzNs/mxfaKGWKxfH9wOu0MnN2SFYOzhqwBkWcZFskazBOyBqeCOesH3vHIu80uuwA8AbCXrRRsOy5kznqwN05P5r8VWYNR7YIM5BjbRJ71ZoKzA8DJnJ0UMibRNhXESjON0TlEdmC28G4q0wRz9iYyZwcG/RtqoayBDTCuYpI5y/eUlzVYDZwd8bu3qqxBhrFK5JmSOnMW3BdXYc5yn5PRnD3aMnP2RJE1IPJ9Bk6ySg1ZmNLGBbrg2JdUFejObljawG8glk9q67paKigY998MqH3k6aOlPGAYPK+r8B3i/omoTCoD7306YF5yZrfeEGDlNnBdAWdRe9EDHt133Egcg9idtgCWgGfEWK34I1yURsy3qHzWwh0W5Hg9heVQF6NigcymugeruXvT5nb/v1/+A/rWf/d2+unffrhPN/xdCwim5WMFEusYhd2x+SIMCGbJGlj1Ko9HsgYKUL9YtInnEufhy6ReEl2X20yO5B609BJpIHO2S687rkWlZ2vFOxFqznK6sayB1qY8wGtmB6CetyFBKfFaH6wPy+DnU6F+M6l/xwHBIC0oFx63NhxSsgbTUahtLdmkFbwDsoz8XXuMrl+C67GO9eBfiWOFw2DAtsyAqO5eUdYgw8CsjHLiVU4CofLvYsoDBue3RPq7hFk65mwT9wtx/94dwDY3hDnLaYT9jJ0f0XDN2UXTuHeT+z2UJLDSwrZlAcv8PMcF4Kw1JgwBmiWYPYRkYNmymrM3ToSsQaZMVkAwzLME5L6d7Qyc3ZKVgrPMprlDA2cHgGOaTioDDqswurZlc2BDEXmwZ1nWr5cVQDf1MrBNk4jQLMXykoF0hkbHLrWOLeEnzaXtjqhA1qBQBqLESkE5tG0yZ2daALkB4DDuMO+Ma5NZeMhB2KajIK91a8FiII3xqN4Y0H0sNGd9BFg9HwesKcGg0CQ4uytkDfhdXmxB1sD1G8qK8nBdmrOiHqXx/R/M1i+LkrKZsslFRCvKGth9QYmUiizTtoKCeSb6sGkUBwW7OiAo2PUe9H7grn260Nf1h54cLm3gNuCm42DRuTup3cKiZEzC/vuMOXu6DPVOGey/djRLarw65qziXptnznafViAuyZxNBfQJvit5xeWO74HbvSZrYDJnNRw3M9Tg5gkPFdf695gD/8rFtFxwdiwiHcgKC8j5eJ1ZnAt24Gx3TiRrYDCUZXuw5BACcBaACmkaI86BFvol0XW5uV/0nGz8PbJfevej9PYPP01ERKP+nkrYxvyTlzXQNGd9Al7WIE7Lu+LmweCAoTgAWEEQFFntOeZsa7xX3M55gw/LFWrO+i8a2G3JGhxCcGvfz4QbD136YTljpr3eNivR/7QE57k6Edco5SxhPYfl8depmwiQDL7H8nrrOgusU5mzsHmTBmcFc1aVNfB/B55z4tTVNGf18rWtDRBqYPZQKYDZwnsjcL+HeVpMfXzfLF32yJsg1ecoP47qIXcCHioi3xJbt+asZM76Mulzaz0gWFizQzdLbjc7A2e3ZAySXc2wZZzm7P40+m2IrIHGnN0Ft/ShYtPbtplbBIQMvGWBQT3AUxlAxSDLbk5zNpGeZJy56NhrZjFj/UzGoDl7NCAg2DStOTtb6EEqhpVTB3lStlXN2WR7KdgcCfTmasd0vCk0hm8es17XKAz6t+Z7xEn2qK5cX7LuujwRsgYeUDc0Zw0mpjTJlJXftcXEMlYia5AKprY2zVnuczLM2cOT7QFiKNUxjWQN9PZdYlyPmubVMFkDBmf7oGAbB2c9E32IXVoiKBj335f2JvTA3ftERPSBJ4aDszdd0Mewj6+qygeZKwBnUb96Z7za2Hxm2zUEKRmcvXE8jzVGFWDGa8GFWuyVOy/Oz7nZ9ifJRZV8fTT3Vszb+q6XG8vBC+i+HBqrTIAyVhn7s9X82ZBlxmdymXmczGvO6hqrKc1ZnpvNAagd13Xgdh/mEabVik82Oefj130M85Z502RBI8yzBIxEy83VIx3XDDjF9qEnD+hrXvsWeqjvU0cAVBKl2bacngsIDKA4XzYrZM4WyRrwuXBsyAYhuj9zddaVd71G4APnbVgibEMyIBiWywKrLK1S7XR+j6bjUdDPLMT465n31H/K/kJ/YzlNB6A1Mcs+DjSnPbs8kK+ZBalpYDjq25sAGZfdYoUq7yEyEVOvYqQ5m9k4QrZ+zhPCMTmROWtUpn3vQgYlAGrj86tqmObsomkjOY2WfJXamrP+enWMdP+F8hqWab9YDGzL5AbSEHC2pI8fAoqGpI4W5hlGmar4N/nspczJabMzcHZLxguy43ljuiO2besWbHdomrNDZA1mMciArrq3u+6sG3j7BfvOikFHNM3ZUtdufl7lmrMJ5myf59Do2KUWgLOjCgLRlQcEw0AxaAjIpMDD/8+/+V367/75m5ITbku7MmX8vLbCnF1R1uAYQEoMmHQ0a8KJ7SwExIewc4cY5jkZ+cn3Ohm6Gng3Bs0pzUpB+iggWCRrsB6w2YOzCVmDRL9xtHbmrBEQzAFp22POYpuMmLNTBnmGA9JOv1TZJXfvQ6IuvVdC91w8c3azmrPzJTaYiJZjzrKswcXdCT1w1zkiWk539kaij98fwMZGz5Yz5uzpMtQZPL/bzQ+uH82jxaAGcvJifCRkDZxLsZKfZ+pWwScbr+Ulm0+mFS3mjeYWgIAU/50OCMZ1Ex5XA4Jlhk7ceJdSDTxOyq4jZs7qMgExCOnP57G2c8H1C29L1sByL5bZWuB4BUzL9NwMwabuc1wACOFvOU15+ZRUbErJS3qWSVmDkvI57x0IxObYgDB2OmBeSauIqSs2GbC8JYZBrrgtBJqztb7ZrbHQ27Z17Xx3ymzj+H7YqkR91rXOYjxSmbOewMPsOvmsNDBQW5NwmqhR6UHLsB34+1LKP5CoF+rapjcR+L3CKZKVjwvyVpEKzmqarCOFiaiZxC408BSfOZOQrh3NI5As3nwLP7tz9HKkZA0CUDvQH4/PHyoFMFt4TX5eB7TQR5fIGnAxAhZ0E4OkpX0iWzXwXqSHypA+xAaO9f4iZ+hRWqo5K8fvrm7b4Bw+fhrtDJzdkp2f+kAglv7njeO564RVzdkBzD0PKMaas0RhBMzb0aQO4XTFBaAGApXW52DmrFJGCfZtStYgAFDqmi7urk/WAIFtCzxcNC399G8/TK/7/Sv0WELz0dKuTNmoMIDbOoyBl+kS7YXI3x+/cwiGILvwoK/z/f53x2hdMwsNwXTWcZbHV7U57Arv9KBiTjNUY7RrFjFnpazBupizvNBIbMTwPWkbRcg6XAWcdSCxUQ7Xf8wWW/OCwHYv5RbO764QEExMdtFKNisiWYMLHTh7ZcOasz4o1gC6AnnJopwXDRq7Q1/cndDz7mLm7HBwNtXHDxmTToDt7MbmM+bsqTDv9kpOk/760SzWGFWYW3wINS4Dd0qlL5KLNEvWANlFXVI6GOiyMuCJJgCVY4DZgzEaINKfI0CiVWUNJPP4xGBPyrppDEDJ0pzFPFBzdlzbAcGiKOoOJBFgvQHWIuvOCmAm80V3ai2voDzwnHOa8hYYGKRXUJ8yIFgJ0IBzHQaROS8s97FjTdvlTwcE6z7x8iFjUAV587uGAGFd+UjoCCqHoFn35XjumdJecxb6Bvk8XFraM9DrBMFZ1LZeCI+bWBYl7j9SjxHLhlqs3W+yXcUFTd2bZujBoIOo+LcH7lIAN55bVyWas/z8S8HZPHMWs7zvYjcXe/TakbLZI8rFGxnGhkBwrTHVaEmvNyutyqgjy5A5y+879tFWWvhe+w0RLHcbgbYlQQHDPIYFBPOboCEoXGK5jQGiYaDo9SPUnPX3ZwUpq6v4t0COhEKZmdNoZ+DslqyuK+dibgFlfHxnXEcai0RDwdkYUJyMatdgZdTF2828q2t3z9PxquCsxoTkRWX67S1nzlZBXmjbCgiGEcS7Nuc15XKWCwgWBKwyngO2q9QGgCYbkLNtas5qActK2wtRrF06HdWu/AfALmQghHeYN6UFuxCgvWd/ri8ffDdZQ3aUAU1LA8NlA4Jx4LEV7+fIgaL2Rsw4UXeo571MwKYuXc94sjRnGVxr2/VLo1gWgLORrMEK4GyCgYr6vtaiP5Y16MHZbWnOGrpYli0la8DM2b0xMGeXkDU4sfv4/UkvtVMiawBs58mKY/OZbddwIZmSNdCihTvNWXhX0a1de0Ol5mzMnO3BFVe+8DpXbiPdOL8YkO3+DhfFWtcqAVxXRoXRl3OXPAzA2bAMLt2MrIEFKMmyI+uYxw50r+f5IJGmORuaY0XK45Jx2/gy80J50di1omlBOuascQ2Whyg/vpc9t3TZiGLALx0QjMcvP9dxzNm+jnCznTeA9UBTnKaeV9N4GAeBoCEkh07jNASAKmDTlmjOcn3gHIfnZKHObJh3ihlsyRrwezQVzFnpXu6Zcq2aR6dJqQB0pF3f14tyHyY7cqBEB/Y1WpIac3YEzymXDzKkw3T99Z4hbANhaBI3yDFn77+4S0REj1w7ysrSeO8CfUMgdS1b2yb6f+X8uqqoGjB9mzXgcu/WrhgQzAYTZbnDDbWYOZtkz6t5DNWc9XljviVmNT18v4bICSBhCUFWa2qta87G5wwtx+1kOgpzZhuxS3sTunowM8FZZtJokgZEw9yqjwwG2M64poOTxW0va+CDxHT3vC5wdgqBh8aFsgaOTVfInNXAOxmQjBfC86alk3kTgR3LmmQiDgoIdpJmzo7qiuqq68wtlhQCsqkNAFfOAfedA/rWaRorjstawmo9drIink2wPx3RtaN5yJyFgGBEq2srW8YM2arqJpHjDbCQ8d1kUBFd/dRyLQvOCubsZA1to23biPGsmdeW2wxz9iQBgrLtTTqN4kXT0vWjuQP3N2me7RVP5JYNCNa2rWubquYsBF1YNK16jtQtvqdnzj6+YeasDFpZakvJGhx5WYPn9eDsMszZ1AbcEOYssp2nG+qzzmwzhkGveKy/fjSPFvsaMOM1TIEdV9dJNhcCAEQ2m64CgA/zlGWwvrMhkIZn+NsJwRgtzVjWIM5nCHPWg9vhOTIfXdYgTjvSwITzuf4WoDmLAGoEqIivZkCwSA7Bg4QhczYub5ceXkvuWkxLvy4GBS2LGcXxOZjX+67coIOTRVRm3gwr0cTle+HxZwEAjhYQjMd3rWxS2gPtTe9/kr7mtW+mZ1za7U/2vw0BVpCpGbIsyf3NXmqWfjMf5rFiCkFmsWAWk9lkzuZkDaAskeaskFaJmfaWO3j42TH39N/Cu5PpcFsxThCGurY52RQva9BLyLT5TZCK0n0cpo9s6ZSVaM5iKvf1bfXRp2PmrLySfy9izlrgLIX95dqZs4sGNuX98/YeF7rhpgQXIwzu5vvNkWtHqT5Rz6PkXngNz+PAcpqz1nNJl9FKSwYEs4KCslXKGqSl8BnnGOa3u50xZ7doOaCMj2uSBkRDo8X3zFkBajDosCyra1vmI3GGAcGW15zlxaRv8qWLSqsupflAQSnN2VDWgGi97Fl5nyxrYElpoFnBYtByIPnRvAycms27clrMQM08M2HzIIDKtK7LN0e0wFJcr8icvcnBFBw4yxsG6x1ReMIzce/T+utyBosOnqiPXZ3p98PAWq4dbENzVgZxs8yxOZV7CpjjS3onnBSUA4P5XC9gxa/DUixnBnlwklViuJifJDRniRJtSOh5bysg2GwxfFJL5DdfB8ka9JrhF3bHTtbgw08dDt6sTMkaDNFBx/6RNzzPmLOnw5Dlc2HXBwyVi5hGAWacVqipORu/o9LlM9Zv7MEVztdYmElM0WRVWbIGQk825fIrQSLtFc+N0Eeq5mx4VRwcTYCzjQ4qWNIQTUvAnPUeGOO6ciykmDkrQe/wU96D/I4LZQQmpWlAibv/RGXiT7mN8egxJaQriIi+8kffSF/+g2+IPMv4vSjSgKVwzj1vGjd/4+two4M37lPMWa0Ov+ZfvJmuH83pPY/e6K6Hu50MAWfJ1xOXK9CcrfSAsQErri/foUICCjRnJcObGbtKhVru/UdAdEAAVoJksv/Q2mvqna0UAA2lHvz96XUt88/ZEOasYzcGzFk9XZRLSPVxksVZwpyVuIH2OqJnBDNnH71+FJfT2Owp05zVj3fnx/VGRKpGedfu9bQ0my38fJXXOB3oH44tUT41l8/3j5I5y1bEnDWA5hKcmcvtxgG+nwEeYFbRckxlzY7nTbQRnANnNeYsteH5Q4NN3m52Bs5u0S5ltOYYnL1jb6r+vg7mLAOMp4Y5y5qzKzJnNWAhBbKglcoaTJOyBiFzdzoGN/eCACylJkFgHxBsiKxBKhhSGtAeypwdwhh2u/nb1JyF8i0jazBVwFmu5/mice35nJM16NvQmgHouQCSxm4jYX11iUHQ2DQGBprfTEjPKnKyBp6hu/z9hOBsStbAfgdwo0Xqc5UaMlRTUZiR9bYNmynvBBszv28ODFCGkzKNFYv9tbUxJyVj7tlWQLDGBqtTdkfPnH1qGebs3oTuubBDe5MRNS3Rw08Nkza44Tbg7IBgZbIG/cJ4VJ8xZ0+ZoeaskzXQAoIpYJp3Rw/nUSnAQAZLkbIG/FUyXWRSEXPW0pxtjb8bzqfLSNtU0YItERnu8ZmhBvt/D4iE51hap67Mra7hajFE29azZZvWb36OQHO2YwbGwLv/3j9rCsdmiznbBRtjYNIGwFTmbIG+IiaY84yxGMVWOR69dkQn8yboi7/pT7+E/swn3R+kV6IB6+pp0UbsbwQ5eW6oB5Vi8DL+TY6teKupeYKahwCdkWVZ155FifNDLBPXx6EgF8hyReBg/1Wbp+VYf1NgzhIwxFnSSgYA0jZ3SgKCdSBu2A9UyvlW+YcwBvk6LU1V1iDQjtYz8gEYSX0BNNmHqi4LCMV9mqsrFWT3fztZg6djWYO43+nTzLBd8R40s5izWs9k6fJahmvaMfRdCIhrFgD/fIxwzPNlK9KcVY6NYJM0Za7cgjk7RLe65LmUvgfS2w6Z61Y+qqyBeMJe1uB02hk4u0XLMWcZtL1kyhqUL4K85qXOnL3dNWddQDCWNViBOdu2bVJzdt0BwTTwTguAtYmgYDIf1jm+VgDg5AKCESHbWO/yEOAq05wt74LWFfSpxDRNXJY1SEWOd9cr2qXnBDPtAHahXUCwguj0y5hjGfT34xmt68vnRGwMEOXlBkrbwQQ0e4l8ZGC2XOCxEuM+sarSYLEP2hbnhTqDy/axnnWd7m8uQKT1bdhJguXsNx6G3TO2P60N4HOw2qqUSGHN2acPZxtlc0rmTqktFRDs0MsaVFVFD/Ts2aG6szcTsga8AVIma+A3T/m5HZ+Bs6fCkLkTyBqI80L30vBY5w7aHQuYsyo4S/01Oijq15M9uGUy38J0rcVfboPOa87arMoI5NNADmrpPY9eN/X8D5WAYLHmbHiNpqOn6nPW8ruvf9y85ncSZQ2IbACbCIBk0JQlihm3KE2A8QCs5xKyqsK+M/XE8Lfc+B5hgSlwqvGgCqf7wF379HWf+wI39vLjSLUp/mUMADW24W79Ac/EjUlx4aRuKposAl49TNYAWJ7uffYH60qP74DQBx9n4gpulocsU73MuuasDW4R9bIGDGaRwpx14Cp/xmCg1jZ544U/W0jD/QblspQ9a5F/zhCk09oCpsPtqar8qVY2WHaV8a/UT11V0aaZZkcCV9BkDfD5O1mDa8eKrIG+2VMma6CXr+svESCMxzBZ1gHYbLC+5XkPsnVN5ixI9rgyATCM9VgCzuqyIGWaszJ9ZGWXmtnHJ75ZJuNUIMhqPWfso7BMbdCm02W93e0MnN2iZcHZw5PgPGlDZA1cQLBIc3YU/F5is0Wj7pBt0vxOYR9QaQXmLE4YEVjw2pHpeytlzqYYdRo4vImgYB6o6HqmixDwI+US1jStW5SvJGsQgFMJWYMl9BpHyoRxU+Y0Z2sE88sBTQewBc+7D5rU1zPLG4xqr9s4qcva5FDzAXy6e5gUtv0h5sA7ABU9A0OvMxcMqoBBvQsBJyRA6IH7FWQNnPtcnVwkuPdcySto/0syZzUGsmZe1mBbzNm8rMHQgGC42NZAzgoW/tbCXJbr0t7EXfPEzc1JG8iglaXGmrMlOuBs/Ix5s21Z3VkHzioaxW48KpA8Opn7e5+6TatTOgv+I2bIrLroNng0WQP4W1nI1Q5sBS1ILb/+09ScZVkDYK515dTL7b8rmZEGyoRgrwdc7LLKn7Tx4H1XbtIX/2+vp7/9k29Vy3GkBASTZcsxZxetDnamtDxxoX+CzFlI2wLdsIwSdJRrAKeDWcm5mf5gQrf47tPp4CaZqTEoaJklmRGWozOc+7jgUoZcRJLY24ZzmEXjWZ0oM8HG47vW/iTAmDK8fsg8GgEpr2Uayn2MlHmoBugfOOasH0+wzq1NDosNnrqLICBYG7JJu+v5zLCvckdbndXtGf1wXhv+hrdhTQ1T96aZz0MHCANgEe61Un7XrrNYoVr/qoFdmrk58kTvEzgtNmbO3jieR/NUe1MoDah2x+0+xrreqi9sdbkqwDWtc5uHfEoCguEYw2djH+Hd8RMFUceEMlkDp40txqQhGzwl0jWloGjULhpso8Yzg7aNGzZ4dmqj6zTYGTi7RctqznJAMBOcLQeHvKxByL5isLaU1fX+x2/S533Pr9CX/+AbttrIZbCVnRXAWQSzA620/u9cmuXMWRuI0jRvGaxbJ3M20pyFtpQCcdBlKsWczWn/BszZRBtLsfAs25TLv2ZOExcAslIwnwiY6wDosyvxQQ+QMIN2f+q1tMYD3vEh5pmzdZBPsJO7omnBtDQGBpqU4UgZ92V7k1E0CVpHsLhSxqrXlo7zwk2vo6WZsz4ARsouOLbqdjVnNdD4/O5y4Cy+y9bkMOfhIDVn67qiu1h39vrmpA2WDQjGmrPLyRp09fzA3csxZ1MBwfx4lH+GGLDTjwm3tzfOmXWGC8kLsHkrF1zaRpdj3QLY1zFnu991xh+DBf79RJOasxaQGbsp5xeIeJ0EXDSmUOASHJQxzufDVw+JiOgj/ae0Q1VzNjxH9nmyTJ3LbHyfEfuYtTxbHTAZ13VwTWoRLZmHbq4QMWf9c0V2rQ2aw98CWEtNQfC63OarhPe0npnzxjnJotEB0yIX4/4n9BLymrNtNCfhAMNJWYOCORkCb5/+vMt05/6E/vhz78heh4w93LBAzVl13qYAXYeOOQsvDNxXtIkA7TS6nzrNYuwCgjEg1gKBgkGaPu2+iWiapilZA389yBrEt5QAZz1YV2IIFavtFBJygf2qKrthwIctVqjFnB0VaI7KuWmOOXtuZ+zmqY9cC3VnLQ1ra3MtONeY57dtWP+abq8sK76HOYDyGPp0nvehRqp19QiemR9jQKICurWiIInKMUtjWJqUNeBshsgalPTxpe9BJGtAdltgq6rKlRcDqOHpJdq9t7MNBmcfeugh+pEf+RF6zWteQ+985zs3UaaPWcvpfzrNWUPWwDG2CgBKB85Gsga95mwBq+ujTx/SX/nRN9LDTx3S73zo6tLBuJaxmXNZ4QBGy+vanRiusyVptm1brjnLDCIFtNFAqL1J6Oa+DpP5TEa1Y0RZ7ndEPhhYXaVBodwGQQlzdgHuZMNkDbwbyaaZ3LMmBl5KwXyikIXJJjVnHVMZWAdD2PFDzLH8mDkLE7F15aWBd+MME3gIg5o3llDfjA0jJS9rpaBo6h1YB3P25DZlznrJlPhZybZdanPQHLZYB5yfqTk7jze+7rnQSRtcuREHoliXyTGq1Fi26GjWFAXmbNvWBQRjpuOqzNnziubsEJmdOWwCnjFnT5dhhPbz2IckwE+nT6fIGnRsLrv/ljqusvuQmrPuOqPc1u9sspuQC70Kyh2XtS/LkiAf2tEJgrNhWVy6BhiI11mR7bXvkjmL6eI1oRZjaA4M4UW7W8zL8zjvKmDOWs9FDXBUAM5iirnN1ygAlQZO9Z+4MYiBsbTrU9lKcAOZs20bl5nHMe2d4fIPZc5+6nPvpN/+9i+iv/Cy52SvQ4Yq9gWB5qziiaRpoDpZg2mZrAG207hcNrhF1M+H3CZQzJz1DLoy4E6a2xxy/+k62RYANgRY787z12lJInvQvWvBRpiRrtc1MJizYfpE1Af1y5fZrYVZ1kBpqHIed+/Fbi720afDTSwJunJTs+RTwmv18rXitxAsVNpcHdZRFpyFtR+uR7Ev1Ay1q/0YQ67R6bIGdjl0b4r0+8Mm10oyYOcqFmrOlr0H0lML68iWNahIbva2Is/TrjlrU+QUe/3rX0+vfOUr6eCgY2uMx2N67WtfS1/xFV+xkcJ9rJkLCJbTnDWYs0OYe0fC/YCNv+dYXU/cOKa/8qNvdOwAIqKjkybLKluXOTds1px1WrnLMGcRnK3g77xO5WzhgcRyzVlb1gABl03IGpyIeiPq2tPBySLpRouMqpRLdzYgWIHmbPA8BgUE8+WaNy1NB2o9DjGN6TxM8zlmYUqmNAMl+zCxTbGvVzGeZDvN2VEV/DZdgxOFxobmfCzGyxDtYd7MkN4ARL5trAI0u2eWky+pbQD9sFDWo6gcWXC2XE96HbZJWYMUwOk3vTKas1Au1p29HZmzF3bGNKorWjQtXT2Y0f2X0uPK8bxx7wl7QiyvOWtL1+xPysejGYwzq+jBn9n2DUEB1K2WvRk+zkYslpDBNc4ABrlAXI65JpaWcQAwma7e11sgLn8iQ1CaDATEpukxLhx4ohYjDAhmnJuTNZBsIOu62iNT6vpgXIesqpARKerLYbMh+CWBGO8SX9Go5XmL7YkTgiZh2qmFPP6U15SXbUsDp3pQHdLidK16TbPY+jEM5oeoOSvncjy+p5izZcBGfK8l+EpFvn0vAJR2QGSlezxp4LoLCAZzMixCDHb36RqMy7Tm7Chg13vN2brPNwS1NM1qrVr5Ov+s476iCs7XzQPe5i0Ehkx+DaiXfS5R1+96ENl4z/pPW0+V26Y/Us6cDeemakAw8f3+S7v0h1du0kefDjfK5bPwWtDh8aZtaSRSTQWksjRnrX4U66hrS/Y8Rpc1wIBg+nWqrAGwdnVZA7shmZqzBR2ApTk7JHaCXf/wd2FaEdmpxTFIt66P6tpgyEr25wyVGbndbNCK/Nu//dvp8z7v8+jhhx+mJ554gr76q7+avvEbv3FTZfuYM2bEZjVne006aTkGERqzwCSQUcKcvX40o7/+z99Mf3jlJj3j0q7rQJZ1013GpNj7KgtAZOdh51UiE4Gu+TnQJgXeHSuss00EBJsroCKzrZh9pVlJMDCivLzEUUFAJHyGQ2QNsO42rTvL7HTUkxwSlVxz8ZcR7Tkg2D6w2HjAWTfQISeyCM6ujTnLbXwc70SX6oWmDGUNpPnFxDo0Z5eTL0GWPREVsSI107R7NfOst+3IGvCz0kDjZZmzM7FpoJkPkpdpQ+MYnL1y4/bTnK2qygcFO8yDx+xpU1e+D2Hm7IeePBi0kZOSNRjEnO37k0ntmbNn4OzpMMdkJWTfz5KyBq1b0HswhxdFo1EaMOBjTtMyAmdD5psvZ/i9mJEm5gZuoSeYs9paVALJroxKPl5XVC/XYZHmbHiNrBtL1iClOavqQNZhdGscJuXZrQBveM5gyxqEkcutp6SxqoayxHKyBrI+U27dCGLzGBKB8lyviQLyT1NgpGHbkPMrD8rFhXNgTUFb1+6tBF+pKnDBd0iRP4ZMaKwjLJGUNdgNAoLZZXQApsq4zDNnsc64jnnuIFm5Mouuber54qcE+Lq0KzhfLyVq1pYYSifo7bTfRIAbQVd4kzkL72US9EVAsKoijwbNpOZsTtaAiOi+Xnf2kaelrEF4HX+1+pnUtZhGuImQBmerHtBMjQlovKYdGRuSJqsaPARQAsFvKITPwiqvuxctj8LNGX5fvLY498Xl81ibuZyub83kehrHPGts7QLYdX/juNaKc06zDVpVvP3tb6dXv/rV9MxnPpPuvPNO+t7v/V76yEc+Qk899dSmyvcxZRdzmrM9eGZpzo4zi1Q0HxBMgLNOc9YG177mtW+ht3/4abp8bko/9jWvcGDIOhmeOZML31UCgs0Ut1ciYMAlJl7IfljF3TkVEOxgSRBHMy2fnNYxUTqKN9og5qzxrFCWY5mAYESb152VOpZEwyQHeBCfKrIGXNccEGx/ArIG4zybexlLyRqsi6V7rDBnOR9Tc1bR9rWMZQ32FVmD9WjOlsoa6B4MJ4smmDRunjnbA6JblzVQmLM9K3y2aIv1zIl8u0xt0uS0pl2fB/2DY85uEJx1wPISDH7eqGVvmZR5vdmJWxjef3GXpuOa5k1LH7laLt3AEjraJtwQDXRkzjqPkSXb+5lt1xAcurBja86GAcH4Exb+fbOf1KG7sTRk6hLZQZfkWmpZzVlrcS9dT1VZA6E16UxjYDoATi1GsDlnLTZlXci+ZNHodSrLjqw/bawd11WQ1yIBWvBz5+MOQDVAb3QxnTc6OEwkwD1RbhvSDS03vsdgoPKM+4Ij0IsMUjSsV8u4HtymbdO6tK3noZU1yK9gHqONOiXx2mulHaD2Zl1VgUQDm6aBymMFzskQvIwAEgeg6uVK4Smd5mxnLcUEHmSPd3kooJ4yRHGaCHpKAB3LZbMj86BaYC4PXdNW2/wZge96jr3Y6Qhrv8fpVhXRqGCT+WguZQ3ic2SeHBRMyhpYmrPyfdHHFPveQ4Z++hps80QlmrONOw83OKRkjpVPIGtgMGcleKqZGlCvLgwIJtZkXmImfy2bqfee2PSzTM4bEWBPBQRj/AYfWSvflURZb3cbBM5evXqV7r33Xvf93LlztL+/T1evXl13uT4mLR8QrGPRWJqzQ5h7RwbQwN81VlfTtPS3fvy36U3vf5Iu7Izp//zql9ML7z3vAN7tMmfDBfcq4KzlOj1xWnl55mwugjumr2vOxiAUL4YPN6g5S+SDyKQ0Z1OMKjQv3aB3eAjMWODUicFkzhm6Pi/WDF5K09rMcrIGCM5yQLBe1oADggFz1geV2IysgYtsCxp0qwCaaJp0h5MbWIvmrC1rMB6lQeASKwVFx4YHw5HwRhgCUqKVa856l+Rt2InCymc7B22YXedLDEE+yzxz1upP4nLdzQHBbmxS1oA3EJcBZ7vyXS0ICva00Jsl6t7fBy530gZDdGdvsKzBVANn+03YWb49+edWZ2Unzuz2MmS/ch/StHH/FQJ44YIeA4Kh5qzW+yJTl69Fq9xneFymFbvBKpmRDaTJoC2aVIEEcNm0NftCATnQAuasUTY5/5H5aiy+7jr9e9O26hg4gucly5wLzGMFBENZAwcopDRnFRd57rJTwzaWL7dpbTGK0TgFTIvnQBHoXbDAl7IGRH7TuW1bs19MgbMleILKDCsYiiqKAcBAc7byLLqgvrHN9LfkNGdR1gDKEAcE6683GZf2DXTMWS5K67ykpOasBezYwYXCz8D13J3jy5Wr4nLNWQb0hEenAM8Cl/dA1kA3D/7lNGf9eVVVqQESpXnN2Tq4BzTZrzr9/+vhRrkmO6GZlodZxRE42+JPkXlgvvvMsUd5jSCfg+Vx4fKpfB/ainonEuzokg0h5VinJZ1/hj54Y5+W64sHMGfN4/GcIWcS00EA25I7q6uKXnz/BXrWHXv0+S/xmCSOURqz+TTZIM1ZIqJ3vetd9Mgjj7jvbdvSu9/9brp+/bo79smf/MnrKd3HmOXAWdaitTRnJxkGEdqxwZzl7xpw9paHnqJf+r3HaGdc04/+tU+jT3zWpeCaW8GcHbHm7ArsHMt1eprRwyQC7d4CZp8F3qGbE5ZhE7IGWtAeXtQnmbMndqAYtBygjQu8Y4MRbDGZc4Zj/roARcs0eYhxgQwGm9cvjTVnua4PEwHBLPB7WZsr7W88qulk3qwNVNHc8T0DIwfUD5A1UJizzJ5YhXF8pLjoaea1qiU4uxDfG2rbdtAGBFE5g5dZb9ePtyRrkACNx6OadsY1Hc8bunk8p8vndGmeKE0XcTmhOZthrM+cnIZPgxcEj1/fDHO2bdtIKmSIOVmDAcxZZkqzPe/uc/Tex27QQ0/cJKJ7ivJNydcsFRCsrqgdECjxzG69eSZr540writ1PF0owYC4y0NZg/GoCkATO78ezLUASdFN5piyNntHZ145wMUoB55bwsC0osKzoXSYBRjFmrMij1bXnLWYs22ruxp7dmH3PLDMEegtPjX9UbynuiJqiefSrblyD1lsnHatliEoD/yW23yVT0kbeTWGntecDc9NBbDyBew+0HODx/CmteeqGnBmadxq79WS2GwHBrI7dcMbFhUAVZWhOUvwd/eF57C7yJyFUsQyE9xONXA2zfzrNGf9CVKv3qWtlJfLrANGVVDuFsqndU3apk5X/nJgHc+T9zyqK6IFgLOQYF2HLvKa4eZbanNCBoIq8QCSBAY9IFj43fI0izfbjP5cOWwyZ0lqzsI1mtyLY0ZXRNRm2aP8Xo+B3NK0bbCxoRmPNU0j5CyUchYxPpWfkP2esglspGHeQzzA5LP6pXc/Sj/+xg/SUwVkA2mS5NIxkbu/v+ozH6D3PHqd7rmwQ7/23sfdOXVV0aW9Cf36N30eXT2Y0b//nY8E90IUvs+n0QaDs1/wBV8QPZg/+2f/LFVV5Raii8X2QLzTZAy6nsy7KM0IApzMG7coumPP0pwdImvAQIPOnNVYXex28LIH7qRXPP8ud5zTkMyKTRpq2hHlg8Ik03Kus2Hn4/U97fosBWyIbFkDKyDZkAAspaYFsmI5jWvJgGA2owotp/07jDk7XKtxMqpotmjXziyVpgH6OZAI7XgWA2yOOXsSMmcRbHQBtNatOcubHTAAT+qKTmh9+r0nCmt7rDEwwJCBl7O9hOasFl14qBUzZw0gWHuPTxZ2EMX5oqEPPHGTXnDP+QDA1fSKNdu6rEHmvb2wO6bjGyeDdGf9poE9Mcwx1jUJkk3LGuA7MzQgGJFnzj5VAs72/TYyZ4mInncXM2fLgoItmtax+c4pm3BDAlTOGj/OcNM9Y86eDnOL8t418/zuWN0kwMfpAM7WjyMY4CvF5oq0XkX3wUOS9hbh5pZM2xq1JDjpNFQbUQ4NnBX6uLKMWj7W8KlrzqbTlRs9TZtiGcbptGQzZ/mzWbQhK1qc2/qHHZTJAstH4Je9aJpBrCoPNNlzELwuN77nmMhdXnFavBFhXZ/CSbgecFzkuYQWEMyVVS0/pxke1zbM9OvzY1EFIOgC3k2nOVvr8yl8Dg6cVZizoeZsWB7r/vjcVOlD5iyyrxlcDdPWZFFUaNb1B/46Pk8LHmiVsSR4XFAel54ISjWqiGbQv1jMWRPMjJ9pkK/otywtcM08c3YUlY3NkgaR8+VyT4j4h5SsQeAVkFnbSFA1t9HugvnB+EctUQOAayofDPCI4Dn2x8sGBLOet7Q4IFi8NsyZzP7H3/hB+uXfeyx5jmWRrAFsolzam9AvfP2fpN966KkAnPVs9/DdWcAYX0NfcRptEDj7/ve/f1Pl+CNh5xNRmpnVWFUxQ4ZtnFmkojlQUQAD3KlqQOuTN7tdjzsF6+lWyBpId9dVAoI5UEGAHWWyBjoDWbOpAZ4HAbACWYP1M2e14DgOnE3IGpQGBJuOdQCaLWDOWpqzS4KzRN0AMlu0a9dklaa52w8JyMfnhAHBwqBJBw4QB1mDURrMXNZ48YH30/Uni7UHBNtRZA0s9sjM2DjRjDeJNHCW6209sgZlzFkp1cD944XdsZMaOJ7b4Oz3/uJ76Ad/5Q/ph/7Ky+hPf+L9g8uxbVkDL1uhP6tzO2N6/MaJ60uGpJkC53PvndafOFe6DYGz2J6HBgQjAs3ZkoBg/fNleRq2B/qgYA8VyhrcBPkcTb7GyxqUMGf9+FxVZ5qzp8mkPt75HQucRTAmvtYvaMOFapxf96kBHV1i/YfhgstDQwmbUDuP848AF2Ux6m9ZB5W0fCyg4CgAZ/VzZRn0gGBx2rH7vmdmyTGwRuCtZ4jhObIeJZCs6Y/i7wHI0NjPJWSx9WkzEKFeEV+XZc7KpqU+t+4T+3D+22J6pvLlX8YKONu29ma+ypw1WHM3FemzVECxlIFsacCEDzRnNeYsdO8PPXFAr/wnv0bv+ug1IpKas/48i+FtbSCkmbOoOevbsAwI5t41MRw1rQ7UcJqh5mzYR2K5rEBDQ92oQ/d2f1zOZQNZA9Q6tdIV5WS2vMwXZRWIypiTRwUBwWQqFvu81BOibYh+66En6X/9hd+nv//nXkqf8MxL5oZYS2G95DRn5UZdDqDkPn0cbEi2VLXG2CbywTZoyRo4lm2iHWlVVR4QzNKcLQdnZdm09V3pJoXECVq41r+b4TV4n7ilEwRbM9rdabFB4OwDDzywqXL8kbCqp2I/efOEnj6c0f2Xdt1vT/eLtIu7E3MHq8QNn80CFXddQLB4AfZUD85e3g/BWQZDjm5FQDChObtMkB0LDCzR99QYkJZZ4HkQAAt25vYGBGApNU1z1stp2KDJ0IBg1kI8ZM4asgaJqO8563Y2m7WxPS3TdCx9sK5yWREtIBiDsi6Ywg7KGpQDwENspjFnB/QnJaZppY6z4Gw5UM/90G4iINgqQLN71yfpsjiGvHgHmHF4cXdCN47n1LbdZE4yHtned+UGEXUTTwRnSzVneSPl2pYDglnBu3jz4foQ5qzo5zUbZzYsNG8BZs5ePZjRbNEstRGUMuzjlwkIdmcPzj5dwJy9fmQxZztwtpQ5y338uK7UvndvUj4eoezLqO7+XrcUy5ltxiRYar3PoXsoAwX+Wr+gBUZbIh0+xwJs7OA1HjQJf1OLrcgatMH5nI122xKUYdMZaH1+RjkOg4Bg+rmRrIHIpmP7xRnEzF4P6sm5EbLBfHAvvcxYRmRJE9mB1qoqZFqaoJEClJSwDfGXnJxVWYTuLg1Nc9aSmUgH5+k+ceObn0GrPA9nSlEttlepjnvJ7SNTE9s7bp64MRdBfEjjeN44YJZIMmcr+Fvm3ZkVnCnFnZ2Oa5dA23p5P685G/YT2maO9i7JoF/IbuTSVMH5evmQvV5iAZAEOUjPLMluzjECvVwBl7cKTpabSkOYs2wpWYOIOWusAeSVKc3Z//C7H6U3vf9J+s/veIRe+oyLZrnw2fG1/rf4fCdr0H/PBgQLmLM+XSdVYDQO7OdQ1kADrlnKsbRP9HmUyZpMRPrcXlaRNdA25JZlzqJuebip6C34Dn964LtMf/d2tsGyBkRE733ve+lnfuZn6AMf+ABVVUUPPvggfdmXfRk9//nPX3f5PuYMwVk0Zi5YwcCIEBhLt/r5onEdYSxr0GvOaszZg9uHOev0/EahrME6NWdL9D2HMGctTeAZABA4AHrm7PrAFQb1sKO92DOx07IGZeBsVtYg0JzNMd2Gd57O7X/jmrNxm0kFfJOmsR/5eTMLgp/7/gRlDTbFnI0BrJzkwFBTZQ1ymrPzcnCWGeAa2Gnp4g2x8oBgvHCRmrPd973piHbGNR3NGvMdIPIg2PsfD5mPxZqzLGuwJc3ZnKzBMy7t0rs+eo3e+sGr9Hkvvlc9R5oL/Jh4/rlAmFr/fsfexHmpPHHjJNgIXYfhO7MM8HvJyRoUMGc5IJjQon+glzX44BMHtGja7MICN+C0RcQgWQMYZ1hv8mSL84MzW97kotxqNwsFmMGFP183GaVdbdGNk8jWnNVKIYFC7bfc8bjsNsuJz7UCGWlmMUXRi6gVC2G2CGQVBxZNKXO2+9RkEPD5amCoLL4Hb7rvTCiQoDe3j1FdBa6yJe7Jnq2llwEN6yw3V5HPSQ2I1D8WnENyfxYxmQtkDbDNCByMGgARWZM9VTYLrNa8UTQcqASQqGt/3gLeCXTv16SbUm7Wu0ZAMFvWQAf1UuDyhZ1xoCO5EBu7EhzVNnNS00PHPm/hWgfcBvBs9vohJu9bMme5vfp+Mw3euWkpbHrhyMyXyX55CDjH6/GSYIUWW7pYQxw2OBaGJwFbJGmjgNJaWXOasWw8n0dvESyPCdy7TR5/PgaCG86ctd6f/DMci4Bzrh0MAWfFd23dVbpJIef1LfmxxpqjBDIj8JPGnC0NTHa72eBVxatf/Wp66UtfSt/0Td9EP/3TP00/9VM/Rd/wDd9AL3nJS+h7vud7NlHGjym7aAQF4+93GMHAiMplDY5gAiBdY3nBf6SAnE/d7MpwWQDEPiDYNjVnQ5BxHeCsdJ0uYULK6JQpszSBLXB4EwHBHKMJypsLREeEsgalAcH0Dq9Ec/Z4ACAnzTMxt6M5iy7clqawZhrA5pizJwnm7Ibuj8uMg9yQAGcl5p4r1FkOANYClVn2l1/xXPofP+cF9FWf+UD023o1Z9PvALdBCdJj5GK3CZbor/h8Cc6WMmcZpD6arS+oW8pcID+jXF/6qc8iIqKfesuHikFyt3GV1Jztwb+c5iy0u7qu6K5+k3ETurMzp1E4zB2MbZmAYHJT4pl37NFkVNHJoqFHrh1l02FdcUu6BjcLcxNavv/xqAY9+NM5Cf6jZp4V1oOlBeAsL5ZYymUMbFl0R9ZagGcVdd/lItC7DmtgaQgUYnmtxZ/se9q+2/CL4r4cGnDn6ia0FCNTc+0lCmUNLB1Mma4ESKwgRvFitfvUmJrjAJyNyxwxDMWnxZxFcGcEYJ71XNrgbw/samXQ8iHKj+9W2wrL0QM9geZsCAb46/Plw80O7fnx3GdfePxoLcoCLzUdd61NFhGHCWUofNlR7kObT6XqYC+QNYjbG+ZNpDO3kb2r2fndcQC4yICcKO2hldfaOHCQp0ubAnYj/qbfU5hOseYsMmLh+Fh4tDkA3TGEfTnVdEU5Zb8aM2er4FMzec9Oc7Zg46gWbc2VM0LP9bxxw8nS4PZpht9T2tpYVsurQxqv60Kddd/nWZeHmrP+uTvmLNSNlOfQTL2Xuiwg2Nj1uX3eSzBnS4D1pZmzLUUbBzHg7//Gn0KpneU2S24XG4SOvO51r6O/+3f/Ln3bt30bPf744/TRj36UHnnkEbpy5Qp98zd/M33zN38zvf71r99UWT8mzALKeJEm2TFopbIGOCmUoCIDrceKrtwTN7tF7OXeJdRfwwHBti9rwKBNLihMyphpbMkapNIcpDlrBC07MZiiQ5hKpabJGpRpznKgmDLmrFVnAXPWlDUoB+Sk4SJgk+bZzjFztmSDwAF9kxicdZqzzJxVNGfXLWuwaOz7WRcL2bu9+/vJa86mdUzRnnFpj775z7yEnnXHXvTbOrR6Sxmr/J7HzFkEZ/N9JoPzH3zyINggKmXwYlCnbejOnvSBPi036C9+6X10x/6EPvr0Eb3+PVeK0nT9fCIQQz4gmN6fsLTBJnRnS+QYUnZnz5xNbZixuYBgQnN2VFf0nMsde/ahx/O6s545q49lvMBu2rx8kB+fK+9NcaY5eypMur1aGyOa5qzzKBnXgnHFi884He4mbeZs96mVwrO8FGaR0dxisLENPlMLcVvWQM+rK4c+5oSyBq1aZgkmyjK1rZ6+JbvQkqI5C2l6WQMbtJAsX24fbasz0aoq9FxJuSfjfWF5UiQr/Gkoc1Z7bL4t+7QsWQPvdpzI1IH+lRrQjd+ZfRFsN82cDY+rzNlEkVLG7vFEIUMUNy00T6QU2IKyBlgum+EdJ1ZLlFLY+Z1xEHhQas7KtPVNB/tdQhdzCQ5ZTL2o/FQOSrmqpxBAlXXP7+rIlYWv1zOSoCunLF81uVmVlJYS7TotayC/x20J85flltbJUfhzUuBsKg8N7JQbhqPCgGDBhmSLm3p6HeKmGLxyRILBjhsUpd4EmH4Jc34sZA2W0ZyVTU/rH0tXYnKt28IztsbqKngf/d+ubVT5TYzb3QahIz/0Qz9EX/u1X0uvetWr6M4773THL1++TN/xHd9BX/3VX00/+IM/uPZCfizZJceYCd0ZrzJzVui9opXKGjAgMB3X0eSPO1Vt8eWZs7rmbEmgkHXZXOgJcbmXAa1kcDG2SQHjZxnmrCyjB6DCNFij8WC2flkDBIKZcbUOWYMce/SogDk7m/sF3lCTLhmbMs2Fe8gGgcbC5MBfJ/OO6ciAOIKzm5I18IyneBK4Ltal1s4nRjARtiGyBilDEHhZN5ZjEezAMm6Dkj1+CJq1bhMsAVjx+bNFSx+56pmPx4XM2fGodm3nxhbAWRe8zSjX7mREX/6pzyYiop980weL0nSyBglwPhe40ZJbuLsPCvb49U2Cs8u1W5YvKpI14IBgipzHEN3ZXB+P4EFuwxABcWtT8sxuT0O3SiJ7QaqxK50XELDrQs3ZuO8tXmgpXQAXAYcPLm4OnLDSsHTsiJBJqINKmmnDzWyh6+LHzFkS38MDVkAwy82zaduI4TpWwNmAUSbSl27PeD3ekyZrsOhoh6ppwO4Iym1ZIGuQmffFbvQxqMbJBfeysMDZ9PyFKAT9JcCFDM89yZxV2hTmj/etMWe160vcmlGbUmXOVvqmeilzNtScFc+j/9SSqqs0tBQEym592bisDtRy5Q2vt5mz4np45zyrPyynZq5fKpx/eiApvG9JmpAyNFViIwzz96As99NV8Lt7B+vwd83kxnDKu8wKcijJDLL8KZka1A1PVW9KOsFqc/iZ22wPwFmQ2ODEremg658b1DP2TFccdyyNXjR5LxbDVDMZEIz7r2HMWVme5dFZuamPQ4jF6jaZs41v+34j53Sis4NWFm9605voq77qq8zfv+qrvop+8zd/c+VCfSwbuzNKoGytsgY9yLCrLKJ3EixYrzmryxpobNtNGTJziGgldo4lK1ACTnE9lTBnrfSsQDqbkDWYKSzhS/vc5mx3VS9rkGHOZgKzDdGclTITJSZdfjZlc4XROR3AND1WnjmCHwcnCzro29a5aRwQrCTo2BBbKBsU6waCNXf8UeYdGxIQLGU4sVgWty+WNTC0pZ3mLDBnLfY4URhg8X2P3xhcDiK/YEmx4tdlHki339u/9PLnEBHRL/3eY/TY9byrvcZQlzbJTFatNnRPz5x9/EYeAB1qTnZniT6MyIOzRbIGh7ZXDevOPvREOXPW6uNHdeXe3YPMWO+1gqtBHgVndutNMqvkoky6PKN5GZI6YFylQJeIhWYAixo044KWwAJr5ECUOK+u3CJ/8QfnooER7p4zoKlWRjRJZGgAXEilq8oaKHlaoFfTxveP9yldv4nixauscwTvNVAXZQ0WTULWAA57tlbd52XbkOE8Brvx7xCcmkH7RpkatJG4Ri0fNJnRKH5+3FfuTSQ4G7cpLC++flpAsNz1lmFAMNSc5WtrYABrutOa7Zmas7J88eYAlj0FLp/fmagMcX5nfB/UBp+u/Ma+gdwbauF/CXDisSgdpwVr3kJUni7tMNGxIDQ44K5U1kD2t/35HpztvjcACOLvmsm5R4rAIFPxrvvh8df+xgfov/2h33DYR0pz1klVNMOYs1qfo5XNfWZeILchVVUBGJ9nzvq6R88VyfauCMhwiVg08lY8OJvvACJmNreXAeBsPGbkz7EsAmcpZs6mNjHxlnFTZSiT/XazQSviRx99lJ73vOeZvz/44IP0yCOPrFqmj2mzZA2e7oHRSwlwtlTzMgUo7hpaiG3b0lM3uzJcFgHBGETUdGo3ZahtRrQuzVkha1AAdmvu6ZY5d2cBdjnwQIDlm5Q1QKCCA4KdLBoTVC1nzqbrLGTO6vd1YjCJS2zbsgZBAC3WviyRNQAWJdt0XLs2ePN4TgfHKVmD9d7fXExk8e91Ad0nijt+jum8isQFGoJky95PqayBB9DDezqEftdvaNllQQDsA+CWXqo5S+SBtu3IGsSyFdI+7r4L9Mefewctmpb+7W89nE3TB96zJ4Y5qY+Zsfl194VuHLuyCebsAK1kzdhD5njeZPt/Bt4D5lBvD7CsQQFz1skaTO0+3o9J6faEzOHpCl4tZ7Z987ps3afFwgxlDXpAC95XXNRHbtJgUo9PyhrwN21dyclhuhJkkCZlACTYmAr+IoHrEtOAJkl+8Ozd8Nxo0SkOLBodGIwjonM+bRR8M2DOKkxVi8HGn9g3Y9II7I1gnDefSwCUMPAbftdsyOI6emxVfO+cHNbT3GDOevDEztMDCZUCruMcpwrGKK2FqS66pAcNVq8vCQhWxUBmBXmHmrN2O0ErZs4KMCr8LV36WHM29K6UYIzG7kuB7KgvDKTW7lM5L76+z6cQlOKzZFx5F6dBgmeCRWh7Doiycz8t3n05DqSYkxKXSM2RZf1weeW8/D++7aP0pg88Sb/9waeIyAb/uw0qD5mXvIvue7C5YPejvo7stNEC5mwbe4dY+eBmW1VVMNb683gNfjMxL5TNOOF8Ehm3L79hGK8Nc1YiSZHrtz/05AF99OlDOhbzxk5XuPvbYs4GG0Bw1x7kroK+4jTaoJXF0dERTacJt/vJhE5O1s9S+VgyU3PWyRqkNGfLmG4pnVQGiyRId+1o7gaDO4WsATNw1wki5ownTrwTnWNspuzEAIBKdCqZDVfCYkN3FBwULM3b/U0wZxXg8/zO2A3AlsbhzZPCgGCDNGeHaUSWmKaFtQk7cUzT5WQNTgz24/6OD7qjBQQbb4g568BZBWxeVyCfE2UTxDOdLXBWB9aGGjIvlwXuS7VerXagac6mmLPYn2JQsFKQmIjoQu/qrrk9rtu8HEl6EveXPv25RET0r9/8oXxgKX7PUszZTBBC15+IcnFAsBLpgKHmy10+oUU7Nx25a68epst37dCWNWCQt+T5c0Cw/UQfz6yN3Jh0Akx8DNh2WifCf5TMMXf69ifbsBakif/GWAA8l71zf5pcFEZyAuJVl9qI4bVt8GmVT7uGTYI1jo2TYM7G7C/7DrWh7egkXnBqZYs0Z0U+qL8XlkcvX9uWac4m3fQFyxfBe03qoq48qNExZ9Pp4t+OOTsAcEmZxSgmIoiYHrZlolCiQUuvBDyuqvh6DAg2HtUB0K3LGoTXsumyBnECJXsKWpT4LoCOL4NkbxKlQQ7T1V8c5q+ajjLqeMZlJtqfjHTNWX6wAviNgxbp76q/78qdh8ApniP/DtPpry+cumO7wWcppcD8uxID/5pJoFD2d210XhX8rpn06E3KGhjgrFVelhSx2lfbhv1nSXA+/x3+Vp6LZGaWylSNYIejBTDfeg9wkweZ9nw2emzwGlzTmWazAksWyRrU4fPgpIZIdMlnpb3PqV77aLagV37/r9GX/sB/jQgsyC6W7yabzZz112FfcRotTZNT7Ed/9Efp/Pnz6m/Xr19fuUAf62YyZ/vvaeZsGUPl2DG4FFmDsS5RwKzZc9NRBOru9N9vSUCwvsNYJSCYpXGaiwJO5IESrS6l4cRr1jS0U3f1Zrnd7vUMpnWC3icKaFBVFV3cm9DVgxldO5zRfRd3o+uGBwTTu7wSzdlVdEblrvKmbKYw+iaZe0ezgL5z0zFdPZjRzeOFY0OcQ+bshu5vrrQLl9cGZQ0cOzcna1AQECxlOHFdtu685mxG1qBOg7O7k9rcBGNrmjb47f3AfBzCnGU25fUtyBqUAulf8snPoO/4uXfRQ08c0G+87wn6rBfcnUiTF672808FIWzb1tSc3XO6v+sft2TAyqFWVRXdsT+lx28c09WDGT3jUhzkjo2Zs1L3jYiKNgHYSqRrSqV25lDnOz2TmoGhZaUezmw7ltOAZYAQxwXuUtn9e1xX9I++/JPonR+5Rp/4rIv09g8/TUT6AhtdNjF9NgkioLViAYnltXp5yWR1rCt530qGkjEny6iZds9H4n0slTXQ3OJLNGeR9SfPxzGf198ByGq4AmtahFqQOGTOpjTfNaCEu88k/jpgOJePCatXymHgPIFZfTGTuS9vCpx1eccBwdoWJHDqqluD9H1rKiAYUQgmqQHBlDZZ0vN2YGCfB7R3ZKmNlHmbNa36pGddogfvPqfeQ8x4s4E6ZPRKOz8dU12HQZjymrMSqNPbJpcJ05Z9haZdrJUf8zk4WSTXUwFrGY7LDRTJcM0xAvmo3PQaCVBOatmuizmbkhbRTDKEpSEg27ZEbQICkFPEwENADQYXtp1SfDKQ8qF4TJVWu7oHcLkK++3+UBQ4WjN5JyhJki07BwQTmsZDAoJZ3hbhOXaf+dTBCV0/mvf/uvltXfEGSjogH5FdzwHwLfr702aDwNnnPve59CM/8iPZc87MtosWc/YgHxBsXCpr4JhXiqyBARp4vdk4/1sREEwG8VrFdVID2rrvm2HOdnm2xOOypbG639fryaKh+aIJWI3LmsVKvdSDsxZz9kaByytRXl4i1JzV28sqbMltaM6iax6WMQUSSbPkMJgtffNk7txW9gJZg/yGwTLmmbO+Da67LrVAVpp7HNq6AoJZC8ghVroRMzHYwLzJsjsdOfkYa0NL9qXvX1FzdquyBhnQ+NzOmP7cpzyTfvJNH6R//eYPJcFZr12aYM4mxj18BjINvxG5/r5iVc1Zos5L5vEbx0lm79Fs4d4RTXN2iEdJiXRNidROp/vW/T0Z1cHGysmaxrEz25xJl0GLOavpi6JE04vuu0Avuu8CEXmGmdbzRi6Khsat5tQsg9dgOnZ0b3kgLAfno2rOOsDCZupI04Yb6/3JyRpIwJgXq0Tdc+L+LnYd9unL8RzvU9NQjasrBJJRcxaB3AbAMfRoskbfpm3pHR9+ml58/wWvZ5tx0dbKlzLLpZooBEiIwrFjYdZruq0RDWPOBrIGSpPC60PmrKI5q5SliDmrvGkdOMt/V6qHmvaMvuXPvIT+xue8wCyDVR6dDV5F9c923kn6QDvrk5Cas5IR6Mufbkt8/2FAsCr4jcupX++Pf9u/fwf92996mH7xf/qT9MBd59TzHQAlGMM8j1kI8EwCida9tKIPizwkxEaR1S+jReBsYo48pO8kiu9TGrJNc8zZWHM2HsPCsnWfXMJS9mhdV9A3YHpW2/BlwHrn05HBzmvwFHNWAp9Sjzhlrn25sbU7PgicNXTKw3Nsw81/Dni7Mx65dVGkOWt42+A5eB3W7WkNCDYInP3ABz6woWL80THu5K4uwZwtlTVwAcFSzNm5zpyVerNdOgw0bE9Tzmv69eDsCkFHOK1lNGePBjFnAZydN0Q7FKQfM2c9+HIwW9DFNSxq57B4QmOXWC1w0GzRuHrNBQTLsbcRJLBlDfI6k5ZtQ3MW2wM+MwYhypizXbuRbY6BkWuHc1fnCIj7IF1rBmeVwEs+wKB+P//Xbz9Mb/jDJ+jVX/5JReCpJmsgJ5rSOO9VZQ26yVI30Vi27o4LN2KsQGqurxiPssxZCc5++KlDOp4vaGc8Gsac3dmerIElz6LZV7z8OfSTb/og/fw7HqF/cHBibjr6gGB2X5Bqp/iuyjbkgl9ugDlbUu6c3dlLGD2dCArGoHtVdewhadxWS8bFg5M8c3Z/Mu7PtesMA+GNhY7ibN4S2fvLZ3YbWMRkFSsfH8AFF7Y9oCU8mtiqcN0fGi+Yak5fX7wnmbNwTEYdlxZH7A7PlQw07doIvFJz4vTjcshNOc9SEulK5qwC7nmQtIrYgr58HiiQe6045kuNQyKbBaVpEWqyBlXlwYGU5uzP/M6H6T+/81H621/wIg/YCzafZkOkUiLGM/wttYpRc5b7c0suIrV/jQF+tIBubgOyroI5f06WANtVKXO2hDtbV/HFdeUh21Gla85qdaDNUfD9kvcoGbvyN6v0PGbx9TjuM9scdZe7PBSgTsvX5e+B+Fb+BiWzyujB4Zbe/vDTdDJv6L2P3rDBWSgMpu/rvgnuo5Q5GwdTCkHdmDkrwFvFYuasPUeW7TIH+vF9Wq85Mp5XkTXQwVkee6qisrKN61DTVI6pVj6L1uvn4muIz8xpziobMpYtGxAM29CQuWwZc9a+HjcvOeDt7qSmw9ki2Py3mLNhgD7c0HIHBwfou91ssObsz/3cz7nv3/It30L/8//8P7t/3/iN30hHR/kIzZq9+tWvpqqq6Ou//uvdsbZt6VWvehU985nPpL29Pfrcz/1ceuc737lU+reLsabstYg5exL8rpnT3lshIBi7I0ig9YkenJV6s0REe1O+ZvuyBrxw2MkwNlNmsfOQAWcNdMcO6M6z2Ea1j3iKC1iNUUjU3ROfvy5pA4ulyy6xGnMWJ375gGAMUOrPAduIKWtggNUltg3N2RMDnLXc2TXzzNmw3Zzr9YSu3PBBijTm7LrBZy0g2CQjOfADv/wH9G9/62F64/ueLMrjpAfBJgOYs9bGxTK2quTF0IBgsh0c9jqDe9NRlrXpWLaTms5NR9S0nUD+kHIQeeastumybhvyrD7pWZfo459xkU7mDf27t37YPA9ZRZalNtFQh1Zu9myUOatsdgy1S3usiWs/OxcMbGesMltymwBoTrpmao9lXtbABvuxb5rUdaAVeLzY3hzhzJY0sfApYc7KgGAWY1xjqUgWmqXrqa0rnTsrNO9cQDBN1gAPyQA5QX4GgzK16EU3aDY5Blmas7IMsm4w7UCeIAIR+fw2mhthmrUyf7JYUB5ABRBBkTVA5mxq7P3Qk4dERPSRq4fRPaUA2CGjecr9VQZSws0+L2sg22b3WSxrIGUpmlC6Zw/mg1qLCmQNIEsVnFVSKMFXNBC0rio3luxMajWQq/aMNHBWMjxl3kS6RmWdQGeZOcs/Bx4zfVlzAcGaRm9LXrqA3PWxrIEop5oObJAYADEaMq4xSVn3kuFaievtdMPzvRxM+H5LEFcz9NrB910zC5C3bL5IB2pDJrOlG8ymSVlYvxHFcgal4Gy3mYFl7D6tcSJg4EO9S2Z+FxCs6yOSsgbiViQDOGU810YWL1GaOS1NPgPt+aX6bdz8Z0yC5+t4nWy7bPgVqxw3V5MbxqfABq0sXvva19I//af/1H3/gR/4AXrDG95Ab33rW+mtb30r/diP/Ri95jWvGVyIN7/5zfTDP/zD9Mmf/MnB8e/6ru+i7/u+76Mf+IEfoDe/+c10//330xd90Redam1b1Jx1u0FN6xqoFN5G4w4x5/KccsXfNXT4mDl7l8aczbjobsJQp4ko706fMgtUQEAgp6FaApRgHpieJTVQVRXtT/NMpSFmBT/jdsfBZdB4EJiO6ixbb5rZIAiZs4asQQ+olDADpTmAdIPg7GyO4Kzv+UtlDdq2hYBgUtage94cQX5UV8E5pbrSQ40B2JEia2DVJbeLh5/KR4In0lmwKc3ZpmlVuYVlrSTYScpK5QTMgGBzHxCMmfY5WYP96ZgevKdjVrz/8a6eS+UDiPyiZSuyBgMYvVVV0Ve8/DlERPSv3mQHBvOyBvbznyY2hPA9kRO4IcDlUJutSdaAKB0QjDdxNUkDItCcLRibB8kaJNLD5zAeda6oOS3yM7t9LNKcFW3YaRMGwEz3ac9lwvPU/Dh9c/Eev0ucnB4QLM6rK4MAZ9twwcfdRErWIGJgZl5zWRbZV0mpAFcW0ZXKulkAiwjnq5aWZ9vG4LQmaxBoMUYL7fCzqiq4zp/H7cPSKJWG7stDmLNDAoLJx4QQimTB4jxhvmiDc+Q1qSK49lbFLHQEy8ejOiB5aFgI5o/tWA8IFl9fwpzDKPGY1l/9zAfoqz7jAfqyP/asIJCrCxCnpKV5PHmwLz4/JROB7F1pnjkbzwU0trmWR7dJE+fLeWpu6h6cRTRILaIqi5Bu12H+bFI2SzJcc7IGsUatuL+GzwvTTc1l0PNpMrIDt2G+/nu6TWIfpxmC3W2bBnI1rwm2FDBvMTQt43lPV6a4zqWhrAGyQvl0bs4V+bae2iBfR0Cwrt7b6HiJRQHBtGeSeE54b9y38Xwdn6F1X4EGtFKuqkJN4NM5Jx2Ejvz4j/84ffVXf3Vw7Cd+4ifoda97Hb3uda+j7/7u76af+qmfGlSAGzdu0Fd+5VfSj/zIj9Cdd97pjrdtS//4H/9j+rZv+zb68i//cvrET/xEeu1rX0sHBwf0Ez/xE4PyuJ2MQbLZonULoBsnc/fCWoswojKNVKK0duLO2C+i8CVIac7u9gu2TbiHWiYDrgwJxiTNCjoUuGNaYOMA5iymiQBfinFWwlQaYjODJexkDVTmLAcDy99jTl4CwSjZxvzxFZizLpLp5iQ20GU5iKLqZA3SeSMYFAcE6+r48Z45uz8dBXlYLvOrmpMJUWQNrAUV908fvnpYlIcGSHMenbtleE/ILl8Lc7ZQk9sySyc4yseQ1jgCNqyXj0kzZ/cmI3reXQzOdrqzXl6hhDnbyxpsAZy1WPmWfemnPIt2xjX9/qPX6Xc+dNVIUwd70FIbFqhfLRemQ4JlDbVFAeM3ZyWyBqzHxf23tFw7Q1tXQDAcg93m6QqyQ2e2XctpzvLxwKW5/9MHghPgziDN2fD3lMxAowBDmm4qWrxADxehPgK7As7CIhkt1+PJxakFEliLavddAZpQc9a8rvLnD2fOhubBOA+qu+sMWYOSjVF0X9buKRWtvdQsPWMiCD7W35emORtfH993VD4+lzRZA2Cb14I5q7Q/vByrUuuPVVkEs5R4nQ52vPDeC/QPv+wT6f5Lu8F9WG2XyGDOJt4vPqI1k1opF9sFyZxVxqAISBd5WKxLB8C6y+KARFisHHMWmbdpRjiDo6SuAdp+ziwZrlwYjX1MFG+G8aPk+fH14xn92G8+RI9dOw5+1zwJ2JA0NlHmWmhDNWfnTV6qgH9tmmEbOa3SX6FJ4LoUoERNU+yjrVvFOsC+xAPm/nofEMyeg8lbSbHVpaFnTKscL7GIla5hs4nrNU9hnq9r4Kw13hGF7w6+K64vP53Y7DBw9j3veQ993Md9nPu+u7tLNcy0Xv7yl9O73vWuQQX4W3/rb9GXfMmX0Bd+4RcGx9///vfTI488Ql/8xV/sju3s7NDnfM7n0Bve8AYzvePjY7p27Vrw73ay/enIdQDMluXF2e6kToKAOdYi21ECUETgARetSc3ZcT5IyLpNamthQLAhGlREtq4lLjAsMGyIizGRDhA5AEGJSF8SgGWIWcDnJSMQHVEZo4rNAyVxfbVtG4EE2mJ9CDNQ2jY1Z2MZDL9BkGqDITgrZQ26OuaJ0b5wMXZSA2sGnzk9HIAnmbpkkPDhp4aBs1pAMKJ4gYMgz6qas0SrS14w+zAva8DsbSFrAHIyOWCQz92bjuj5d+vM2SGyBtdvM1kDIqJL+xP6opfeR0REv/qeK+o5DPakWBupjbmUfvWO8/jYgKwB6Agua8xGSQUE88xZvW/27Sx/j0OYsylwFr1aeGJcOjf5o2C3+xxUahjKRZkGtPF4x14WQ5izMkBNpJeqACD+4rDMRHm2ZexyGZarSriwuroxAGvL5MI/6qsMNl9OcxaZVthHWtIQTRuPf5ocQsicFYAG8TlcRmDcIqDZXzeqvJtzijyhMmcDpqh+3SozPaxfyf7FTWlu15ZcRBo84nMrlcXpJaXqQMJKGzpCoMHnqcsaaNebxYTrYn6qLAveR0oTVJujpMA+GZ0+uK62eLOx5mwA4NRV8JvJnG1blUXnQUwPrkabKHV8flR+ZYMkORWF9wvTnAR130J/HfaTZtISWBbP40NPHtK3//t30D99/R8G56XAuUsgt4hyfJrJx55Tflo0TXIDpmnCDaN0QDBxbcJDgCjeGLTqYE9gKeO6UjckS4LFBdI53J6B8Xl+pyAgmHUf5hXeeK7cCFB8CDgrS6BtFKSeqTa/ZLwqWCcafUmoOQvlgI2JShw7bTZoRfz000/TeOwn9leuXKHnPe957nvTNHR8fKxcqdu/+lf/in77t3+bXv3qV0e/PfLII0REdN999wXH77vvPvebZq9+9avp0qVL7t9znvOc4vJsw6qq8kHBelDWSxqkI2mUyxrYIAOCRajF9+TNrgya5qx30d3ewksyNBDw0e7/3R+9Rv/vn3wrve/Kjeg3S+MUOyMzwNVA5qzG8kpFpOdOf12yBhYQzIxsTZuyhFHF5nSPFTBAAwg0cMrXx3BgQ9PCWrdZgA8+v5S22okhi0DkgRHWnD0ngvykwO9VzDPR4x16CTJ25zeuDX+4FJxVQHdcGEoQGBdHy7QFaaOVNWeHyRpEzFkEZzNBFAPm7N0Wczbf51zcoqyBpZ2dsmfesUdEdv+mMbqlcZ+jMbwd81Yp0+4kDZCvYqgjuKw5WYMCzVmTOTvgHm+elICz3W+HBZqzQbDEM+ass9t9DupYYbXOFtJcj6XmbMScdV/tRZoF2vA3nTkbpoHpWO6K2kIxZM7q5SBKBATLvOZy/WczZ8PzZBm0gFJenxVlDfTytW0b3X8ga1DHz1aWvRGVjqBjCNiT+90zcu33n/vMpvVgC5YtBzaVWOSuj78JrWK8l4WhOZuT0OjSY2BFZ87iWibUnLWAHL7WZ6qtT3RZA7ucmH7EnBXnYFtLAY265qzPJ/qt/7Q0Z63yn+8Dn3KdaWQD6e6f26SRhcJ6R0kPzLc7ppexgvyLNGdd9uF945wCgzZJmQIr6QaAvu66/lM8EJ538PEkOAvM2XFdm20X87O+SythznophtxGid7vEuksZsnMtOpAeiGP6jrYkETmq2YVXD6HMcYHaPTPmOdnh7OFuc6V9zJI1oCDNLehFvsQWYOYOauM+4mO+0CRzWK8CvuG2r2b1nwj/DvYyIDncxptEDj77Gc/m97xjneYv7/tbW+jZz/72UVpfehDH6K/83f+Dv3Lf/kvaXd31zxP7iy3bZuk1H/Lt3wLPf300+7fhz70oaLybNN4F4pBWe4kZUREaanAKGguargCKI7qyk2sEUx78mYHFl0+F5eBd3u3qTnLO9nckSCzTlsA/qs3fZD+w+9+hP7tbz0cp2WAo6iVZzEVl9WcReAm5bpbwlQaYifOJV/IGiSYszcHMGenCvjMpoOztivyKgHBNqo5azwvXJCm3kFkW8u+ip/3473m7L6QknBaX+vWnHVMdARUOK+4Lo/guQ2VNQg0Z5GdLt4xbkPoFrmKTUbhRGeoHSuyDJppemxERIc9qLo3hDk7GdGDPTj7gWU0Z/tFSyp4wLpsmfd21wWgNPSnS5izjpU1rC8Z4vI/1LxW7vKMb96MTYKzvUb4hYysgSUhg8byNUlZg4LNQu2ZoWfLH3W73eegcvEudTK1II78lxUIz7GIlCboFm680DLAYG0R77Va/eI1lReREhBMnGfJKxDZi+wS3UQ0OdahZmKYbjofBIpwjJTzCmTOys1JDcDC1zQOCBZ+VlDOQNbASQGUzcuQOavdkwW6DNEMjN31/d8+kFyXHtYTt2vruZd462nzmLZtg4283UDWQE9H07nVstcAshRohvnK8yxQmgjZ0HEhpqN4jZnU73QAaPxTrZSLzQUEE9fj2fy3i+USAXV6S3J5oiwBSHpw2Xw59TIic7dt/d+WoSt8CM4iCaSJZWEc6GRsTjlgObxObgTxfN3yoEBDbGK2aJLM2aHgbAdA27/j88C61UyC/uEGY3y+3EiwwdmwnY9qIYPh0tOvD2QNoN90mxUwJqM35U1jk1zeCpdby/+5l/eD79xXN6Le5TwgZdGGnjbuJ6aC2ua/Y85qmrORFJI+FrbQ9lNSS6fBBq0sXvnKV9Lf+3t/j46OjqLfDg8P6R/8g39AX/IlX1KU1m/91m/RY489Ri972ctoPB7TeDymX/3VX6Xv//7vp/F47BizkiX72GOPRWxatJ2dHbp48WLw73Yz6WLOAUHQdUCz6TgG/jTzbE/98e4oAb44YvTlczvR+bckIBjoNBHlwVkuvxb5OuX66mQI5nqdIhuuxDT3zlQgHcdUmq1Jc9YAK5hhlwoIVgTOJnRX2S28qjwIqUVKnw0An6Rx8JLFBkGAnKwBkd1eiNIg33nBnN2f6MzZdbsHa1qBvMDWgGB81z/69GFReTRmpcbAYEMQvCSQRc5GCRCvxByontGcRZYnunEeq7IGelkY/NqbenD2kWtHdHAyN4PJaXZhi8zZEn1YabsZ2ZYSwDfFJkfNWWk+WNb6+wrUpV7WigKCHaVlDQKPkgwI7ft5eywrkdlxbOeAOVsVleGPgt3uc9BY1iD8XQsIxn96/X5D1iCZnw4SaLqOMl9c/CJjSTON1RMwZw02DlHoXhpY5jWXIIyco7fuPJFsAhTj87lM3NdoAIKv/zYdECzBgJVldQAVMGc1WYO68gGmUpvKc3iYXF8Bc9Z4nkOYTymw22kVc3mgrFw2i6Fl6Xti+Sqqok1GdHHvZA38e5MDZ3OR5pdnzlZRe5btEMe14cxZBoqU8nGa6v3YzNkLxtpEA2k46ThoESWRGp05S+KP1PU+/yLmrMsjFJqYiLqXG0Y50Am1bIPyiQPcl5fIGqAcx9FskdGcDb/npotFzFn3TNN1mtqYW4U5W1dVtK7RnrdVhXjce2f4fhOZszvj2r1/lrSBvBffNrx9zsfdQ7/w9Z9N//JrXhGc68BZUZdDeAbxhl5ct6luW9v85/n6XAFn7SCioflxrYJNjERBbmMbhI5867d+Kz355JP04he/mL77u7+bfuZnfoZ+9md/lr7ru76LXvziF9NTTz1F3/qt31qU1hd8wRfQ29/+dvqd3/kd9+/TPu3T6Cu/8ivpd37nd+j5z38+3X///fSLv/iL7pqTkxP61V/9Vfqsz/qsYXd5m5kEZ72sQRqcdYFomth1Cc0BioZb7K4SxfpJpzlrM2cPZ4vBeq/LGIqgO7H3Oq1rxZqLWsCrFKiQCjZD5OvIArrj9KoovRSAUBKAZYjlZA1SzNnzBQHBHHiYYMnujL12ssYctDSASwzfgU2ZFUAOJ6wphphzS1cAfQbjGcSQzNnSoH9DTWo4E8HGhFKXCM40LdEjT8cbctJO+meNkxiclMj3dqYwbVexVTRnF41nuOTkBCw2MLJhdyfpDS089479qQsO9YHHD9w7U7J5weCsJleybhsCGrO5jT0DtJsXgJwpKZWk5izL8czXP265cq/CnC2RNTjMyBoUgrOLpnW/SykVtBJPDk4Hn9nUMXjPwNnb3TzrrHt+kgXrWJINXtNd5N43qRvbf2rvGR+xNWf5M36HJQuuc8mOwSs0OTduScoi2AtxGUxHXmOZHHIs5mwcECy8Ti2T8yJjICHOHyOxy/vXNGfxOcla9MGMuu/ICA0Dgvm8rSCZaCwdgGA5LrrN5zmg75bMS839ldNTA4IZ4G5qOhYGRqvFb142SgYEyzMw4zzCsmnX5kHEivKyHXXtgVKvORuXQQ8I5tOwyqcDZTboIpmzWrnl841kDUhnYUvQs2njPquEOYtgkGOfJ4ZDDyNJhndIaJDM2dLNKekhIKcq3JdXif6QDX85nC2SWHX8jNJtctGkufEo7YJArZWWvNb/HZ8vpSJSQdF2cV1T4yZhG42pcT7xmgEZ0wgqVlXliFI2OKunLz0FXnL/xQi7cLIGkeZs+VxWkwyJy2g/KD0g2KhP219nbaSam2gKG/20as7mqXJg9913H73hDW+gr/u6r6Nv/uZvBq2dir7oi76IXvOa1yRZrWgXLlygT/zETwyOnTt3ju666y53/Ou//uvpO7/zO+lFL3oRvehFL6Lv/M7vpP39ffrLf/kvDyn2bWcMzl4bKmsAncOsaWin1kEEDyjqv3t3z+4FmS8aB9qpmrPupekAFi2w1ToNJ024+J2Oa5qfLNRFKEe11lhIluZsd4zBPkPWwOn3ljFneaEzC2QNbABh3QHBND1AImhzmuZsn3dq0c6WYrEdz8uYg6nnkbPxirqiJWaB+SyDcbJokgG7UkHkJGtNBgTzgOm6mbMxmOSB4DRzlqiTNniOcI+RdqJsQlRVJ6OiuV2n3otljO9tmbaBfUppQDCi8D0/ckG+6ixz9giYs0REz7v7HD31wav0h1duDNq84EXLjeM5NU2rLojWZUvJGmRAailfo9lUCbLIdjK3N964z243MG5hUKxljQOCXT2YmXJNzIi+aMwNxnXHEGha7nf087D+U14ge/0YoGmCsWnM2ekZc/bUGK9VLFdOD0gBgNe24aa5FRCsID/ZR6XW7t49uD8XGTHGNXKcaVudmaWBLDzsprRL9XKG6csxyN1HQnJA+45p8eJZKzeyLWPmbB2dFz5beS99WYM6jzc+UTd2lNjolfeBAEuJnNGQ0TzVlrysQfcd74XHlvhd6MtQyICUmxZN2wZzrynMdbLMWYW5jqaNFyWjUcdQ1e8TbVyH8zaVOauMuylZA01PN7xOvwMXECwhxxBrzmr9QJy2A5NdUh4MrMQ5RPZz8+BuS5V7h1LtBoAkkf6ormjRtEJzlgE4vk89bUwXr5PgG7dLNw4k2bC4iZLerLIkVyybL3LM2VBqpYSNjNe639RgcH2dclkt5mzdk236+di4Fh4cWeYs1p/HzeJj3ffzO2N6+nDmpKikyTvRtFlrrfESyL+J92HIXDZmpQ9bc6WYsxq5RuLG2vgMj6HfgNosTrVpGwTOEhE9+OCD9Au/8Av05JNP0h/8wR8QEdELX/hCunz58toL943f+I10eHhIf/Nv/k166qmn6BWveAX9l//yX+jChQtrz2ubZjJnc7IGqEWzaMnyQveu+JasAesAdhMSlgKoKh0g3gVXnKP5Yil39CGGwNdE6NodnCzoZBG/2Myc1ZihKRDIM0H1zmUwc1YJXpMCI9evOWvJGoQbAmjDZA16cFZhxB65QEZ1UnMzFSAtZ6uwI0vNs4N0MP9kkZY1KJGxsL5znqn0lzEfMdi/Aykmugxk9XBBUDDrvkf9JN/SnF1FtxOthL1jGbbTPDjr6xABw0PYyGHWtOVSfyDA2QfvPkdv/eBVes+j1305CqRU+L1u2w5QKwnqt6ydLAGmsxunBc5qchvSUlIfKcAY++zjNY9bszUwZ5ktfbJo6HC2iPoCIgwIpj/XqqpoZzyiw9kiqa2Lv6Xqgcejo5SsgfLMNDmfM7s9TS72zYBgwvV9ZszLOguBLzS58LTYidoaXroolzBitKAweCTFnF2IssprLIs0Z6WsgWCjWummgpRNHHNWAeWAgSXzwOeryxroC210j/ayBnG5qsqXOxUQDEE+LSCYqTk7YDiXwFAVgBUePCMK5z3+XsS7UIfXqOUDfdJYczbsL3eneeas5o5b6vlRQJyNwECrLG7e5gK5xWUYHhCM6zP+LRkQzGDOhoxWCtLW5E20enSBs6CNS1kDbBcmOAvPjfvO1GNDIAkT5Xa0aNre5V+Uxd1PJl3uV/vjssvm+ZwfB+x5QYqxLK2kT0NbNA21KYaxYM6m3oUUc1a7jG+ZPy2AsqIqWBfgRkJLqPObfqe7MnKasFnWhOcxiWcV5qwWzI7IP+e2DQfGIXE/YhA8rtxU21fB2UnMnOUyxczZ8NqqqohgE7aqyjbWbmdbeiV3+fJlevnLX77OstCv/MqvBN+rqqJXvepV9KpXvWqt+dxqYwCUGbNXDzq25x0KaxUtZGzZvZlje1rMWeFy/lSf/6W9ibrYnI66yIRt2y3aLBfLdRmyDrDDYHBaW4SylmoKnNUmEm7hvybmrMbySgEIe73m6LplDSzm7HWFYedlDcoDgmmAXsiczWvOLsOYZIbGut3+0RwIpTDtuvdjkZY1cO7fcZuRzNlzgjnLeaaYucuYxvTzTNM4r0PJnM2As+h+JdkU3WSgiZ7ZMhqmKfOBbIbXHT+zUV1lATfW4Fs0fuHStq0DtPemIx8IqyAgGBHRg3d1urO/94gHZ0uYszvj2jGTrx/NNgvOJjYdLMvplXvtVjvNcaLPsTQwicL6O543tM4tXQYhJFNqiO1NRo6J/9TBTAdnWdYg4VWzM6l7cNYeQ7j+J6MqOQl3MjsJDXQNmJ4kxuYzu71MgqVhwCh/HOdhTdsG71/sVdJ9aguhKACZwazSmC4+kJY/1y3U+mM3juc0HdWuX4oXim2w+E+BR6gHqN2fZRIokfNzDxiFJ8p0VcBYSBKlNGe1TWtNczYALcT5qO/IaWuMW3Sf9nrv9rxs3vixUmPOrmMNHQP//m9Zbwgke81Zeb0NJrJhPWmasygptVew4aprzsbnaW2yKCAYxSCoxhjkeZtrU0oZtI1s6Soe5M0AqnJDGoOUq4A1Z1ObJrIPkn2RwKL8deJ7G3AsGRzS89TK0j23clC/rqvovsd1RScUup7Hsgbpzamcnqps86PEeixmLJunKsCZfS5Rx7YvZc5Sm34XY83ZNDhbZeqIra7CMQ+Zs12gOX1Tz1/vf0ANYbnRyPXMRKmffPOH6N+85UP0j/78JwceT9Y4ojFn5S1xHxXLGgwAZ8WbpC2HU2IVWowdpzkLY4jFwo824frPQF6ioO++nW2zFMgzU81izuZkDUbQIaTAIWQwaiYDpXi9WR0crqoKFtmbX3zhy4nsRc/ajMvAzFlNv2+WcH31AcHiNBFwyQUJcuVV3P45f51JybIGawoIZuh4ckCZtu0AWrQhzNkUiy1gziq6xq6MKwQEYzAkxdBY1SxpCDyW2hxJBQST0hF74rsmi7EOc0EpYALGdakB3RE4e/Ugmf5Jgpk3dtIhEpxdvh1otgqr2ut0l5XFs467e8B2vjvJM2ePJDh7TwfO/n4PzlZV2eZFVVUOkN10ULCUdrZlXtbA0JzlTYMkczbe8IrLpC0Eq6y8xLKGEbiXtaqqXBBQ3qCVxnI9qQ1R6QmjmfMAyWwy7k/ynhzaRo9nzp7SmfAfIZOahPgc0eVZgkPoDSQZRvxNe/qtyM+SNVCZsyINBHCatqWbx3P6f/yvv0x/6Yd/I7o/zB8Xislo8qJM7rt5JuchF6sxMKSVLWKZJWQNuM61YnM6GskgBN/7ZwunRSAWheAWgq94XxjUy22MJuZFyJzVAoLp7Kth/YmsGgSVJOiJ85G5YBH6a+yyuTJC+rHmbBvMJ4dozoZAuAJmKq2yBF/RtF0t5ixRKEchLRUQLFUWuUHE+QXf4YtjziY1hbsv/l0Ly4uBvrQ0EIiX0gCYr3VbHmizdW/RAhdscR9Y9y7wHrM8+T6NdBtIF8sln7Fki6cYrvFP9rk5fVBpJZqzqNmdBHIlc1bRTQ/L1n3mdHfZQ8ldV4cBp+SYGl/v/+b3qSLsj0OgnOf0/+F3P0L//nc+Qv/urR8O0pN3kpK6sYJOSomIIeCsHGZUrfnEQ03KGsCFFsBsb6L5evRzktM5Jz0DZ2+BSXC2VHOWqCxg0BEwGDXbEayupxicTTB3MSjYps1PlMKJvMXanC8ap5t6/Wgea1syy8lgBWtpEoUAeClzVguYpWlxsq0/IFg/ERSsz53xyLn58vNmGxIQjCdjWlA6XXNWCQjGYPUSjEme/Ka0zVa1FNM5pX/JNkRzNmLOFqS/jHF6yFBMabRKpmNO1iAJzhqg6czJWywPcAX5rKA56wD1AmYLkW+7nBdqRu9mZD2IiA76zRiUNSAi+uCTBy79kuAeREQXeuBuk+BswIweAKbzJo01bvA4luoLpokNkZMM+9oDl+sdt9YREIzISxs8bQQF88xZe+PMa8iXeNOky8vs3ZQGurZ55TYlz5izt701YrEfapL6hU/o+u7nMVWlBfXilWqcnwdn+/wiFkz/mSgrssEQhHn4qUO6ejCjd3zkmrsmAkYpBEk4n2QAHAnOZvpiOeTIMcgKCBZpnGrgrBi7tXI7cFaRQ9ICgpVozrrjlc64RQZYSaDWBYB8nAy2Be3KoUN5Ss+Yf+O8cQ3l9Td1YCkVgBn1SeWmRdOKgGAw3zNZdq6ccV2jqdcXTBmQCc2mTcHkvE2rAW3ctsDA7jdOk/MNwfMATIe6PG8xZ3Fjqf9075oYiqxHyHkiEI+Au8zXdl33cJDFlEfz75dgzhLWfaNozvL1etotAFRY3hQrNPV76hrN4meUTiuvORtuUqR4OZqUBZuWgwz4ZsoaVKFM1rj2bbWFfGzg3m88LIKxLDzGz0rGIomdQfRxRJNxkWXCNSCOlTn5iSB78V3dWEtcL/GO6ah27zKWyUkzVFX6HRTvBJ5/SlUNzsDZW2HLas4SpReqbMygscDZXcHqeqIH6+40mLNEnlG27kWuZi5IjOjVLebsDcEEvS6CXqXc6FMBmJCJVKw5q4BrKa1Gpzm7hnpt29blpbkJv/De80RE9LYPPx0cZ9HxMuasvwfJ3g41Z23AYKWAYKO4A1+3JTWKCxhixzMb6Is0Z0Wdl2y+LGOOOQuTDxcMLxEQjN+5D19Ng7PHvQ40LtTYvMvjZjVnPXtnCXA2420gbSzec97omow6WYQcY/SQJRD6857XyxqwlZaDiOjCLjNndYBvHYZ97pDntZcLCMb9VZHmbPxcZxn9ajnWrcvma5A1ICK6Y68bc5+ywFmnOZtnzqZkDVJSK2glm4UnyjM705w9PSaZrPgcU8GfHChfxxtHHpaITbpsSgCtRHMWF7/oCnqz3+Q6mTcB+CfzRyCDr0+BEVY0aMtknqWaszLdlOYsP6dUoCVN0keVNcBnK873+o59GcENPmTOct6eMYr3/UN/5WX0J154F33Ksy8F6SMzEduCpju5OnPW2wjaDZFgzgLQjOY1Z+08kdUda86GAcFwTWY1KW4DQTAjJX+t+RbJGmjtR0lMykRpAIwmJ+TBTgWc7T8b5fnjxhBR+Owv7EyC6/01MRhlMWfNtuRATD7RZp/Kv8OycL62tAJa2KdhBn7DrCPBcL4h2GYlHXkqZPq7nEt/lzcVsb6xnGwlmrM5EBuZyKlzpayBBHajsvafllcHnodzp4Dl3blmJK/HPBawyem8VET/I9fid58PsRl5Jxpb3dokCWJmQL45hjOapusuLdX25eb/dFy7Z8FjjMWO1X7z18bnn1Js9gycvRXG4Ow1Cc7upTVniWJQQLPjjIvuMszZ3S0yZxeGy6gDZ0VAMNabZZPSBimmpsZ0ZePFblWVszy9hq3vEhyAkJQ1WL1ecbKplfcVD95FRES/+b4nguPLyBoQxW3QM0ZHkXQG2kmiPnK2CgBXaqmAZSWyBimmtKxjuUOKmwWpwW0oQ03TiXSu+crIyu3xBfd0gP5Hrh4m2SMnIKchJ2e8URAxZ9esOTsWi4khlmI7q3mJdsD1xYuvnDv9oQgIdm5nTPdd3HG/TwuZ+kS0FVkD3IgZ8rzysgb6Rhyal4qxZQ1M5uwkD1wuY+sICEbkN2SvHsayBsfzhau3lOZsSu7HpVXInN0rGI8QpHNlOGPOnhpLsjcrMoA4BJkU0EUwV7T8LFDUAyDa4jBk7eEisiWiA4hmzRtAMSgjmLMJMFjeD9vggGBiDOJfZdmGyBpYwVGwvNoGliZrkGLOeolRv0geCRAB72VUVcTdIN7357/kXvrxr/0Mevad+0H6qDmLG7ma++nQWV4qIBjXA98vSmM5Xd+IOdt9lsgaEFUqcxYDupXJGjA4mwOW7HaQMgSF2DQAjcdUx5xVqkCb43rGpp53l1Zc3yipQhS2ZfY4i9/LOG2pU81mETokiNW0rbtYA7hyruuhG756alc+SA9TrKAdIatUMmGtJunaiii7Cc66fsUua0UVvfSZF/33xLmx5my6Uc4bXW6CDdmyrSFN4c6NPBbgi3KdBDUtILmuqmDuNKor2GjIM2cxbS9r4NOQgShl7Ih4A02Wj6L8XTsVhcJ2sACPgQHYbFSg4czZcK0yHdfRpnAqsFzcz4flqCrcxDid8OwZOHsLzOnMrSBrkGTusb5cLiAYa84elDBn0wyoddpM0bQjsheA1wRjTAYFSwWNcUxFZRRFNl2pi7EG9iYDgvVMSisq4xBDwFALZvUZz+/A2TcKcHaZgGBdfmGdHTvGdp0ERVYJCDZZAYArtRRoKLVGNUsBIRKMld+5ftvWnky+6mffSX/8H/4ifejJtA4smsacdTIACebs8+7ad1F7H7t+bKafChaV05xdt6zBMqzqUmYhm9TrPRJM2BybkQXx8fkje3YYc7YbN6QHwTot6FsGPC/PXLVkDfJtIMXw9rrF+vUlLv+WNYp0C9u8gPFbYg6cVZizCLan+uYSXd2jgZqzJ4vG1I90rGGo82kCQD+z28si5qxgrznX4wAcSns6oItnLj87IFhsDigEph0uum7CIo+JA7IJdsSmmI2T1FgcGBBMrv9KZQ0scDZYQLfh2K0yJiu7j8wzZ/WyaoxQTQe1rkBuCuaEDhsQ5UXwCplmOvsqPpayyNs1AO9CUCtkzjZReYhCHVLL2qAeJDjbujFqVCprwEBDoJcZn6eCn3YxIf0Y1i3RnNWehTZuW4w9PMb3M0q06edc3iOiTvrLb4LKE23QVL5rOT5HBWXDzSD81Eogr8e5e2ouiu+XZOaixrPUM5VAVJQuheez2cCjL39K+uCf/KU/Rq/8pPvpp7/us5KbVZZus2WLLDjr+6gsc9bod+Xfsqx5zdlwTt4FBOMxr4VnmRhTFADRSwiF5ZEkntR9affRHQvzZcPx2/V7St+VMjlmqI8k8Uzl5v9kFHtnpLxXYuYsv7sAzlaJsp0COwNnb4GhrMHRbOEmlZfWJmuQ1pzdFYs5Zs7elQBneVKxzYBgchEwNRahOXA2tahIaXweZ7R7NdOYlTxh1XaZeTEsGclXrh/TT73lQ4PcRFPRlImIXv68y1RVRH945SY9dv3IHb85gDlb15UJUDpdw/EoCYosE1iIDd19NmU8YGnlK3HfTQUEm0BUaaI4QNg4GDj1e/zN9z1BN47n9K6PXlN/10xzH/egV5wPu92f2xnT/Rd3iSgdFIzfMe2erWAhOdbjUEO2wVBzzNlS+RKnvdwzZ0Wfm3Onl0xbIqLn37McOHtxi7IGQ7RwiTxYbXlcnBQwUFMbkpvSnG2alr72/3wLveLVvxSNL0RxkJ5l7c7eW0ULCMaeNRd2xsmJcwkAPZQ5S2RL7TjWMDBnGag9Y87e/iajeWPb6mQN+vOE67sD5ZPMWS2/7tMFtBFN0GL4YHpIBkP3ZWTgcJ8qN1SsxXNa1iD9XVosa9CI38NPXwb9O/YrzG560X0X6OOfcZFe+UnPUMrbz8mUOUMIvsdgo3xmvs59O9GuQ4BVY85yrnK8QCZzoDmrsq/8sZL5YrSgh79HAKYQhfME58YePXdua/acooG2JcehtvVjxaQOA4LltEtzwJJmJWNzRbZ8A1qsORuXQZVIEGzE8Pzuk0F+yQbH5PYnY3rbq76Yfuvbv8i8F0H6J6LQBR7TtDZaK/HZEvY3YflkGcOy+OdmSSuE1rp8ZcAxBMYly7gKro5NMm1zLvt1QZ9YVRU9+859es1Xvoxe9sCdiXuK6ycH+s2bvOYsaviW6tN23/3fKWmQEukHGRAMxzyr/5BpEHkgtgMQBajYnys3460Ak9Z9YH6ySDgeIIt3mKyB/K713bbJueUUCHDuXhPtyAJu8b3NMcxvdzsDZ2+BsXzBomnpo093IFlddYuwnJXIGniQLO3qyec92bN2kszZyXKL3GWMJ3iyo7QW6dKd96rFnNU0RBML/6OBOpREnsGla87aTErU+JsvGvqr/+xN9A3/9m30X975aHHemKcGGlzan9BLn9G5przxfU+64zcGBAQjsoO/+KBKdZLNtYo7u9Oc3Yqsgd1eTpTAG2w5FiYOvJGsATw36x3n9IewAZ3bHjJnE8HVGEzbm4zo2Xd2DIZUULCkFMSWZA0k02OIDdacrRmMavvrfX1hOieLRl0USM1ZopA5OyTo1vndzcsaLMty5nFj3rQqq8sxZxMT+AnUpVUuSxbBgeQDQcP/8LaP0C//3mN05foxvffR64PzLbVLBczZlKQBEUg3JMbmUubszrh2E3xL2kBjO09HXbpnmrO3v3kma/eJYw66A2I/GmhnJtq86pre+gUgkcLgcths3AdIoKWGAjat18snSssatMp6L6UPGK9T0/1eBM4qi2kN4IsjaXd1O4bFP8+H9ycj+vm/89n0qv/nJ0Tp8K3ozFn/vLSgK7JcTi+Ty0g64xbZXprmrKaDSBRqAON8JMecLRkT5VPSwHjOR2M1Wov+JAMS8tbAHWTOlmjOchJ47xrAoAOjZjHhnCp617QpmJQQGzqtSmnOyufvgaSwL7q4OwnrzADPu99CMAZlN/B7VCbRTruAYJ6BZ51v35strYAWAHoIMle+T0ZgUjKSrbQjYLl/timXfTbrHHl0GHM23SgXGXC2hf6iadPtMKUzrDJnRftLAcmpgGCaZ0aUF7QvonAjVLJFZaBoLcglmm+T8fsg6z8gAC18Ox/CMyiRDEltaGkBwTh7HzAtvCYlLcLfcGPCAbanVHX2DJy9BbY7qd0u8ENP3CSibgGWmiyylYBDRzlZA8G0efJm5658+Zy9CNymrEGOORvJGhzmZA269LSddwdQJVy7hzBnOb0TmKSmXL41jb9/+ZsP0bt7VuQj146iayxDRqo1gZC6s51rYHlAMCK/KLcDgqHmbNxenCbrEpqzJVGBV7WUnqRjmyZkFXL6pQjIWgHBsBzSuF2mwBhpjr2BmrMJd3GnWz2p6VkF4Ows8Uwt0HTdzFl+NoulNGcHyho4ORTJnO2OYzA4DVQ8PIllDR68e1lZg+2Bs0PfWew7jxSA1DFQk8xZv+ElJ3wz17fq/V2Jy7+0o9mCvusXft99RwCIDXUEV7FUQDBm7PLztazkHkuZs1VVuaCFVlAwDZg+Y86eHvOuf7wgBfAOWZJCX9RtMivvWpo5Gy625AI4pVEpgRZcRLbUhsxZljVQwFnJFpZ/x/ejg3SWWQHBvM5pq4IKlutxXfvnwH1kSbAZLQ/sWmVQLCJFz5DCc6qqSoK6daXPy2K4gNMNmWL4PKVhtZb0tSmX6hqeRVfWuK+SVczPQ7YprZAIqqHhxjh6JqyuOatdaxcTz4nYjcqFI/HMS9m7SaamYMdJxmyu/DFIGP/tgdHwHTQ1Z13R4F1twmMBCGyUDVnWyPS0LIgsH5SnCoBx2Xf5vlZP20vA+PSI0i77bJYnULSflgQhh/WdWc3ZJpS3SYF+cqqd6uewbPwpNyr934I5W/nNM2RKl4DWCIjys5Fs0ZysgawDbQy13insR/E9HOIRp22ASrOe0qJpo3nidDzKas5q9+a/h+NfBRtQG4QKNmpn4OwtsKqqHBvmg71u5B0FerNEMSggbbbwUWt3jYXYrtADfepmz5y9TQKC8b2ZAcGEjqMEJSRYm4rorTFd2Y4L2UZo7vkEsgY268wvhLt7uHL9mL73v7zH/X54Ug64cOCz1CT2M55/mYg8OHsMUY5LwVnLtd/LQNRe1zgha7AMKCcjyG7CUuUrCgiWkDUgCqUMJHN2VPvdVEvzkcFZDeyyTGOjjxW2C1vAnL2jA2c/fNUGZ4/B7V3a2AC0c3qhQ03TvSu14QHBwolWJGsA6WgbWvJ8IgnOlvc5rDm7SXD2ONGHpgzrU2NianIb0lI6zNmAYIlNIsv+j19/f9DWZfCCLt88qFxid+6zxJEma1DInC2QNTjK9Eloe86bQ29P/t79M9sp6BfP7PYwCZYGC1IC90sEhxo9EJy7joEJJb9WnFPBwpYgP60HiPVPw0UXbpxw/xK56SPsB5mkNWdDy7G/5AJwLjZvLHfciB0EsgYjsVhd1vLM2fB8VXO2Lye2iQWAxnJhzdcRxXWHQX0wCJS+wPcHi8aeBIjkgenuU5v3yDbBXhuzBBmGf+kYxHE7QTAGPWUsRhc/rrxepnZ12Vwqat+arAEEpyUqdw/2z93Ol5/Bs+7co0997h30JZ/8jKhcGliUCvgWM2e7T8+YNsBZUd62DdnQeE53XhrAxM2HpFYx5CGBp1BzVgdbraQRoML7Srnsu78TsgbWNfG54fecrMGiabIBwVrok1J1KokZ+FX1XBCyFYE+d7CRF2vOulPFZpNlnJxnhoYAL16fA2eladrNDrAl+9nxuz2YOSu+q7IGRpG1eWUnaxCmlQqWaTJnG1+PqQ3j02BlaMyZrd0u7Y3p8RvH9NATHTh7KQGMok0zsgYIBOSYs8x0fNJpzu6o5xMhc3bzi6+ZYB2w8QJQMtGkJqDU7ztJAADjBKBzVMg2QpsoYG9KY1XKGvyjn/89un4cs0FKzN+nXd6XP+h1Z69cPw4GUql/apnTPRYTVmTO8qJEAwxOEkBezrbBnJ275xW3l4lx72gpzVkion2Qj5DgLFH3/E7mjSo3QOTreRBzVllYy8k3mtNEnY7o7r5f+HCBrIEaEMzQgk1JISxjUiNtiKEkR4lJkP7IBcPrnud4VNOormjRtOo7wPWLz/+5d+1TVXWTiUGyBjub15xdVoKiqirandR0NGtUkDoF+LBJHWbErWdNulxurCvcyLhy/Zhe87o/IKJuIX04W6gM0rkRtHKopWQNeFy7uJsDZ8PNVs2OB3iB7CveHGheexSYs2cBwU6NyQAzwTyrIrfSCQA8akHOQgFn/Ylxfo4J44/VVRVFqE7hnwgoc1fRtgZzNgqeErI8XRkSXVkEAtmnBuVjw7o6mjUBexctcjntCzUCWQOLSZRKJ0wzXtQGWoxRQLDwE5l8IZvap6nFIXB1KIqG4FXdgwILMsBZOFYy9sSLdgBbmDnbf9fmkPK5l2zGu+da6ePBDDbGEZy1vAx0fd/4PB28NIsZpC/P0wOC9XJUC52tmAP7VFkDAcCM64p++us+Sy2/lnoMKmO+3SeX1MkaZJmzVZ+3B3Fb2Tcp9xClA/cmGf+aaRtOnBcSGiQrMwc6SaAvF+wKD5fOZ0rc9/33dJqzRU5HFvuk/Lnhd3sTCsuqMaS7v307wLVBpznr+xN8lpb5dugBUauPl32DZO7LOnAbn0qAPO1dr6uurnj+jR4zJSb7A11zVn9O2rxyZ+TltHAzS5abLSqq6Feo8u3/TNbgzAYZBwVz4Gwhc5YXqpasAQIBpuYsLOYOT3xAsjsTsgZ70+6abcgaOJdRMXu2ZQ26CTq/3LGsgQ0GpiZfyzBnfcA2/3wcsKE8D14IH88beuP7nqCf/u2HqaqI/sQLO/kBy7VUsxJG6h37U/r4+3vd2fc/4YKB7U1GxdEavQZkWDZkH6YAg1nCPTJno5GfMG7KUkGGLEkHNKdfagAhqDmrAeIe/I7zaNuWjvo6HeKqzQsRfMapgGCoUellDRIBwZLgbP/MToXmbKGsgdjUORSas11azNpUwFk+f4rnj+hZPUt5GVmDG8eblzUYUi42r/tqg5ypvgA9AeR7l/KK6PIexpz9vl98D908WdCnPOcO+uwX3U1E5GRfgnKvqe2yt4oqa9CPYxf3MrIGE7udseU2jNC4DduyBnzv/rn4sfl0ToT/KJl0e8VNa164EYX9ddOmN7kdYJBwTQ/0P6NFsL6IjxahBFp/bfhuHhngbMDUJL0M0oYCDHJ/k8vA71sHEGv5hOlydzLSZA1SgEjitdbYYE3b0pM3T+if/fr76YkbIZnBlxMB1B5YCMCO1qUp9UlTTMPADbhGJrS2wPdWsmEZ1RGCfY5Z2aVaojm7Y3iJBWX0eEDAUmZzEhdVFfS/FtFFBiGz3Li1Jlkyo+6uk+0uvhKJEFoRci7wqWBhWGfhtQkARjmmATaSter1W9XiRptDeK9aQDCrL3D3Rv49SQeSi1l+XJARzJmlDI28T2kWmJsrN5HOnC15DuFvlfhun0s0VHO2NQO7cVrhtf5vLWgX3/vH3Xueqorohfee97/V4Xm4Nug0Z335UHbHMtmfExFJ13u+XgaH1zTMw7TjMsv24s6tYw/UqtLfJctib4v4HMu5VZtXYkAwizkrN3fR+BuqQ7hzTumU9AycvUV2R78o++CTneZsuaxB+FJJw2Bg1i4OBkl5smeZTkZVFCEwuGaLmrOWq6tbAEYBwbpF7DMudcAGgrNdx9/9nZI10FzIl2LOKgyiFENwH8C5b/l3bycior/4ac+hz3x+B85a7CXNZgnGJ9orQNqAAZ1SSQMiW/fYgdmTkXe1FRPQtm1XAuUmdbr9r8NmCQayJlshbYjm7J7KnLXv8WThd9KHMWdjaY2U3jK3u72pBww/fPXQnGyeJDZAeCIgmcC3l+bskrIGTchixufJ/eyRACVni8a9A3sCwGdpgyHM2YtbkDVYheXMY8fhiSZxwgwaO13cpJMbFrk+r8Tln+33HrlG//rNHyQiom//ko93gdYOFNC7RI6hxO4AWQP5bpUyZzkYV3rDaDhz1gJn54qkwxlz9vQYMiKJQmCmqvxxqS+qPXd3HQCmcX4xuBguIjmN2CQDTQb6OFC8jKIAV4SABZQhsQKVrqC5xaoEFySjvyVD1kBUJZ8/CZhETba8KaA5YM4Ci/DHfuMh+o6fexf9/DseCc5HF2Ki2M2aDZnP0WIf71EUTTJnU2tofJYlmrMp8I7riJPU5j2yrCWb8bj5oI0HnE9dVwH4ZXk6ePAt/IzOU6/N11E5c9Y/c63tWnMBKxAcEYIoOgAjMErlegnYYN8VPt9SzVmZFm6kpLQ8o7I5cLeNAOJkvnXMGEZgvJFlycgaSC8B7yFhlRvXBAo4m7lGmqWjbRneo2ZNi2zoYQHBQs1Zv0niy9p9ftuXfDy9+du+kF72wJ3wG7QtCmUiR3UFbM1Q2sQyBz4CS9ZJmAjm7Oe86B76n77w4xwmIwFpWQVaQL2UrEGkf0thG8x5tYaM5GHoJ88rsalh325tRtbKc2OTwC5KJ5VqZd9udgbO3iK7JDVn94dpztqyBqF7rWaow/dUL2lw5/402eEy6LDNgGByEeBBQV3WgKPKo4so1pPGXNUCeLEdDWTTdWXugSgo44kCjLHtTrzWyvuu3KRLexP6xj/9Evf8lmLOZoCdz3g+BwV70mm2nd9Zhh0cPgfcGHBsrghMwcn28O5nFXZkqaUAH40ZLS3HUmO27Kiu1HPSUhu+PldlznqAUcvHM0GfcccuVVWXN0ugSEsyZw3QtHQzodQcCLyU5uwwZuhYtAMnAwETOIs5i1IlEpxncHYIQ/X87uZlDVLBgHLmxg6NOZvoG9nqGt1mw2ebYrkTkdkPSWvblv6///Hd1LREX/JJz6BPe95l956qzFnDu2OocUCw2aKN8inWnF0zc5Y3DA9nOtjv2M7Qlzgd8rOAYLe9yUjkkeYsLxiFSyg/d62/TgJs/acVFdwtHhPM2SDQh1vkhu8mb/6kAoLhHDcVYEsWZSg4KyUgLK1EuZh/6TMu0n/zqc+ir/vcF0Q6rqkypDbz8D65m1w0bSQHxuaBEF9nmm6nLmsQ17MEBzBgUrCIVioID5UxZ22wT96DypwVbcJac6D59q0zUN3cS5Qtx5z1bd9CZ+O8SpzfJEuOSAfuPEDYqO+1GWDKlcXuJ2QApOjizPXadwn8SlmDHEjjNWcBjHZdUxno3eUTbypphmz+QNag0oFxH2jNl1MzW3NWf39yG1bqc1BTitOzrkfrNGftekIpg+DZqGnZ4Kzrr4LNyMp93n1+xx6jBHMWPRvaVpfNkeY9UjhN2AgV91TXFf2dL3wRff5L7iWiEuasQ2KjY/HzoGhskRtHOXBWYyTH5+g/8LwSYxxNx7V/fwwZH20jxn8P88R7Pp3Q7Bk4e8uMwVkeoEtlDXKalwiQWYYLVgZbLp9La94yWLidgGA9OCt6FUvWgBljz75zn4hC5izueGsAQIoJ6dh0A5iz3KlhZ5pyCa6qUIfqG/7Ui+nyuWk2YrZmpYzUV/S6s3/w2A166ImOuT2IOWs8h5A5q8saIKC7jIu0B/o2Cc7a9TguYFKkgEoirzm7Px2pk76UrjSyZYdslGhu2Km2fzTzYOPOeET3Xuh0Zx82dGdTQdBMzdk1M2ct+YQSOxrALCTyz4jr7mgeX2+9A0ewcywnQZ/2vI7V/uDd56nUtiFrsIpONNeD1l6ZYZYLrGVtSuY2pEoDgv3Ke67Qr733cZqOavqmP/0SIvLv6SaZs3tT31c+fv04+M0zZzOyBgWas0Pa916GOatpm3O7OGPO3v7Ge2SeUeWfI7JqQlmD1m2EaCx3fgu0BZnm8okLwTpeVzrj1FADErUldc1ZkUbrxRbkcFsSwbwrW/o956piF9zygGBhuuNRTf/bX/xj9JWveMDV0dyBs3YZUgQCnEd79mhrjpO8OEbmrG8TcB6AXzLQGJZUNhesi6zWIYKzS4w9WptzAcFUzdnwuxX8Niiic0+vVOYhzxFkW7P6az4tB87qzNT8eNRpnMq04uvyzFk9LwsUwvJZAZSk9mrONLkBz5ztPrm/stzhPa7VX08YrKuKypILCBb0m4m5KG6ShSBzJSQlQsAp5aUg08XzrdcH7yclWWNdk/stB87OF2lV0E7KgP9OA96x5qz/G2VYrLJZDOmqCtc2I5Q1IF++EkaxJmdhAZKa1jfnqZVbY5dqQfQkyQnljIjyBC/M3RpHrKfEm6iIOU3HI3cP1ninBT1j40PoFZQKNHka7Cwg2C0yyYYpB2d74MZw3T1WQAJpu+By/tRBGTjrF9ibX3xZwVb8AlAwjPpF7HMud8zZawDOIiCksZwmCSDMsZAHMGc1986cLuL+dEQHJwv6pGddoq94+XPdMSKbvaRZqZv4HftTesn9F+ndH71Gv/x7jxHRMHDWAg9xY4A70pg5i2D5EuBszYDiJsFZG/ApCRDhWWp6u+G61oKBEcWsTLRlmbM8gAbM2QTT9FCAOc+6Y48evXZMH756SJ/ynDui852sgVJnvPiXiyHeYMpNBEptlWBxg5mzQhKCJxzY7zpZA4M5uzeJwfk/98nPoE961iV64PJ+cdkv9G7v1zYoa7CKBIXb2FO1W2MWpmbjUUU0S4CzmYBgqXelbVv6zv/4biIi+u/+xPPouXd1dZ9kzhpBK5exlz7zIr31g1fpN973BD2vZ04TgeZsNiBY/h6HMWczAcGcZwswLQpAjDO7PUwysQLmLDTneQDO+ndV3ZAAwJTtg08c0P/wY29x/V+gORuAs1WUN5vXGvTn+oVY6zx/iPz8Q5M1sMCgUVXRQllGRtHJM68NBxH6iz/8mzSqKudBMe3fzbYlapVXo4xplWdlpd7rULaiB9xS4GwbfpoBwaBcMiBYWH1hwZsm1BzF5ykNQYhVA4IhM5JIl42S7NZJYi7mygggtgrOGsznLHO2CdMnIhdklEgHYgsInrHGKekAWl5z1pI14E+7n/Bgln6t+qN2vvJb1GcwW9xAaXxAsL5sbRwQrESPU3seSRd8Y6gMmbNNxIR192nAX9hX4vmWvECgSa3KGizXzty5mdc2rzkbsvlTYJtMB8cC/lPK+ARlhe9yjNoRsga+vcWAuGZOpqbx46ED9JUNTCxDKXM2fB/iY3yulMypKGzjOQkZrNec9rE03lA9vzum6aimk0VDU5DxscY77V30vwnguwo3cU+jnTFnb5FJMPaO/TQ4yuaZszlZgzxz9mi+cMEA7syAs3vTLTJnDeZijjn7nJ45e/UwljUYC9o+W2ry5YHu8tdEez45RuvH3XeBpuOavuNLP8F1xjn2kmZD3MQ/o9edff17rhARJfWGpVn6gipzVkxA+dlZLmA5Q1erTRm2GWll4Gyavc6gjxYMjAjkBrQNA2BbDAFneTMHF9aOOavUpQxwxaz0D2eYs6kgahE4u2bm7ChRbznLBXGT5uRL+nebn4saEEwwZA6cnm/8/KuqogfvPpd0uZXG7+7JvEmyJ1exWQJ8z9me094NnwvqgeeYs5acSK7PcwHBEvXyxM0Teu9jN4iI6G9+3gvdca+9GoPeLmjlGtru57+4c13jjTI2HteyAcFcO7Pb/SDmrNtUsMDZmEXN9TCkTzqzW2NST1GCd5Lh013jNWc1BqPG5vonv/Re+r1Hrrvv2KWNFLBDAwF8erjo8quugDnb96uarIG7Z9GvWovpaGGY4fG1bUuP3zihN73/SfqN9z1BV250LPjpQOas9puM5K1ZyrtrrIAviyauJwn68GfgBqssyquqilm+CijK1hK6n4buwdLwWMnYE4OO/m++d05T2+CXdewIIUlZAw/8j5R3w9rIs/pKCTRgu7E2UoaYpjmrBgTj4LsGOGvN373WafybBOIjbWfjb3cswcrEgFyYh/eoUosbgcmoIVqJc2SeYVniY0nQkfw7EMqAACi3QJZ5WE4rabkR5eUQ9HIHgGQCUEcbwpwt0pxNTBsWwB5GiRrrXLSAOUvxe5jWNQ2fyW4UEIyfQxtsZFnmNsac54q2AafXXQp0xnvS2qnWJ8o4IJXoE3LzWsw+x+CWxmvL/ekINjHrSOveYmCnZDbw+cu+5rTZGTh7iywCZ4fKGhg7uSWLsB2NOZsBh29FQDA5+PvIqeG9M8PoOT3b7OBk4dLIBbJJgW3LaM5KJm7btln37R/9a59Gv/oNn0uf+tw73bEce0kzDtBVAhi84sFOd5ZZYYOYs8ZzOFY1Z8Pyr+rKvlXNWWUxwMdSzF3HUjMWTPxstWBgRGld26MlZA0amFwje9yDwMrGhNCuflav5/zwUwdqHiUBwRYG63FdmrOrMWeHBQSTwPaRqjmrMxod8D1dz/CLGys3NsSeXUXWgOtEtlfsc3PyAFY/nevzrMCEaC743WQUjMssLYPsPFd2w7tjGfv8j+/A2V9/7+NBHZUGBPOas3Z/MIQ5m5MwclIU0JecMWdPj0n91UhzViwYiTqw4iTBnNXW33JRZEUFt6JKd2mEnwhkWMxZqdGK0b5lFrZuZhmIi+XEeuT+JtScHQbO+sW8ziRCS/XLGjNOi3oegaTACEWtWjZ+1Ue1d8PWtETlPYaas/5cnTnrbRnmLJbDSTr0qWrMYXm5D0Kc8rzgaw1Zg36skCCV1V/zbWpBpbAOdPDSLGZwjmzfKjgL86khsgacdkozNnj+yu/ab13a+fNRn7QrR3jcSjNgVovNHAnUaabdb2oqiozrAJSufN03bRv0fZi/mbYoOxfLmqsEOqsqcza2JENUvKZ5zdk0czbWnE2nJa91f0N/xRa5/GO5E8xZZJ92m0183C4bsqE5NwkgRpsmxhotZs76cslj8T1WUVlwA45Ibrxr7TrepJNmM2d5vj12c80ugH33+0K8t2waAO3uyb27/B02PE4nNnsGzt4qk2DspeKAYF2DsyYLjr2YABSRTcSas6XM2dQid13mWUnhW6iJ87dt6xhGDCARed1Zz87Te81xSt9zFeZs35kiUGRNoPenY3rGpT1xbDhTeYgO4isevBx8HxIQzAqSgKCkBUzNEuybErvVmrMl0XuPM6A+g2k55qwmXbKMrAGmM4K2IV3z0TyA6GUNiIg+fDXNnFUDghmgqaZduYqtojk7VNZgIpizkmlMBB4K4h0+OonPXcVGdeXa1PVNgbOFetaa8QRMLkaxPeQCa3EgMvneZWUNCgKCybbOdm7HZs5a3h3L2EufcZHuv7hLh7MFvfH9T7rjxQHBCmQNvORMvs1Zchxsmnu76xfPmLO3vUkmlnTzlKAgXzNP9Nc442BQhDf+MW02BqpwAabNWpyLMmiZIsCjac42bvOgcufxnZSyulIMTM0WTRtcw2Vx4CzpoEKq2+M8Z+AGa9l4VJtAs9QUJurqSI7HqEdLFMpfWGxqLqfMO3iuoliW5qw2amN+OVdbIgW8Cxi8vj0Q6Zu4sn2UeEohsKI9A54jSOai1V9LkDxgzkIdaM0hB4QR9XWUAEXZcFNdezbWvI3TSgWXQuZ0WLY0CBq/l3h++HydV05mXugDZ/l6j2RQqvj8XNm6tOy5KP/S6WOG6SMJRdYVbjppNpQ5q7HL0XQwzG5nKR1XzXJkiu55dH/nNGdlnYTM2bh8KX3coCqqcO40HlXuxjrPDL09h2l3nyhzEgd91MenyBuk/7z/4i4REd3bf1rgstzE4Hx4Hiu1v3Feq7UJLI0JzqpHPTi7Px25Ofd0XPtNV6Mu+KtexeH4VBHKGpxOdPYMnL1FJsHYocxZi7nnFmEpWYOxX3x55mw6fwYotyFroDFziDzwg5Oaw9nCdXZ37E1ccJyrBwzOtsG10qaJ+lyOORtO5nCxOiTS+d5kmYBg5azUO89N6SX3X3DfLaBQs6kxYdUDghlgypI6ox5Q3CQ4a9djCtBkS+mvEhG9uK/3lzzjgvp7SlcXgb5SF/aFAYJZcgNEIZuQiOjZjjm7BDirBMkjKg9gV2qrSF7kdIKjvMQ74PtdlDXQQbOUrMGytmlw1ulmryBrIMeO+TLM2YH9SSoYGZts62z7Cc3ZdQUEI+omoZ/3knuIiOiX3/2oO17KnJ0a8hloOTY/msV0ZvPvLTAtzpizp8akiz+2YWQEhYFt0huruJDi9OVYgcCLD+6RBptcoC04Bxdd+G46cLYN8+iAUZ2ZVOLqy6VPGTLciPzckfulTmc1DwZqvy0WetmlWRuLyJhzz1ZjzjrGZvfZBr/pgD2XUy7gNVDUXxfqgabAJjyUAwO7v21giO8hpTkrm0PJppMH2QzNWcMT0Nrgl7IGqFUcstzLgDRpqNvMpm1S5JizFhMzxYSX7Lg0c1a5P1FyXCLy3xLURra4Wl6Rd0txAMEizVmVOZsHEiVzligElKUnQGozo8szLA9fZ21EBQHBCjVnU5tVFuPRsk5X164n1ADGv9W0Eu7/vj3YZdU2EIm654P9K75DqfEFDTfGOG/3PjQ+H7SYbRvey+e95F76N3/jM+lbX/nxUQLBu4TlqCt3byFQ7M9BrELTlg6Zs9HPRGQzZ4+AyMJz7smoCsYmWX6ijKxBFZalqvzBDSogbtTOwNlbZFLWoJw5m14ElQCKqIXIzNnL53eS+e5mdOjWaW4yIxa+WkRoBiNGdUX7U++WGjNnjYlrggnJTK9hzNkqyBef0xC26DKyBt5NvCyfz3j+Xe7vIbIGVhA1DAjm3YmFrMEK7tFEBO5zm+txU2xrB0LM7QkCyjto9qnPvZPe9K1fQK/6c5+g/m6B30RS1qCQOQsgbxAQzNiYaNvWaagymMPgbE5zNsWclcwFr125OsBFZLsAldjxPL+phcYBrOYFzFn5Dvhz1zf88qbU9eNZ5szlLCVbkbMdg4mJ7TInDzCxgsplNWfzrNJDo58/x5qzxwpz1thAXNY+/yX3ERHRL//+Y9S2Lc0WjQPxSzVnUwDCMsxZU9bAaXKDrEGBNuOZ3R4mmVXIrOzWNH1/3YbXpKQ88EhL3RgiJXBwbOAsc2AMwyQIBPKyeDZvgvbmZA2E1iS1obsjmtXtRCBQZoiSsgWHPaOX+yWTOZtYzbuFeQEri8ieb6iyBk0bARlS3xBBHv8b0Ts+/DR96Q/8Ov3XP3zClUu2iVRREWDJas6C1rA19qSAs9Blm4J8Fso8QYL1qbkYFLLPOwapiTzZpITV2p3XfXq2II6T8K5q4GdmE6E/KWboKeUeAUCoPRtrY1JzsZblM1msxt/uWOL5ogYoUbxJIzcjZJoVgDn+fquicnVliY+5jY7ExkMtngcysDvNWT4vLIsFUkoXe07blHBBtqhyjq4dbLezlC6wZniPmjUtAu5pqQj5mgagL7eHBHM2fA7heQFztq4DQLBVrpHmNyb67xRK9OA5bKgRjta6tk308gcvO3KGxQqWjGApDyh1j7Gv1d5zrFbrvbK2D5wG96hyc83paOQlHpq4zETobWPPP8J5ApfidDJn10fdObNBFoGzxcxZHRhjOyoAFHHB6sDZnOZsZsG2TnOyBnKi5BahoMvXg7AXdsdUVRXdsT+hh586dMdzGqcpsBuZoKU2cQyiNsgfB9wS24NgNG3bJjt9tqGux5/x/Mv0L97wASIaFhDM0uHS6stmzi4HyG1FczahY5l7/4jKWJjshqJZSmoDgyotw5zFRRS/X1I+4XjeuMGXwcZn9rIG14/n9PThLOqvuC3sJDRn5f2sOyCYBQKXmJeiKCuLY86y5mx/PYKzTqfb0pxdk6wBEYCzG2bOTpd4by0mJjOXJqMq279Zsga5Ps8KyoZmyRrs79jeC/PEBs4y9ideeBdNxzV96MlD+sMrN+jyOb9ZmuubSwKC+b453773nAyFJWuQYs6ezonwHyWTC8kwyBDo4EWbaT3oqTJnIf22pScOZnQ0a6iqiL7nL3wKHc0XwZjhXXTT74+mf8r4lGS080a2kzVwwbgUN+XeckGN/P2lyykDfh0IWQPLHTc1JfSsqjZ7LpHtqSOZ0UQd4CvHSccs7b9rsgVN09JX/4s302PXj+E6zT0d0hW/IZBdV7iwVgrvgAx7A29UVbSA4EpBOarwPLy/mZJhFBCsoF/jX+pK36yzmLOWSQkJW9ZAASkKstCYsxrggcxZDQi0Nia9G338m2dJ8/foRdP+9Mei9ELQiUhpv2KTwzLUpsVNAVkWC2y0mLN/48feQq/7vSv04N3n6Pv+4qfQJzzzUlBOCXVWFGo4e8ZsWBbrdiTQp8nXoOFhdeNNua9kvzXgXCKbmc0Wa86mzw2/x79Z7v5Y3qaN5X5w7jSCPg9lF1K3KpmzVUVU8UaRsYFjkZHcGJ4IqGdJy9RV5d7NOeATAXMWwVmxubcQ/cFQzVl+D0dV5eaa03ENQSWbqPx4D2q/4N4JqNvMe3K72xlz9hYZTlT3JqNid9psQDCnk5pnzh7NUHM2I2sw1tlPm7CZsQjQJkrXOKJ17/rJ9Xr1sLsv545rLKInCbbdUYYBqZncaUfX7RKAlY2BgqYt1xZ1gEFheV/+4LLMWZ0lFTJndcAgF6AtZxhBdlOWAvTd+5fIf6h+qbRx4h1fhjnL7aKuwokJ59O2YX1iHtyP7E/HdFevS62xZ1PM2YnxzFbRMdVsbLArS2yorIGUl9ECMXrmrABnnebSGmUN+v5vY+DsCkC6tbHnwJ4C9qkpa5DpT4r0WA1ZA2bO3lQ0Z60xalnbn46dJ8Mvvfsxt7l4fmeczaPkHoe075ysgQfVUSIlDxCf2e1hOc1ZqYPH16RY6rhIbMlLGtx3YZf+/MueTV/5igeC81XNWWV6hIyp7nzPnJV93WHEnGUwrgU2WZhJKdBSojkbkLT6v3k8tEAFS1YBy+ZdT9OFwHd7ogCyRCETKwJnHdjQAyH98Qp+W7StkwzD62QfroFmbKEEhN+Y0xhOuJFQJGsgf1PKxM9Bm0NamrMpjwAEwzSWmW+7ZhKiDN2nZIASxcH7pJVkUZHGQI3PY08kizlrrak++dmX6K5zU/rsF91jlsHaLJEgZWSJcnsmYwhqO+1p4xE6939m3hJF/UWJrIFWh21L9IvvepROFg39/qPX6T+/4xH4LQaS+DuSUJAN2J/hyknUtU3cSIs0avvjJbIGKVZi/qCeRhecyT7fal9sbet7BikfI01uKAYa2f1nKiAYET7z8Bj2r6O6DkY8GXxOM9+fe0BUttkI2DaYswRtR8tD/h1oOStjPB4jsjVnfd/k8zRlDfTD7hmN6irUnO1/53uNmLOKFJK7JwrrCcesU4rNnoGzt8p2JyM3cbujUNKAqFzWIMWQ4U6mackzZwsDgm1T1kAO/prrpNPl610/nayB0JzNMWdVWYMlmLM8EeD0HONs4CJ+H/IslTbIBT+Tdhl0Z0uZ2136ehsMNWcZMJAR2rvnsaqswTKu66WGjD5pFkiENtRFXtrUbRjYUhuYT86cC7aoc1xI4LPkPmRcV8F78yynOxu6qxKlwVmL7byKjqlmfD/Lac4O24iRDGqnozT111uszUMFyF3VPHN2M7IGxyvIGuyZsgZ9Oyvor6xNyWxAsBLNWeN5JJmzCRfvZe3zX9zrzv7eY6A3mwfwdyZ6O0Mr8ahhy8saxP3Jmebs6THpNhiBs/1jDcHZzIYEvAZt68eIZ9+5F59LftEZBgDSgK2YPchrs5vHEpxtuoV8f6rTnG3DyOhBOSxwNvqefs+lrAHbBDZANQCiKIAMBG1JGY5dgVuquriOmbNYX3wOUfesRtAm5LyorqpIgiwERcNyhrIGAFAoXQe6aFvz2gA8EE0zYM6K+9PmV7I7T60PZBmJYnmHMO2yscKDyJy+r6scSFjEnFWYzhqr0s+1dU1Qi4n5/HvO01v+7hfS//g5L1DKFwLkCeKsCgDGciMx0CY3dKygStLw3XD9hVIU6zlqxxdNCCZiGUK2JfaDGPi4iTRkkeF7NFvQZ/2jX6Ive81/ddfjhgYR0We94G66sDOmT3nOHXq54Z1R52LKoRKt7NLz502T1JFFr4NO4sA+N9acxXQ8Y9OXK07DM47Dd21HMGeRmWkywZV0HYBYVRFIOpw5q+chyyKZs1wHMxhbAmC39hItuPGmAZ62vIZ+HGV6nnGp8yC9/+Kul1MC8BpNA83l/S38g8jKf9zudgbO3kLjIGDDgLEQFJDGC7TdlOYsdDLc8d+ZlTXIL3LXZXPYWUGbKtp6zJ64sMN12d3H032k69ziPRVgbRnmLANNnN5QwJRtPKrdBPugsM6XAT7/3p99KX3lK55Ln/Nie5db2o7CYJ4tGjfAIHN2tggXAau6snugb4Oas3O7HnPvX9O0awCgbXYuAlyW27E0z1AM2yAGB0Pg1HK7f1YvbfDhqzFz9jjxXHGSj5bTCx1qqNM11IYETCKKA9MdKpqeVtR7F4Bqur7hl0G8GxuTNeg3uZYA0ncN7V1ucyV9gaX9l+tfdwZozu5PdebsybyJ8l24DY81grO97uxbHnrKMQ8vZIKBEcEmQKI/GMacTW/EaptXZ5qzp8cksyoAZ8kzU3Gh27at67+1No8LqZZa134tcLaYOSs+URvvhgBnj04WQsKndte2htu77eorwMbMa94oYCcRyhoYzNlEuhHTKl2EYOzCTdIQvPRggCwPgj5EFABUKGsgxwBc7DsTYAAaanpiADqNOesZZTE7V0s/cvNVWMOcpuZhY8saJMBZcIFPSRfwb3/hZc8mIqLPftHd6nnyOSBrPOeSXeKdVylbDRqDGzfVtRlVaty2ysFHpY4qlk2eG6Ybfg/6D5d2uKEzgjafSs+zGENWa/epZFRgso1hMwr7tLAcOnM2LGfbEr3zI0/T4zdO6G0PP+2ulyzM//5PPp9+5+9/Mb30mRfVMkpt1eh35ZoU2Kr9lOrnJIAtrWlbt3GTlTVIMWfFpl1XLm0s68cmwbCVOABuBshnpJkM7lVRzJyNmeHxWIznJwMgGmMr9iMLJyFQBSD9qPJjNM7ztOB6yzNnib7xT72E/vlf/3T6U59wnyLjE94b30+qjbbQ9vE9OY12pjl7C+3S3oQeu368JGtRb3HHjjmblzVgOzcdZVlcDNTMm869bV2uyJp5VpIua4C72Oz+KZmzLGtwklm8p8C2EokIaRJEOF7BjX9vOqKTw8YFl8jZMpIBn/XCu+mzXqhPEi3TXL0Q/NgZj4KJ9sm8ccxrF1hoaZd/e6K1LvOMPttF32JS4PGdJZmRTnNWATpCWYNS5qzO8sNFNgKnDB7uCrAqFRRslmDOekbrMNbjUJtAAIuhdlwQSBFtLNjNHnAFWYMMc3atsgY7HBDs9Mga+MBS+dWOpcOc84woAS4PDVkDfD4HJwu6tOfzmA2QZCi15961Ty+89zz9wWM36D++7aNElA8GRlQo3bAEc9aSTWGgPggIdsacPTUWRDSmmFnpmYzhwjYVcBTf4JA5u6+WgReHIbCmlTUEWjrWX/ebBGcPZ4tgEes1Z+3Fv/n6SqwxC87qi8CpK4O+iE2BabUDRDNldXmh18aIiLq5MY7zyCKU47HXOqX+0zcUBAnk8x/VMShZmV9CgAVlKrT6A1KqOYfXADYtaxl4TANn5fVuPp/oWxFoTo0HXEf/8Es/kT73xffQn/w4nRBhPQcJghe7oMtzqvhEzeUddU+R6cr3u4zXiJRsiEDixLPUzkcw19VHy3n05UxsoOIvHmxrgZlYRWWxUtOehyQkBCw+lDUIyuTbEbr8e5mCvpwUjsHzRUPjUa0C36O6MgFVfPalmrOpJ68B/V0aeiec15z1f7etLU9BBHqmvTbqIhjDYtKX1oQ9CAjlp3BtMFu0AbBawpzVZGr4bO/NEl5jxdGwPEEsoD18TyhizlbifAfWLkRASdGHEi2hOcvga13Rpf0Jfd5L7g3Ka4Kz7G2TANSb4J3y78lptDPm7C00BhLXK2uQX4RVVRWAKHdmJA269HzHtGn2rBZwhCgta3BBaM4+fciyBmXMWY2lePNYZ1SlTD6f2Qpg5L4LCjZM1mCdbC7NNIASWXE74zqYwCM4tSyTmE0yFjdhKUA/9/4hCLSs5izXncYOPoK6LNYitmQNYNDFhYrflAjPZ+bsw5rmbGLhPjJA03VrzrrAY0uAs9Y9WzYRgPORIoFigWYO/F6rrAFrzm5G1uDEMS+XB2fluJEDVtGWlTXYHeDyLwOCTce1e84HYoNs3QHB2D6/n6j+3+9+lIi8lnrKSoKeeWZ4AXM2IwXBQfBwnHEeKE2biN57ZreDSQ1DqcEnF5F8DferGgAlF0xZ5iwnkQFjJHUWWX/sJcBjzuFsESzc3X0BE04W3dJhTC16NbOYsU7WgPRFbIpp6WQNgN2UMgQPkEWrac42TYmsgS9HwJwVfW1VVdF91AEAEv6GQHVV6TqGbAjiWfPalIakGjCqT7NIc9YIRBmWkVwZ08+z+21vOqI/+8nPNPt2Pu8/ve2j9Of+91+n9z9+s78XHfhCK2LOVjF3VmfO+j5dAoT4+xCrBAATv2fwtwIBppmCIUDTGCCPlR6C4hL8kvqjmmmPJmbOAlgI9yA3GBCoagDM6j7769s2eCe4jeJ7i2aDyv5vrf3qTNh8v4Vm9bNERItFXnMWN+lSQC6/prIv667l8qUHHW53teg7cO67aNoA/LNkOtAkI76u/DNZuH5Ofy8jcFaU1Zc9zk/+XVEVpYttjvPlcR7He89GDecGmuVkDWSbiOpC1GVK1sCXxZ+rlfU02Rk4ewvt0gZkDY4U91rNdqGjyenNdun58zcdFIwX4HLw15iz10VAMAa6rwlw1o5ka++MP95HpL3r/E70m2X8fBjMWMXFncGCoZqzy7rTlxpPWLHOjkBbt6674A0M/iE4tSpb0tpJXKfNE6BRSgaDyAMkdbW8HqVnCcZ5BLIG87RWE5sla1BVFWkavlaAJGZBabIGKc1ZzmMosDbUUKdrqA1lzuIGxaJp3f1jnVlSMAdG/a5iXnN208zZ4W3aYmKm3KSl5WQNpmM9jZ2CQJYpDWBmz/JGncvX2PBY1Ric5T7zYsHcgMfmE6M/aKB9loDrOX35uTKm4XufAjLO7NabW8D0j0wuvniYkJqzPuCotqD11rZEj13r5k739Zpy0rysgQ3idfkK5iwsIjlQ313nu/nr0YlgzvICnTxzNqVZmTqeG8obwzUXA4Jp72aJrIHUnLQskDUINGdjoBZ1HOVvcUAwwZwVfchIAWctkKBLF5iztZep0Bb5CJJZ8wQJoljlcIAN6Zq7eA7bFDYFc9qKVZUey1LAbVDm/rRfeOcj9PYPP02vf88VIgolILrz0u+hmT7ZwAcazrU1r+tl5gIegJFH+m/I9lOSl4c0DV7POO4+U/PwSvm7Y86GAJEMqKSmpTFnIzd7/NsDcrJfQg9BGVAOmeb4TvAcR0oysJUEP9TaqHpdQb8VHrPP78D/FHMWwdm0mzqn44LACWkeovAdTTNn8ZmHkiLzpgXwL5SosCzamIDzPZs0vMatz4qZs3F+0d/gfcLpyr5lVFX04vsv0MXdMT3jDj+GYx/KZi23rMeEAcHQssxZbv9acxTAd9fHhePnabMzcPYWmmfO5sFRtnUEBCMKGTQ5vVmirqFvS3d2YQRk0tzpGYRlcMLJGhQHBNPB7qPZwrkI3zMInA0ZXqsAUI45O1BzdpOSE0Q6UMLMWVwgaC7FJ/PVAOStaM4mAP285rMH+UpYDJqNE++4fPdK2LOp4EWau7ipOXunrTmbAn8s0DQHrA01XoRawLm1IGvbdnBAsLED6ZuAsbhXwJw9MjROVzEna7AhcPZkhX6MNwJjWQN900Az673LyhoAc9ZaAKTA8nPOe8Fgzi65AWPZyx64041lRIUBwSDAp+aqi2BpCVvbgelG36J5aEwUBs+Z3Z7WAihAJDVnPVsH37WWvJb6RGXOUnAu94n7Rnvzsga5snafrll3/opE5JmzDM4eznTN2W7Y8eCuVo7ofqLv6YJqYCdRGBBMWySWsvq6c5NFCGUNguA1MRixUMZCufDGQFReLzGel9e1vvHr/hZ1hwALymik1tB1VSXAWcg3Ab4js1LrJ7tyh99RX9fy1kIQO6k5WzgflG3CB+2J31VpJVl0UhKibErV4lxbsu3x9yEm2Wyp8qZAGDbsinw7Cjd0UuUMmLfMSCWKNnMwn0HMWTEWahqoMXO2grpv47oXdcjGfa6lR2p1Yblnql2WevT6+fYFec3ZUOIjzZwNn7mmjZrbEOR6S71r80XjwXxqyZLpQHPM2cbnE4OKYQrosYDmNg+iPBCQhXsS5/j4HI07N2CR10Q/+d9/Bv36N3++W1sE5SlizqqHg4BggfHYZADVnjmrPbMwT5gmnMkanNlw+9Tn3kFERH/MiKKoWU5z9shFik8vwnYGMmeJ8oFC1mWW+xwyhNgcc3YvJ2ugd5vehTyszydvnvRlqIp0/9i8e2eX70mCbZIzBgtKmbOrAChDTGMwHynMQx+Mx5d/VVd2vm6TzFm+Lw008oxJizm7mqYuEbTJDHMW80uZJWtA5BfagayBoVvN4OyTN08isCqlJWzt/jLzet2yBtbC66/+szfRF37fr0b91xwmh8XMWWAc4/uJ/ap3NxeyBgb4vYptS9ZgmXZtMTF9YKlyWQMJ/OX6vBxwieXSnsf+TsycRZbcupmzk1EdaBEWMWcBiNH6g6FSKxxM1Bp35sr4jMBQSp/xzG69eZZP94njXEugS4rM2SYtm4SLyrbNj4Och8Xucfkyi1NhzrLm7F3nus3zedMGcw0uZwC2iDwswGwwc9ZgxvL9W6BCiRusOzcDEOOcP2DOagFdFFkD6XaLC11clJfIGoRgQFhOdFOuKAYofv7tH6Uv+N5foXd/9FrAhLI28ZLMWfjOm15Xrh/Tr/z+lWxaRKJfMzadsJ6SLM3CJYBMAmUtLPDFHSvgzkoghtOWNgH2pkZ0Xc4zLAR3Us+r5F4ku7FLu/uuaYzGpdGubxVmYhoUx+vR5DpdB2erCEgLWcthXTmGO4V99LFjzobnsVnVEMoapDfe/LFUO49/S8lxIPivGT4Pa5OLbSGeeaBX23/mNGerKv5N3tN8IZizRp2jaQEeJVtUXm6taVx+yX5XR2dxDEXmLP/G36fjmi7uTtR3rExzVj8upSdkeXNeLrrWtqhHOpM1OLMV7Ks+83n0u3//i+mVn/SM4muswChsRwkXTTT8vRSc3TMCu6zbLHdXNSDYkc6cdeBsBgDixbWMMv34DZY0mA5iQE7AJb1t25UAqL3epbZUczbldrhO8wxmmBgomp0aOOXqY0nw0umKJtzMVrUU2zmrOTuQgamZkwHIaM4ShVq/llmyBkRxYCsi28374u7EMflkUDDPiI77nZHBaF235qwFAhN1A/Sv/8Hj9P7Hb9JDTxwEvwXB7Ao1Zx27uWkdw3BnXAeTJWszi4FtqXG6ivFzkUFy1mXrCAgmgcOUfIi0sbJh0bZttlz4HlobGVowN7Z9hTmL7+Um9L0//8X3ur9LNGcDfW+lP+A+Y1Tb7DO03WntrtP6WE1vt6oqL+lzxpy9rU0yq0bwHNsWx1hgzrZt8n0NmbP5zRyNOau9Sdz6Ai25/pgDZ8/7+esBbKKgm77lBmoyZ+XhAnBWAw34ncCI42gpNuVQgBj7Oqz3AIwA0CcCZwWggQAqgghFsgaV9aVnzsI9yYBgv/DOR+gPr9ykX3/v4wGAhRthZsT1RB09ePc5+m8+9VnUtET/w4+9RT0n0pyFPOUawd+PB1ZKAoLlTJZhDsBNyOZTQIqCLJCtnCobztu8fqv//TmX9WB/KXNAPLMHI83MYeCzpilMrv12n8VyEnx56xMpAerC8oTfpbeYqjlL8X2HrOUwXz5TsvV5ftMYfZ1VbuwDdcBdAVsTVZqSCtCsaSmQo5HWgZ9tf24meJjbOPZ9v0+nB24zG4IOBKzjtsgYyCuefzkYX8o0ZyUQ6586HkPTmKp4L9EwZWxUSbaw9EDl6zQAFIvkAoJBnhZYbj0lS9ZA3otsM3y+vlnAZXHIbhIoPw12Bs7eYhuiN0tka++xcQe9mwGHVmPObnbxNRcdLNsUWJPcmUnN2Zg52wbXSvOBfcJ7euJGx5y9e4CkAVHsBrUKm3XfMWfLAJdV9G2HmAZQeuasBs7GAcGWLSO2iU2RZ52movIOsQt+VtagEOTTzOsgxzcowZdBsgYKkDRSAqylmJ3P6nVnH75qgLMJ5qxcDK5bc3aU0Jzt9Hm7v6/0WtLuN6jT0nbpNmHmjRngy2bOxvq0q5pnzm4KnF2+b9kd6yD1kACGU2VTErXwrHKFWun6RkZac7Y7dhM2yELX6fVPAD/3xfe4yWaJ10ZdV+7+U8zZ0g0jroe21YFWJ0ch6nya6LfO7PYxCbRgG140baSNR9QttEp1p5vWz3usNqczZ+Pz/OLaL0Z50cWb1nfsTd29MGCLAEdLoRYdWunrm1vota3OIAplDeLfk0yrhFSAZiE46/syBCP47w4Q0csSac5W3u190cTM2bqqFJBZBwm6vNtgg4B/l4G6Fm0bAFgTQyvSAiG47Pj3P/rzn0TPv+ec6XKrAQLaZgWaL2O1Fs1Z+dwXLGtQV+Z9s5XhETGsm9OcxfP++V//dPp/vezZ9HWf+4KSzEQ+3acFZoXPS0Vn1fS6n0Igiz+TY7TSdoKAYBQDQiUAHFtKczaQdgjuI6x7KWuAjECc6vI6SzJtfdn0MldKHVi/p85L/ZbrP1PeNk0TBgRL69N2nypz1rFN0+XygHzc37zp276AXv8Nn0cP3HXOp0sUAeiacb4Y8ErqbcurvfyAzpyVF1jPUrZfvh/Uv8VrrM0vDSy2tbjVw6asgdzXsoL/6czZMM8Kzk+B+beznYGzp8yysgaGS7I0nMiVaM5impuWNZhbi78A+OzukzVnmTl2qQ8Idjxv6Gi2yIKjVn165uwwcFa6Qc0yi5SUedbW7SlrEGjOOsaoorkJYP6qOqPI8tmE7mzTeD2ypQKCDQwspdnU2DAg0mQNypmzmsuStjnBYKXGJOTo2w/1EYR9ORLgrHE/6454P0lozmKfxe82myv7qE66XwV5gXyJ5Rbv9E5Ff3mUYGoua+c3HBBsNVmD7hrpceHes4Koz5qsAfbZlrdA1btnESWYswmw/Bx7LwAjGfNNMaWWtbvO79DLn3eZiHwQvpxZGwFEnjlbojdL5MF0IqKjEw2c1WVfJs6zZbPzgzNbzaQL5kiAszzsIbDQtK0pN0UkmLMtapBbmrNcBkgjUdaAOStOnI5r9+7e7N9TZNiGzNnwYgswi0A+9SxvGhOVKARntTViGuhJf5c2VTbGifSFdtO20SamZ5tR8FkB+Nq0bTSXrSvqA3v5YyGZVYCNsKmGLraSsYsu3VTpgc2IBMONQgsACqpoZ/z/Z+/P43ZLyvJQ+F7rGd5pT7337r17bnpuuulugaaZaUAmSVBENBEnNDnxKJg4I/LLkRiFSL5j9JzkI+fLgCTnaPxOoolfYjhijGhEIioooEJQZmmGnvb0Ds+wvj/Wc1fdddd9V9Uanund6/r99n7Xs4ZatdaqVavqqquuuwe3nTkCGqTvf2xGgGT/IKadqOTiSYyq2BoknENSzkp5k3xPMwB4wZ1n4B9+/X0mWGYVcALVI2eVZbMukG9D8s9+mzojaGvgp12QQQE81FG2qqkJz457ztIBL0IAu/nIXNUyeVfKv3ZvSTlr887rsHhdJxHZVVvnIjkbqbw0PgPAVdqn2hoYv/HC/YYBxH2bzXeR1R0ApQjihlNlm4xO8eflRYKxEpjYdwlPYYNgucfQepeCDghRSDYdeC6aD8yL8bPO8Rg3r3Qd3Y/KYnXlbAFfOLdnLCLN/kY56+7v2xgA+52J68s86vXKmnKzHTm7bhgIxBjFbuKUWdfWIE29i1PW525rEAkIBmA/RNxz9uhG31S+j++OrNpD6bxr09S/jMrZRFUxgn7cxpPCqIjq2RpUI2fb9vDUgOQhneZlFNvU1mDgEwYHDfNIiRyNIG2C2JRl/OhrDfVWbA0CAzB8YCRFxT4xZLNwPT33Iw0ARAnqX8NdVx8DAIAPfOYxZ31IVWXsBtj1tB3ALuQ5S98hTzlbIZI9wlhPTApiJeMer03nvzRq39bgKLE14MED2kCTgZ+NFpSz5rtHVJn0HQzlC2eRaBYgIbLceM6S8jN2ztvOwALHz/71J8M//eanwrNuOZW0Pw18xlFVOTvoWbUYt1EBsO8XJ+pxYPKgU86uNLgSi5JeRVGYDqFLzlLbJIGcpR2rIu45a1RgSmeSnpfmGTKJYLXv7sVZ+7eXUc85G0BF6/B515O4n81nIXYCQ56zmXAtoXPG8uAOjNv77kQnd2wN5PPxgEo5yaeonM2xHPlEGV8GcAmqPMuIncLsvLN8jSeuctaNsq4sB+0Vyj8hMYrsvYr1mtbWsu9TSKVZ19aAEjduGvWItIxLNZW82UCuhTegUxecjPJtCuRls479lm4H96lO9QG2ynGf5Amps938udt4m9dRHIL/fuE5Rc9ZnNZN0qJ2APid15SCWrada5PIWeG44D0QqvxY0df4DAC0hME6KayE5FPmHTLc5IXWF3peRVKSgD6HlAB3dGAMf9s08Jzye+krsOXzpcwooLYGtm7J2F97LC3T/Br4MsXeaApPf8t/gaf8/Xc76lpNORv75mKeQ8pZ596S93kd0ZGzawYMRKNVZhdmnls7kVFN19YgTR26taiAYBO3gkU4EaFnDSXuOZtlmVHROuSs5jmr3M+HZ+q600erKWd7REFwMJkSUqN6owaVs6lkeBWyowlkWwNJOesTBk19RmmZ0AL8NAElKaWp0jFbgyYKQ0TI19bznE1QzmI6UgPcqk3jnrMAAE+bKfp+/5OPOutD01h7QtCxomhm+SGBdiY46Dv0JU85i0EU0/NBlbPa/dpQSMHdg3nYGtj6/kKiDUoVpE5plkDtcGgjTZshIUF6J+hyqAO2oZDkiN2AUnwHB8iIcnZMOgBV/Mir4Krjm/CyJ12VnL40SwFRVTmbZZkhtKWgYKpyVgna1mG1wD0J6WOcFIVD4CEcf+dIB348nZpjNbsR29GS0zDnBSRabF75fr08N2Ub2795TpRN4KrUpHxwxDqOXj4V0gCvvwB/e8hvtsyD+zuWB81zlr6n+Dgo4WHOh9vY60sVodPC/waIPoW0Q88uZMzJWSTVDAEzU84WLjFFy5IW1IffIolYOBEkZ/11G0YQI7c36fsUImBjz5vnE2GUdpnr7SsrZ1PSFxR6wmvq+p7awZEmoAMmUnoxhar/PfSfr1Xb43dab19IHrfuQEvmnTd0j/m2EXvHKJlK7wHnmEXVckZ2mB1P32Fsx9JZBqG8IeLK2TTCluY/dA4JIXKWznwo/V31dCaMnKVVrqSclfJ1ZDYgf5T4/Uv3gCq1UwYvvIGJzO6vKmeFbzGA+z2UzsHz4q73feWt56x7Xn6OXubf15Tg3DQWBn9GNo/yd4XnQ7zF5t21+9jns57sbEfOrhlQtaCpBnFaF1YwGiiJlq6cXQw5a5R+7KNKp6geTKYwnkyNIo4GTkHf2ccujaJeiUOl4fXwTIp/qqJytgyMYomEJr6aGBBMi5rNsSjPWfsMaMNAUM72fVKkqc8o98drG9T7KBgQTCF66qgw/XPMGmYSOcttDaooZ4VGqrUcsPdyLzDN+ytuOAG9PIPPPbYLf0l8Z0MBwQYCaUrP11Z57ZPOBMduSDlbw4rCloPC3q8hJ2dlUlCzQWiCjX7P3Md5WBs0GXSgdQK9F2aGRIKiaCA8W+pfHSIxQ1P+AcIeyzh1kypnNXJymZCCZSKqKmcByLdeUs4qA2yS3U2H1cOUEF4AbqdoMpVJpKLQvYYB3A45LYNafSF6zop5ZXnOMr8Dm2WerUEvo7YG7tRzCtWH0fsdftf1gGC5uj1GWMQ6qxx0cLGfZ6LSiJIBPAgPn0JLA4JRJRp//vizHyEOEbQdkOUhW4MpUE6Qig5cVRtdrxNSuBjq74SUs6rnLJnyH7K5kRSF4n4sC2Nja8AJcOHYBPZUUmxL309sLx6MpyrhVxXc1iDsESwRhS40dSAl8ULNS7d82LxxJWQsX1IeAPz4B5RMpe+Xq/DOHKEBv/dW4e5OKTe2BornrFY26PVIgwtSHdm652yirUHcc5YpZwUyvB+oLwAA/uHX3wdve/W9cAMJeCcPhFh2lgfZlMDrufI9dPOtKdq1vm5SgDyWbunz7aabmWNmZUwhsG1+bcopylRqbSCR5H5+/XtuAuIF6oWCvlPg3u91Q0fOrhlC6pTJtDAdzZ2NmK2BffSpnrNbCwoIFlKAbpApRpSEOEKUY8dn1/P47ig6jR7XT6aukqCu5yyAG7StSQCsVfWclRqr+yHlrOQ5W1PdS4MizMNzdkQawqLSFK9dqfH3I157KTBqbuEcnq1BinJWGaksz+U/y5By9shG31gb/P6nrHo2RN5JATXosmY5UhX9gOeso5xtw9YA7SCocpY9c6xj6TMrigIuzZSt2y3aGgAQa4M5kLNN6jFajui9ODBkTwI5i+QjmTJvLWMipEXffw4USNyLnrMbflDGUNT6ZUGqaxF2VkMNclZIT/s+D8m3ucPqIiSCK4hylmJKlbPC+0Y7TLTMaGXOEsNOImJ+gO3iq1+JrQF6zpIZTDwAlZMPpTPtdQwjr85EsC0AsO9ISRD71xICJ8lj+3NlKX53KWGIy5JHLlUaY57xvKYzXxQ+cS106Ok+HmFF7kMGbtoAtjM9nhJbgyxTPWd7Anlg9wNvW0g5K93j2IwAm8f5Kmf5wIRMgsXT5x6nWt42h/QbwNSbdcHInVByIvnsPV+5zNGgXqH77pbT8m8B4NhplH/1MhbKn29rYJdpuXGqQXAHUaaMbMV9S99oXzlr39sw+YVwAgaKsyKqlTPZc1bfHyDB1oDUDSFbA7wffUPO2m2WtNYIzBJPe8JJ+Ib7r48PFJjy4noya/D7rXbmFQ/SiaDkbFEU8KefPwe//IHPmjadT2DKeeaqU5uXIrgdwH12NsimP8gQAiVnuZWCya/nOcu+80zd6xzLyeaM3Is1JWerO3p3WCq0afgA1m8LAGAnUTmbZVZpGsPGojxnAwqNYT8H2HfJ2e1hz+ko4/VQWwONAKDrR9MpbOTlfTGes0eqKWcBSCT3ybSRx6q1NUgjW5pMPa4CyYMr7Dnrq86aTPvv5/lMOT0H5WyEeKHEdFEU3ke7Dc9Z66+pK2ePbvTh/P44UTmrvwNWpUuVs2Fl51NvvAI+9LnH4fc/+Qh89X3XOEHUxIBgwugv9Q5dhOdsUDk7e2ZVyiS9b3vKtHhJOXswsSqUzTmQsw9fPIDzM6uXNtHEH3jQy6GfZzCeFg5xMzZ1cz1bAzMYFXlumvcvQnt+ALJydhx4n5YFyUIGYQYfKii1jb88GxgsCvuuc5UYDrJ0tgarjQLkzhHAzNZAWF96zup1AD0Cy2Ce6e+27WjJ5IrJa4JyNs8zYmswU87mloKiZIvW+fWux+s4hjEVyNc8o0G2qitnOaERV87a9zvPMnjgCSfhU49chLPHrcCAdvY5OdsjeS3/luvL6fTlMo2czvOlKdJ4tunh1P+QBgIDAJhMCmcggbZrtanJ/j3yt1X1nDWzEpTvB71P7XjOur/HhMyI2Rqk2A44xEUgb9j+2x1NWlTOllADggXKTXk8I3DIO8KVs1iOg7YGtOzQqfCeWpWeR03Ouz+8n+6o1ck5+HVT3+8pI7MMKciISu456ysR5Yw709YTy2hIISptamJrQAlZbYYCArsx2DaTlLMxWwME3SISgpi/aZqtgSHcJ/b5YO4myvtA+07f/nPvh9/86JfUPJa/5WuzpGu5YPpKk6mzHt8Bd0DDT/M9H/sSvPO9n4Rve9YTapCz4OTBpu0e433/cv+6eA6nzrel/NvZGnRYCLRp+ABWNdDPsyg5hMTZ8a1BUucYYPG2BlJDh3bSud8s4oSxNTiITqOnagNKUBnP2RrKWRrQCdVh9aYDV1POms5TA2IwBUOBKJE9ZwVyqkGANERsqkcTxIKqDYgSRjq/mULcYMr6QPBotenPbDxmZTxJOTvR3ycsq1SFbAKCKeQh952NTWPtC9dDj2lrerhkn4BwAoIxz9m9Gs+sT7x6tYBgWAePp4VpBO0d2Otu09YAwM4emIetQSzATwybpKOHMPVVwvMfkgEvRKpFiub9i7iUoJy9RAY+7fu0Os0nzUKjXNdAOcvql5AdSaecXQ9YosXfNpkW4jTgaVGYWSWiLyFZhd/AUF1R13O23M/dsZ9bP1Is/70sM525ohB8G1k+tGtBxMgFiXzt93JnKqvnORup96oHBHNtDf7133gA/usPPN9pk9FZOR45m9m2TZlnSyJQdSufsNQzHX5FJR0hs3A795wtlbP2udF+iqvsysT1eJxZnv29YlsXowRnSykEElXNhQbsUolNTzk7RV9ImXChSLM18LWzUt5ojJGWLGft+8CmU5u8BX4BhMlcujt931K7Gni4VF+4p0kj9AAkr1BCFuIxGVfO0oBNdjDf+oLavR1y1tgauPsjtPeQvj943oFiIUKhrW/b1oDWrZyQ5jABwVhdBkC+e4rCn0MpWmT77BxABpFCdR0+U1K2MCtYtWh1/v546hGz0gnpz1wos7gO08X2HCdvNXsE3P4XX7oIP/YrH4EPfuaxJNuAhyVbg0De6bn475CK2Z0hY7+964jV6V10SEKooYDk7M5GPziyBWA7XycreKouzNYg0AkY9m0jHMlZ6jcLYJWz53bjnrP0HHhPp9PCjPScqqGclWwNmihnU8nZJlOPq0DyFrTqLKKcFbwe27BesN6i81DOhtXHNN9Sg+KghWfQF4goBJIlJ2YdjCqes9IgjFXiE+UsBhBSOtf3P+EKAAD4s4fOwbm9kfN8pevuGV/b6n6hVSDZJyDogNIjFw9Y2Q1frwQ71bEg5Cy3NbC/8R5dmqngB72sNcUw4uhGWSbO788zIFgzcpY+B1PPNwwIFnvXQsRlURRBGw+jnN23+Q4NHi4L0iwFBH6vUwOCAdhvPSe06QAmJyJiJEaH1UDIH68olGnABakDhHqSpmUGcgLvpeR3K5Ee+Mmgyj2pE4d1Pw4M5FQ5KyjhpHzT9Dhin6jp1A+w1c8t60KnvqamGfJPlUDJ2dLWIfP9Yc0A5tQjjkxAMFTO4nnBje7NvWoxX/RULkkQILMy8ALQUQUtJZoGDgkrkweeB6Pw44pAn0fKqjQw6MBRzsYHJGLgz53aGjjK2YqBmhB5lqicHdqZkimeminAwydKeg4hlnQtcjko37dyORwQjJ7Pkjm07PPzhPLFt/E+An3nnKnw7LppLAjP1gCJqKlsa5CiStbybAdaEshZebVIAseKfszWAB8IDQ6m7guK5yz4pGBYARzejyqY7WwUPW+WiMXnTn1RFeXsrBxogjhPbarUu7bsuM83LSCYXeb1xJfP7wc9gBGirQFLK+aDLanYzb70Ww9uHZeSv1VER86uGUK2BhipNhYMDMA25E4m+s0CyB6K80Bo+hydYnRutyQhuHKW2hocRMi2MuJ2uYz7Pr47MsTfqZ3qyllqa2CUmDV8NY2twcp5zrodIQBqayB5zhJCZqx38FLRJx2MtpFqawAQCb4zqH99GskxmRYmf1jGtanaFGb6eEAVIilnpWneAABnj23C9Se3YFoAfODTjznlQHrPDJlOGqrzsOCgfnoc3Irl4Qu2sVBH7TwghPPugUx+UeUYPiejSm5ZNQtg68H52Bo0G3SQvh1VvFvtO+GXoZi9wEbgu0XfH6m87wwl5ewK2xoIgzVNlLP8vRmResLznI1M/+2wfNDOraac1TxnrdI9XI7MLJpAHYdFJ0bG4NtOCQrfczbzOps9QuKGPAHl6OQ+YsqvaQEeadnPbeAVOvU1Nc2QClQCfb81n80B8WX3AoIZQqP8TYMiUbKDk9BWbWfPn8rhlcpZ97xYxVAf3wzcQTyNPAipr+raGkg2XhSWyAsTsKljebqtAcufSFLEEYo8T2G+AQeTYJ1RBXi45jmbKctmXYCMomQOVVgGB1GF+mdaCEpIhfTi4HUnj4shBVLKWJ1WliPblvUtJWZEFGi2BvF8OnkWyDdax2tKYd2vWypf4byk2xqAV/9Q2IHzfLZ/+fu/fvSL8EefeQwAeN2h58kpiyFCEGiQr9D7j/1WSTkrD1bgMdoMSX8wSq4LOfnK86KRtzwdXr43BnmSMlUOCMavJfyb593Zl7y7eCzutZ7UbEfOrh1SbA1iwcAAbEMuNIrMsbUgWwPTwJaUs8Sc3yhnmWcuqgof2x0ZYkojA7PMKtiw8/HwxXLa87HNfq1pvLYxVzQiNbYGJdlCiYEQFkUaSAESpKAzG4LXY9OAYAC24RKaClMXMYUgJRPHEjnbhues4AML4L53SM6mvIvGI1JSzpqBBKKcjXjOAgA87cbS2uAPPvlIVAUrkaYhFVZd9IjagIOrz6nvbL2AYLbO2FXuVy/PzLPEcqHt2wbmaWsQCviWAtnWIJ2gl9TkqRYpmwHlLB34kpTT2xu+chbL12oFBNOvsY5y1pLpbnq0TuIknWR302G1wP0+OaYBz1lj56G8r3hYFeVszHPWkA+k88ubhZScxXqKth3LYFz2eIqvvu8auOvqY3D9yS3vOqqAEjqI0tbAbve9WsNpcoI1bmtg32+NJKQKWE5y0CjwAK4KSQpQxI+jzzvsA0uPtddJfSUBmOds5n4nnPQDKj+JywzF2Ah6zirtTRpoSCMCSyVXdbIMwPWcjU3JTiHkJOWsNCDjes7Kyr6qMFPBVeWs/iwBfDJKVc6Sd166NpuenxZVQkrnCYHv5QUEI++ctezIGJHmzg605Qucv0UBjsWIJfDiKk4Kup8JItjI1kBaF85MyKfeDQgW9pz1lbMAn374Enz7O94P/3VmC5BaNznEfUCl7thg6KkJhKgfEIwfj30nbbZyqL4L2UvkpHyV53XJWy0d/unf6PeS7AVTAoL5v1neBSskDkqS0/d5HbE6vYsOScAOodS4ukBsDWK49cxRAAC4+5pjyefW1DRtw07DDjSUSECwo8zW4JgTECzekcbpUtiptMHAqqtm6blGk6lp0DUKCJZqazAjKxZna+CP2orK2TnZGszFczZCGJVkvk9oIizRV598ww/yiF2fRM6mKWd1BUGfKGnseeJkzv0z39n3f/LRKHHXF0jTNryHOQaBcsFJ7C9d2DPLdQh1OoMhRGYjMYj3FN/l7ZaDgQFYe5cLLZOzNOBbXaWznSZPBmqUwFISJOIPVSlRz9mBXw8h8Fs27OXi4EVQObtKtgbBgGANPGe5ctYEkPA7vZ1ydvVBiTWNnJWIvQKK6MAlHpVS3pCQo2cS+8mopqTKWd5pyzKTHrYv8twlWzRy6ZVPvhZ+9e88F248uUPyoXdqNUjkaz93vT35Zyk2zV1TUWlwlLNK2nbWka+ctferXG+3UlsDG3THHlf+dZSzznXoeaY2FZycpe2FDFwbIDcQlH8N9Dibj3K5qrrVtOeVes0SAmgnIaWb/q3gn0McxMwylxypYr/hXFcmqM+FA3EmCf0GtBcQbPY7SKbHr0/bf1oUSYPukremM7sA7VfIMSlBnxB8oFIKUJWx9LmNCLeUoO8LfYe5cjbFf5jnGbkDyiFUUchq60MEOYAbIJiDuBpEPWex7U/f8c8+dsnZh36+Qk1PN7iWv52S5HYgKzAQYJ6bvw5nJHkE5Sx/mgiHn80NcOefxwQEm/02limzfY2thTJIwvM36GW1bQ14PSx916Xfoe8zJbkpeb6OiLN4HVYKlLAcTaewkdtOPnbKU2wNXvakq+C/veEFcM3xrei+iEUFBAspk6jf6bld9JzVbQ3wXoQIy0E/BziYGLLtyw2CgZX5RjJqajqqjTxnE+93U1/IVAzJAEEZQCQzo7aOclYgDIzKsgVbg3l4zqaQx/08h9FkIirEWlHO9uXOwB4hQW0E+grKWdHWwJZVRMiDE4G+sx/4zKNGlao9UxMZVPGcbQu0QVsUhfMR5+pzWTmbTpjSekgLCAZQEoPn933l7DrZGtCp7HWVzrKtQbpylnr8mnwlqvBDxOVu4NkB2A7qxQOab12JviyEiNF6ylnF1sDMzvCvXXpGHVYLzidTeG0mU105G3tfsywDKIqkgGDWP84nz9zz+kQhz18/z8ysCWzDUVuDaVE4U8/lvJPlyHYJ5dRbd11pa2Dz4HvOhhMN+QlKoFZKMeXseFqYqOE8fSkgGFW38s4uEi+u2o4SG2HCggd4xfs4mU4d5WxfUc5qRAL/ncIrSs9EmilGwVWW/TzzBu5j5FQoD1RpFlIJA+iEXC/PYEq8a/mxUnnZns3cG00s0dmMmrUJaErDGKnPV2mWFgUAXNiXZ1Y66Qnk7rRwiVNvv8BN8PyCWaVAiwVV8zuHZa5yltsU0On09F20AcGqqZxpnr/2ydfCY5cO4PSRDfixX/kIZkdEiLAMre/lmSegCM22od7TUv1DYX2G7Ql5X456EIc9Z+Vls054DrGBKAA3wB+moRGWKFzQRDieb6twPrqMa7hylhOfmrc1P5/03ZOQEhAs5gcvqXrtvm7aWUbI2Xj2VhKr07vokARKZvAGwMUZAbEzTOPcr7tiu1KjwXbY5quMSbI1CChnTyA5e2mURI4apeLsvOhHWScYGD2XY2tQg9TYqu0527gJFQQlaPD6JN9OM9WWquUaKIkR1sO0/XKY4oNpPHeF8zed/g1gFaDcr8qQgP2c+GhW8JyV/GAFL8+Uqfe3XnkEjm8NYG80hQ985lEA0IlWnP48EYi1eXjOAviNYvSFRTjkbA2fYCyD08JaJkjkF38HLkX8fJsAB6LatjWghF99z9nZwJ4zUKPPkOCQBixS1dcbTL1MEfNXxm/pJRJkzSp251vPVoE0SwFRZ8BIC/6J9aNUDjrl7OrDVc5K2+Xo5kVRGKV7TDkrDdRy2IBg/vHOeVm+88zfMc+tchbrhzIgmE1jqnR+zbkDBJ+WNwpROUtsfkp1lUyGavA7q+H9hz1bh2mEKG07+Z6z5fMyhDidIkoIVC+Q2OxcmnI26OuYWZUgng/TH08LEmjHDbbVE4gHvlymn5YPk66w00bf7R9wcH/SnlC2NQ9gCTwLjq0BLacVTGe5fUhK2doc2vuN38nGAcEYGeUlF3sPPWW0Bb2maVGYdhAX72jHWzKnIJYDftqhO8DzzNuhtA4oCEHte87ifZp6AcFM+SgKoEXSBgTz8xwCLW8nd4bwAy+5A248tU0uSj5O9i6Wdw4FlQKIkLPknqXaGlAhCj+fE7hQTyqulsbyQgb/YhYuAGywZbZuRAZOpLymtqm0wU5cNHVUZsuXc3zuH+sQ6yx/0ndPwiMXbX9LCwjmfdfZb3yOKZ6zZel0vyvrho6cXTPQBhAnp9DW4EjgY9QEiwoIhi+vFHjCCQhmPGeZcnab2hrEO9KovDKeszPlbFNydjSZNvJYxUjh+2M/sq6ERSln6b1EglJUzgrTiQ8S/OhioOqPtpHihToMNNbr+JdySIQpACFnBz3iMVlFOSuo3QSiO6QEReR5BvffeAUAALz34w8DQFw5S20a2iDpOSjJx98XJJzxg+8qZ2vYGpB8Y70rkrOszsS/87A1wEGq8/vtkrO0HNZ9XlheKUmOJGeKrQENsmjzlVbfbZp6yH9X7POQv5nbG3b2AhI8o4BNyLIg+XsjkGCtogw394x9680zE75nWiDDDquJlI40ovScDXva42Epytme0AmUiB+rmLJ58zqwmfX6NLYGdL/CdvDVKbpkOeTVp2E69RVd/dxV7/L4pdGAYOz2xYgxOrio1U3GxkggWfGZWHLWkkd0m+adO9RYD7Wc4WaXsMPzciJm4Chz5eR9rs/JiJgPKU8UUgBcCk7M4D2m36WYhQUFJ0BcW4MYeSmnyUmbFOXskHgm48yjhtysVZIzr0uTN2dZIGG89OT7UUztIHVYOUtJqHLZVc5m3nlDgiaPWBeC+v76n3wBvv8XP2jajVzJnJGBiPGk8KbMZySfjq3BGG0NqilnY/WdlkwVb9kQwQcgC12MbyypBGhwMAmSApWfTRvY4YgrZ4U8Be45HeDCXf33kP8Ot2358dpgFC5yr/cxI4Wt7QG5Rzldds8neZBLeIQEYMbuREw5qylppXJHVe+4Dx1sWUd05OyaoUemSvEKDQOCpdga1IH1DZx3QDBdUYUNwP3J1Ezf5cpZamtwkEC2IdGC+36pqecsIe+aEKZUuZji84v3rYlqMwWOenvMlLOJtgbNlLPWVqFtmPwFGmA8gByFpCCuComIAnCnJ2sBeyQgoSI1wCWLCOOhGiEQnzqzNvjdvwiTs9TnDhGaHl0X9Pr4vduddS6uOVHauHzpQjNbA9pRxHpIUhrzQE1GqblGtgY0yE6VTiaF5F83MsrXeJrmnasRVE5S8CNiNhOonC0KOwC1irYGpq4VvhNY/4YGWzh0WwN9oGejU86uPGKes9p6OrVUGjQHsB2k/YTZIz2hoyXlxgYEs4SDpKjBDqSZdZW5xGgojkFKPmJERxlF3F3X77lBSbRAWhqaeM5qBJLjOasFBMNbbtKy28pYFyAeN+jLhIg+1RmJgPK3CQSGnrOTwpku3FfITjeyeIDsIz92lLaNdI8HymA5gk9pxntM25BVPpva1PiUgGDaafosLyHCiuYD2yk446ex56x51u5vvr38oR+PcL2H7cYCCkN+hgLASWlTj1OrOIyTlTwPAP6U72lRwP/xW38Ov/SBz8G5PUt48wEGG9CqUMnWAtwBId6+SVbOCoUzZjejrtfe9ci7IPWlsEz61hDVyFl+vJuXADkr+FU76WB9CWmes5T8L9P00/VUvrFvRGBwQ5pRoAUEs6rsWZ2sjLN55XvqB8KUcPFgYtr+2iwWfqW8mWF86gPKWVoX22Br8fytIland9EhGZqyDiNK72y03/EHWFxAsNC0UUc5uytPWzmxNZylU8Bjl0qiIug5y8gwq5ytR84OSXpNAoJtDnJT6XDPTI4paWzPWzkrBcWyBIBgayAGBKvfyJuv52z8HvYDtgateM4q5O8+UbSGorNzhII59ZnabTyZmmcaIxCfNgsKhmbv2jsm2VA0UZRroB0QTTmL07WaKmdp+UCFhmxr4KrHQxYITXFkcz62Bm34A2/O7oNjazBNJ+itVUz1MhSa8m/JcjkP9B3A76tV/LZXdpsibGtQXc0fCwgm1SXaoFKH1YEUjIQjNgCj2pDMVmOZCQ12cQWPlh/MLlXOesGMcquc3Se2BpihAvQI0fbc4Q57TLUqBwSz7bcCfKImNmHAVxaF96f3O8lzVvGO9WwNWIAi7TjH1sAhs+S8cMLABASbVR+TaeGQZAOFVAmVIVdJZn9wQYd2PEDMz3viqSy/+r5r4N7rjsMtZ46Y/aoMavLyR4P2OJ9KIUl1wIV51fokp3zc1tAlZ5sqZ63CDUkUXsYj5LOipuP7Tws7SH1Medb8GBoQjxPuXNmakp6E6VQbvHSfD31PuY8qHUSh7Vxra1BVOSvkhpHFEqT0YwMxAOm2Blg/8rY8D4ROUbB7BeDH7nCVs2pS0XtACUGq2NTgzeLPfAV7jKwN5REgQIJn7jqsR6wqH4lPPx9Z4NlNi3SR1KOXyn6iZmuQ6jkrK2dtfsrfrq3ROqIjZ9cQJnI1q3RwpHBnTsrZTcWHDnFxfwwf/tzjjc+DjRFJ0k+nlJ/flz++m4Pc3CMM7hX2EHXJMDSvPr1Tz9bAetgW5hnVCaRDR65jvrNO0J4FeCFysmQvpJwdCYRKk2n/c/WcjT+vUPTedmwNZJJjjxDg2rRjCaH3ydoaFLNz2HPGCMR7rj3uEHaqcpZMpUTMw4IjNFqOPtk3nBTI2QaeswCWDN0a+sdzK5jdOdoa4CDVhZZtDdoYUDHfDimwVkLHVSL+Uge+NgK2BrsRlXieZzYw42yAbDWVs/pgzX5EHSxB+9YHZ7UECOIOq4Ek5WzkfYx5zu4nWBeJylmJnGVT7CFLVM7mrhJOC7iCkDqyHCGyQ5puWypncbslfPCbsBmZqcGzGlPC0e+vtidtO3HFE7YFbGAuS/LQgGD8OnFbVc9ZvBxLCoNz3jFRZWWQ6eVOIWD5b7rlqGL9FlbOuvXaf/jg5+DOv/su09bAQ3/8a54Ev/L657hK5gqsZqrnbMh7kcNXF4eJEcTmwP32taWc5T69Zruzb/xcWv2xO7IBnrntnZQfukztNJDiiQ0ipeZ5WviDG55ylpCzdNq4tTXAtDg5O7M1mKblBRErR1oy0uokW4NEclbqN0i/KfDe0jYlF9GElPYUbh0WvkfWAkZPT/J59gYaK5Kz4c1+3WcCfs3+jkzd4uaRnjdkSTFJ9JwFsLF8tIBgHtGskLWy/6/9PuFPrqZdN6xO76JDMqQI6wDztzXARqWmnH3Lr/4p/NX//b/BL77/043OE1ImUVLQKGfZxzfLMuMzhJ3LELHAG19I6J4+2tzW4KChQnCbjVxraMMXsgp4BFtROSuQIqPEID4hLMJzNvS8zOCIMBXnoAVyVusMGFuDvvWc3UsgQqyi2r8mo5ydutPuAeLXsDnowT3XHTe/Vc9ZQencRFGuofTqcslmBNoaXC+RszVsDei50Ps6GBDMDGLM09Zg5jk7p4BgTQZUjK0BKa9Yz6ekOxTeCTPwlRgQTLQ1SLCZQD9arIPNzI5VUs4GCGhTvivZGsjfejN4JQ30dJ6zK4+CPBqt+MamUupBtcq/WAbDnrOZexDIHVvJc5b34nJSFxsLlswSowUUaoeQ5F5YchEipqh6ClF6zlJSs1x/z7XH4fUvuBXe+PI71fSk88W4Fvq91tpGeN+lARRuHeNGkydkkWeHUP6lZHwKmWWVs2DSBiD2BtMCgARmogNClBAI+Uu6ZJ9dvuXKIyBBesZajIG/828+6J6LE42USK2inGX72ujuPCCYj5hKGY/jedXeC/wu4qyRxspZQoBiXqTt0jZpH236/bndkdk3pJylZ7H1hX8ul6jTU4up4ScsiFeZnvvUMnDbsUXhEmi4b2lrYI/Dd9oG0QvnxZ5fWpeJy84+ETsEbb30/TgQ+lJmYIvbGgT6fXbKPKkLWdpcRa4iUodRFbi1NQglx+pzyLz9Q8HLxDS5rYHzbtBlt67lPt/cz1Ub9ODXMJ2GA7RR4AxLq5xl1+KRs+7vYECw2V8aaLDpQNKy0ZGzawjjkTp23wqjnFWCmzTFljLVEfFnD50HAID/1699LDoNP4RxgLihvnaa5ywAwIltd11YOTsbRTK2BmUlcqqmcpam11QpyqcVaaAqzkWQs7zBKitnfTVXK8rZ2fXNw3M2hTQMkRB1iD4vfWXE2EwXHeRBj0kOqyaSyNnZRxqVs4Q8TBl5v3/mOwugK6W4IgcAGinKQ7DEPfOcnV0XKmcvHkzMYFZdKwq8d8GAYMx3Gd/jrTnU0Tgod35v1OpocWxsk7QAAQAASURBVKu2BtRzNuBfyiH5/rURECzmOQtgbYLwmxZSjy4LIb9XE+CvQp2kfeutRYo+q6XznF1dUFJLq99jr7lG5FTxnLW2BuR4IVkz1Z0QFKJyNnPbcHmeAQ0Sgp9qjSRzOrIa+axejRwYpZ/nlkghytpensEPvvQOeOGdZwMpyp35EOj3S2sbaWo0APstxvY3JdCQLJoUvj0D5lMP2BUm8/GbbQOBwSyPU8fLkdY5NA9BIskh++yPH3/l3fD8O66E73zezc7uUtnH64rNCODPJ6Q4C6bDdsW2WZ7FVX+6cpbmyy9J2id4i80aaf7Fw3IkT73PBLJUTgH3ke85krNHhv2wr6hQTum7g5tdr99AepE7NBUGN6LKWaaENXkpeEAwtDWY5TmxzInlKOG4KsrtGNkrzYLU2vIpylla3nk/LSP5DHvOystmHT4GOmsiRNzzsp7598sLdlkxIFjM7oUrY42tATtGS4fXjxMhEKYGQ85qytmIml8Yz7XHkmeBaeFuqcreVUNHzq4hJBURgFXOzt/WQCaE0Kv1S+f34R2/88la5yiKwlS+YgRR7ABOpsZQXRoZ5SbwYQ9R2/HfG00M2VLfc9amd5Co7tKwPSifZdTWwEQpruZvVRe8DGLD1fWc9ae5Nr0fALajMA+FFpKGoSnLIW/FNjxnVVsDJyBYuudsyIuYE8F7xNc2BU+78aRZVpWzpKGJH/J5eM4CkE4ka8AhKXrlkQ1zbaiQlwYWUoD3E7/9kvqSTw/fnatytqwrRpOi1anlqYG3QtgQ7FmwYZhCckrvhB3oiZEW+ruS8jxQOWs8Z+cQzK4pQpYC9ZSzstp4FHhmWrukw+qAdmx1BWyYzFDJy9lq6zmbYmsQfnd5vyoDYSpoDqJy1iRNphKrxLJD4skI5XUqkJZaQLDkQD284x15fWl9pFk+hepafH85GZJn1nOWxjZA4DatTRdT03FSbGr+Ug9BdyYdJbhCBL8b1MeuP3N0E37u2x+AF9/lEuRS2R/2yrqQ12t8Zl+IKGniOYuzmuhzkM4XAi33JSnE3yE5MWtr0E5AMMMrMtsAmzmyqL6r+j3Abdg3PLLZD6sZhWVa51QhwAHiatUpI1TL8/o+2jSuhmdrYNJy30X8VhdkUCUF0jPNI4MAWvq6ytYui8pZod3SU9ryE0Fli7ADYPaEI3Y8tQcJK13pslQObN2OZwi9H/y6y4FG/1vm/K74vtG96T3n9hx89imvi7VBIH4NE2HGiAasQ7SAYBJ57W7X2wweEZvZlWvKzXbk7DpCtzUoC//8bA2wkeI30ACsVysAwD/9zT+HR8nvVNB0xYBgs9rrsUsHZl/JP8onZ9MapUjYDHu5F2gsFdR6oam3Jo5cx4KwHTQ8T1Xg/cSP6r7QIbPTiW3e2/Cv1D7abSAU8AahBeQDqEeEcFCVIB2V3CMqvw1BiahhNJE/hgA+6VWVPHzqjVeYZT0gmD/dch6eswD22Xiq4wP0eu3DlTO7ErQ2kCw5UsDznqKc3TPK2fbf051h3zRo2rQ22G9hQMUoMR1bA91ug0Mi/pI9ZwXva4R9HgHlLPecxXyvkq1BwLqhjnJWtzVA1XBAOduRsysL/GaGfJ5DHcLQcbilinLWIUeE8/rKWWkqaG6+bfity4matgC9Q2jykzCNN8R20CBCNl82D+7U17R6w++8ptc3mros9Pz6rMNOfUFz0ubiSiRMkg7epUS3N8pZc49g9reY5WPqeA3T+0EJrpCFQkyZHQpIhRj03TYSgn/v+ZFOmarw6eSPyAaziw8iqMrF3C3fobxSGFsDVM42/OT5ZCr7rSxriClnj276ylmtTOB+E4H41+wTYvnhkGxBfOVsRkQGUz/YFCGdaJ1jbA0Km04KZFsDkh/lOCl9rXqJKTqlAV2tnxdSziIlQus5PlCVZfaawp6zer1Sbi9BbXNCz9+zqRF01h5ZG2kb+wHy5G0a0UmDDZbr/XzkSpoAaOeT1g/HOhv/8kHe2EwR02YI1ONuO8F+/9cRHTm7hojaGmy0r8oCcAkbTgqVNgPl+W88tQ3n98fw//7Nj1c+B614Qx1AtB7o5ZkYXOdEBeUsJRqNpcGRYfLHjaNPyPNRQ29NHoxGA56nydTjKvA9Z5GUlDxnBbVbC8rZeXjOYpqh/IUUYia4VBNbA/JBpg0TExCsn5uOQcoU4kmChzN+pFHZuJkYsOqKnSHcOotKrAYEE65nHp6zAKB7zo4sKXrlTBGPAzF1g7jx+ykR2uYdmJWLedoa5HkGR4bW2qAttFG3SLMujAqzgq0BDYKRSvDjM9gLBQQLKWc3XOXsKEBQLgt8EICiiXKWf+fNPQ/UJbxd0mF1YKd9BsjZmtuwvYR1XdBzVlDBhFpbpv+X+Z2zHlEU7hPlLCUxQrOxyrzLy84+gfxJgbIGvVyc+prarNSiVacg5jkrQbU1yMIBwTCf9PtAz6JV71y9NmWd98m0APLYnfvhEmg6ceaSxHEySbo9WowBPrso5BFcRQHnKWcn+BwypoCVrkc+D3/uIZUvBX4XL+23o5yNTV12rinhPfTVduWKx3et5V3oWl0bBZ8MxO0J2UrYKAcEyzPwSOkemdFWMOIP81SwvFpbA0vmp0B+pmFiUluv9Zk1FbmxYxKELljWeV02mep9HjqQgafxbA1qKGdDFg7TQg9wp6WHv706nnvORt43v/7yy3N5rtn1zqosrKqpnzU9RrPx8AKCTdNtA+iMCCmt0MAa/R1Wztrfdt16tkdXp3fRIRma5yWObs5LOUvJC66oQT+RXp7Bm19xNwAAvPN3PwWfe2y30jnoNYXIpC/Pznd0sy9+EI4xcjbUUaBKyIcvloTNqSP1/GYBZFuDusTGljAdWEIbU4+rwHrOliPBSNJuOspZl5ydEPPwlfWcTVAJGjJfIGdNALgWrg/A7RBQW4NKytmAWsoojmZfTFQ2VlHZPW3mOxuzNQCw5XReylnNpwpJ0c1Bz1fOIqHeWDnrX8umCdxWnn+etgYAtt4716Jytg1/YLw3tLxab/F4L4Ke25ShREXvZiggWIrnLFfOtqD+bxsh6wY7zbyKctYttwhTlwRmtXTK2dUFTgkNKShDwYtCAyl4lLH2CbyXkn+c1A+1ylk8LhM6tOQ7RvzVaecsppx104wTDH4+bacT0csz0oEvnGtIgUY8pYAPTiJCz88O1M4UeHheyJxpsLqtgUzo6EGqZn/RMqFwO+8lMYXpuWnQ/ja9JO+egbyf3T9MFgLoXtq8Pg2RgFUCgukEF59uLByrpOnZGnjWIPKRRhyS0M5MQawIu2+h9q7SZUbwzP5ikNYjG37/UFNa03eVJ+gSwoG6M3KB3IoAU+cqR2rPxf156WAGfc2xfzBV3hkN0m4xxTnfJ7SOr3fJ2bJ8STYsVK1PkeI5SwlYPqhCFehNPGfNsUTBHHrNfeWsPNDo/I7UG6GtkvqZWwNQMpMeQ/OhPTsAtDVIJGedQI9xWwNPRRwg1O0gqH1XMvJ81hEdObuGGKq2BvP1nM3zTCWFkNQ8uTOE599xJTz9ppNwMJ7Cz7z7Y5XOQStiqQOBDaUvz4gVLRJnFc9Zx9bgfEn6nq7pN0vP5dgaRHwRNSQHBFswYWAGCMZThxBwlLOGMEDF2dQ7vg6sOnIOnrMJPphcbUoh2TtUBX2GI/KO7xM/WEmVrGESUPpxpeluwjRvjlc/9Tq49sQWfOWdZ8Tt9D02qkcz9bXd8joQiPvp1HqwhmwNqnvOunkXbQ2Ycnbe5CxavLSpnDUDDg3qFlE5awYNUpSz9twHjOCP5WsjFBDsoEwjVN6N5+zs3Yip8JaBUH1g/cArKGf7OCjopjcODKoggT5KqJM6LAfYZgyRRSG1TrDIz7alDHZJUxQlMgb7fVQNFlLOOgHBcFpjQaZSKtfmki9ynkNchzTdf9CzE1cLaK5oq1LbaOqyoHKWzUhylLNIoE4Lz8MPk6TtixQlMicKsDk3dZSz8j1TlbPsLsXKV0xRCuDPEkPw+jQUEKyK4jQ0NTymNI8FX8N0YqQQAmdQXZr1LZsrZ/V88d+qYjOg6sT8ndst84vtoRSyEddTZatE4oVuQezdLgdxfFsDDjoYwgd1LBHFbQ3K9gmuaaKcDb1TofV6kMlMXN4wIp90W4MQGUjJOR4kkuYbs5mqdJW+l7imtDXga31Ig23e4BBXzsbI2cDAQyggmDYoZRW0cp74cVMSsC4GfI76t5jfC7aV5dE90i0rGZD3JC17K4eOnF1DSNMH98cTM0I0L3IWQJ/uaOwAdko7gDd81Z0AAPDv/vCz8LEvnE9On45yhQKCIRks+c0CAJzYTvec7RNbgy+jcnanOTk7mkwJsdHM1iDmOdvUPqEqqEqKkh6SchY9ig9aIme5mXmbSLFdGAQaFHaKfANbA+rR6ihnrcpvM6CU4xin2BqgcrYGefjUG0/C7/zIC+Gr7rla3E7f43l7znLvQQD33dka9ODKI5sAAPClprYGrDMqHc+f067xvp2zcna3ReVsC2pw4zlL1Ks2+F68FyG9EweJ9gIpqtLQ89hmHVT7Pq1O88n66gq2BjWsVpCs5umNA9+ZTjm7+kjynA0U69C7hilieyD0DcV6OkZ68E98Bn6Htt+z072NcjazHUw6/VfLUgr5EiKmisInLXt5bjqY1JO2dkCwCsQYD4KDCD13Y2uAxxJSCO/bRJyWXaZJ6wRpujiHCT5jVFwuKewoZ1nHnRI0mj8iPUe5LOXB/S31ObSZit5gbOB5NbE1oOtj3qfaWei3qlSVsbSV98LYGszaLQ252aivpEuma4nYRc1KApWzR2finSyTyyM9mg7m8O0uua1lTCcy+2Rwww8I5g8i0P1NvZH753BtDaY16xmJZJWX3ePS1pVpyO8CDipL8TtUz9lAQDBra2AJWL5/TojboHI2OhBS/i0DgtVQzmZ+uvz4ODmr/+YDMnSdplrlsxk4pEGyqsrZ9IBgMoEsZi3Dc9hjzfe/szXosChIkavRDw/ATsOcB6RONoC1NUA7gKfccAW89O6zMC0A3vaujyanjx3fQc+fvgZgp8rh+dtQzlqCqjAk8+kGtgY0gEBTEgpVW3HP2cUGBBsSghKfRS/PnM4b9Tg8GE+daWFNFL6SOrItpJDcg9x//wBKVRl2bJooZ8tgJpgfew7H1kCYJq4B8yQqZ01dUjjpVVHZxUADHHBibV6es7RsUHJ2o58Lytl6hDrt6G72e3J9NXBJs5Rp9E2A9eG5NpWzLQQEk8qrrevj6ea5r45L9pwNWICkPI/tDQyKMlPOVrBjWBQ0ArooCmNNUM1zdnbPPFsDfaBnqATO6bA6sJ6zAZI10GFN8pxNCAiW6jmLnV7s0OW51KHNTOAUGvwS9yuSbA3IsqoU0yFFYR/kNCBY9enGvINcKSCY8g7StgWHamtAyAw5IFi5jc5gqKJUxKJoPAkL+1vzcnTJWZqofA5hk5N37TeAbmvAvxkhcqGKrUFIuU0/dSHCyEuTqd9SAqEBUHK2HeUsh0cupXidkmVtAIMGBOP7uWVTLrM8PZfkD9WB8npsZ0u2BmWANve68XlRGxFOThVF4QxeFcXMZo5GrFdw9pgVH0nNp5QAaFU8j7X6ANst0oCu7jnr2jxI2ygBO2LSTlqfpRZn+R7YZ4qnSCV7y6PjCvaqyln33fDfJVznzxhwv8eurYG8DOAGuowBH7Ftg7jbYx7ruH/Ic9Yop8n/c6AJFoKOnF1DcLUbgLU02Bzkcw1UokVxfnhGzp4kitMfeukdkGcAv/6nX4A/+NQjSemPJ+FGNG/wa8rZauTsrBIfT+HhmZquka0BmrlPChtMpyZZl2xrMLak9iJAg6jtk0BVFFQ5Uyq7w8R7KiR1ZFtIIXy0aW70dxUiJHQOh5wl0++NV9O0iNo7jAM+g7asutPu2yYPuRdsaHp0E/QFyxdj1TDoQZ5ngudsdfIKwM27Ni2ek2Z1bCOq4NhWWR9iQIw2cNDCs8LytCt4zobUXBS0zimPT6vz8NySchY7nSGl+A4bIFvFgGAagTCa2MZzJc/Z2b6jiVu/hJWz6UEKOywHKe9cSOUX9KqdbUohZ0VbAyFpLLtkorHvRZdnQnCRarYGIfVlKH8IKVBWv8cI4qa2BhWaTFcf31K3aYp/a5fmKljzzB4zEaax4vU4dUKgQ8+P4/6HSNKOia0Bh2NrEJh26/C2CWSSlNWhIIYBEGwNAuRClU9FKKiSE6hH2C3kV2v2AZ+30/pbvP/R1MknZtWRNEjiEK1yekY5O5tF6ii5VVWgQPpkcj41aGUd29kTgZzNMn8QgdazY0NGZvYAwAEfN6398cTUmVJe3vHtT4M3vOxOePD2K8n59evG/EiQLjWlfqUzpXDgXOrDaMrZUAwNagFhBC5jfr9taQiTqfIyX1eAa6eggdcBpUUPqzPYNcXaxnyrVhfa6wUxn5y81Xy8ef6k754G7jnrD4wB+x0mkKX80wFQ+3zWk51dnd5Fh2SYgFOk0rmwP99gYAjd1gDtAKzi9NYzR+GVT74WAAD+4x9/Pil9/BANlAYk7xTywF8IamvQI6qrUJqjyRS+fMFVANcBkgV744mpiGorZxMDgrVBoFSBvWeFUXRyj7l+Lzcfl/3x1JTXpnm06sglec72/fcPwCUlmkS2B5B9bR1bA6pKjpGzU/2a+qxDNi9PVK52npdHci/375u5pllHQ1fOViVnbd75wIRZz/xOdxOm0TeBUc62SM6OEsiWGERbA1TOJqbLByxSB754YEKK3Vl+QuUdnxXOTjGK36Y91RahXSNVvlZRw9PBgz2SZqh+DAVK7LAa0IJxUIS2pSiD9hJ813umk0jJJj9t7PSGPGfLafeMsCUd8AKKqJ1DjMQLrcf8cYVOL8/NMVQ5W9vWIKG++dd/4wH4xgdugO988GZ1H+359o3oo8yo7XNnprMuKWdtQDBqawDiMoXnOcue9SQQEIze65D6OmZr4BMmUr2Gg/HudfOgqR5RQtKqYmugPZ880xVtTj6E1bTcU+IiltYmszVo6mvgnTeoxFfWg3st0jGPM89ZjdCNkZB4rlw5PjXPRjk79cnGjNHQWSYH0TXE2mw9rdcQ++MpqWf8fLzgjjPwXc+/xZk5ISsRw++NdpwG+pwdWwNifceh2ddhv086v7kfmd3OY/NQMjwcEIy+a/52PLa0NYinJ9oasN39qf5y+VZ/O8fS/dy6ltdHXEmsvSO8vpxM05WpZmaE0gbxPbvDeZSOpT7p5j1ZT24W5svkdZgL+kInaN7BwBCbMVuDHZfUvO3MUQBI90AcR8ixOsrZGAFkOv3TAr6MJHMT5ewsj9Rqoi4JlR4QbD7TxDUMjFJrEgyotNHPYXwwgb3RpLGKGDFfz9lZHhMDyFEgMcLtHepAsi5xbA1Ix2BvNIXtwFhCSC3VZ4QXPUeb4GrnhdoaHLiEsyFnL+w7wcIq2xqQvG9GlLN4X3le2gbWe23aGqS8EzEY9aqgnNUG4jiGPbchnzoghc9gMlOZ0+e2l6Bkxm/qKitnse49mExhOi1MZwj9ZrOs2vOjdfneaGIGfc21C89MU+92WB2kBLMLESahQUvckmRrkPukh5SyUVMSYpMTMv2eQM7mTDlrbBFUxscuqmSEvB6gJF24t92gZ9Vb08L3joyhTkCw5952JTz3tiuD+2gENbc1EAOCFQUAe73xPtNBNld1ppGNM6Igx+fkKqvG06m1VmDH0qBKGBBuMi28OjlWvlKm99Pgt9J6m5Z7nKM+a8HWgHvOasjAD4LDFbecCFGVs56tQfT00bwFf0fIdL5es5LAwekjs8FqTRkfK6dWrBrPFz8PBZZLaRDHJ+ky5/tqyVmXYCtE5eyUTO0O1OO5fD/Muoh9BuY7dJyznt5/csIhabdoeeSq2tDsWjpDAs/D2yN0W+hZusS9RGCXKCAcpMymx4lWYRYI/7axa9zo5w734uVLGezk5dgnRks8+9bT8KefPwf3XHvcbAsNMk2KIllVjs9Gm8USI56xug29p4Sbd96TdcRSexdvf/vb4d5774Vjx47BsWPH4JnPfCb85//8n832oijgzW9+M1xzzTWwtbUFz3/+8+EjH/nIEnO8GpCmPKNyFqdgzguarQEqTk8yxemRDffjHkOs48sb/Jrn7DGHnA0X8z61NVBI5irA89Frbuo5Gw8I1izwWFVsEKLERgOXotXbKcVt+eLO13M2rujUFGI28E7zZzBgRBSA6wfbyzOTDykKPYXxnBVaTiZCM/OcbXvaPSdN5x0QjBL3XDmLftKjiR2MAahja2DLCFfRmDSNonEC02kxf8/ZOQQEO2hB5Sx9N2xdn5YuH7BI9pwlz3WPNdSTPGe5cjZBXb9o0FkLB86Ajh04q2Ilk2WZKbt01gZeO/rLUmiBczqsDpICggXKSdhztvyLAzChtojpHDvH+2mbjpWgiKH55deT55nTYTM+dxGikF4HR1Q5y9ojlCCGwhKKqe9hqi9oVfSUegvrd4woT6dH430LBYChnrP0DDGbCPyLZROTnwjBkBCO52yewY+87E742195m2dnFgtMFiNHAHQCSfPeNedOULlKCAVQi9ka8PNKadJgSXadnNbWEEnFWdpKnlPhZY0TMqGNwlptarQNCOYrZ91AT2GSUtqWuh/FkJCzsq2B+1wd5ezYtUOh9Rqvc/ZH1NZAz2cvD5fNkDo5dFyK56yrnEX7pHRbg9DsD+NNngHpHzHlLAC89K6r4M6rjsKNp7bF/OJ+Zlm4LFO1F0XQSgIhPQ/vdeDvpUfOMrV+4D2WBqYys03+tvztr7wNPvC/vARuvvIIOYdeFqZVAoIZ5Wz52/e9dffnedyacSHbQludPgv8zdetG5aqnL3uuuvgH/yDfwC33norAAC8853vhK/5mq+BD3zgA3D33XfD2972Nvjpn/5p+Lmf+zm4/fbb4Sd+4ifgxS9+MXz0ox+Fo0ePLjPrS4VR7hHiZlG2BluKrcEjF9HWwFWcIrl4MaL8RMQ6D7zBn6KcjRGWNMo0KoBRXVcHQ0POTrx1VYGNo5itgSEqhE7zPEB9V0PTGG0U8ampxJsSyAvxnA0QrEZtymwNQgriqjCkKVHnIrGEROBGvwejydhTsXNgGlKnzFwL2hoczIc85F6w87I1wPQmiucsQHnfjm8N4PHdEXzm0V2zX9XnRslujcymfqe0kTg/W4OyPpxHQLA2bA3QI7nfy53gjynwbQ3Sjne8r4kKFCDNxsN4zo7Q1qCa4ncRoGV3fzT1fHarqsIByjK9TzzFAajfm17Xd8rZ1YXWsc0zCE6HRYQ98Mptewn1BdZ/tN6UUjYRnknnV5ruzzuxPULiFpAQEMxZju/j59Of3jno5Y5ytrGtQUufSs1zlg5y0cHNDCxJMJ4WpoN+51VH4dm3nhaPTwmgxKfY4iknREFrYxu5adDga1kG8D89T7ZxcEk5KQ9sf+HWaINOMXFAXVuDkG8s/dRVKae03GfgE0/aOfl3sekAgRQUyd0uL2tpaD6V5/dcW4O6yllznELoCpkTV/dNu9QPHEg9UMv03XoWyx3mz24pvLRKW4P4IJBTHiLvhZaKtF4rH44dB0kc2wwSf4b1FJ8hGZr9QVWZuJ2Ts3mWwU+9+l4xnxSxsmHJP+p1qqcnEaKSfzpHP8/MNW8Ocnjcdln8+ksZjOJest73n9R7mqpW2jYtCshSbQ1Y/R6zcODX9tX3XgNfOrdnrDLdPOL7ZVXjuG49qdklk7OveMUrnN8/+ZM/CW9/+9vhfe97H9x1113wMz/zM/CmN70JXvWqVwFASd6ePXsWfv7nfx6+8zu/cxlZXgmEbQ3m0+lHaJ6zxtaAKWcxP5i/GEYBf0wAQTmreM5u9HuwNejB7mgSV87OaqYvnd83L/cVoXniEWDekZztC52HVGwN3Cm1GhZva4AE6dQqRiXlLFEOmmMbEnLz9ZyN30etsd6ECOHgdgMAVpG0aUjGHC7sJyhnA9PHDWlqbA3mM+2+z7xgjdK7BSKbQiLuuXIWoBx8eXx3BJ999BIAQOVp3wBuGdH8PLH8740mjmp0/srZNm0N2gsIBlCSN0d6ObHbqGdrgIMjseeW5xkM+/kseCHzZE2wNdjG2R+zb1jK1PBFo59nhmAr64OyHKT4f2ooB4FGzuBPSDUsqf07rBY0craXZzCdRKb+Q5rfIp4j9B180RPPwnc9/xb4q/de7R1PYYSzNCSYoHaUlLN0WiN+RlOCAelKT/3aacAvky+aB3B9c1Pg1S+tkbNyQrR+pwrZnNzf6bSAyaw3/o9f8xS49cwR8Xh6Bn2a/uwvtUwgf2lAMH7rKV+TelskUk1TkFHYGB+MnPVINp42Wa5Q/YZsDWKkmraekmMZY2dDxDFvpzQVb/PDeXqOYjMhDc1zFnF0Y+CtTwmaxtPjZLYG7dn1SRnnateMnQAV0llW1l3Yz7cEm63X+PiAS87q+YwqZ3l5ERBSk4bSo+Ut1A42s+AUxbpUbu1gjm1X8sHi1DIcK4vGNgeIwr+CcpaqOxFSmzInI6eecjYwuCHNBrHWGPwsafnm+ZtMi+QBGzroxvNH82h/uyuObw/g+19yh5i2VZNLytmk7K0cVkb6MZlM4N/8m38DFy9ehGc+85nwiU98Ah566CF4yUteYvbZ2NiABx98EN773vcuMafLh2xrUHbC5u05qylnH0Zbgx1Ozs6Us4nkbMyHkHfEjynKWQCrno1NP0Wi8aFze+a4JqQRPh+85iakxnay5+xyAoIdjKcm6IysnLUKrraClvEgVm0iRY2nRe9N8dpLxcCcQ7Y1KP+ij2dMOauTSQNGmu6yc7QFbjdw0FJwOA4aVRpxSfB5vXLmKf3ZmXK26rRvALeMaGT2hgkINjUDLMN+PjdizwQE22vR1gDLdYNnResGVDKnBN+j4N+9KvWJFjCrknL2wLU1aFv13QSlDYGrlqXLdQYDZCsK/Z53nrOrDzOLIqBaCdVNKZ6ziNB38OjmAN7wsjvh7muO2+MlcjZBOUtJULMuc6duhzr0/Nx6QDBxNQCUHU/eCaQBA6eJU1/d87n7aRZeVaE9X1qfjaZTEozL5nlCSGieDq0TqthEmLSn7rN2lbMuKMGVqlYTFYKCgpxDszWQAjtp567yvVenhudcNaqVU4ngcdN3FHaBvPHvYtU2kp+54M8k5WzIH5rnz9gakHUOUe0kK5CUs79uOUqvAxH4bkwLX+2aZTIRiIQuDwiGkIje/dEkKThVnJylyxqZLZSzBOKbnjs0aGxsrLhyNuA5i8gc5ezE25YCjeg022d/3YBgofQYGSmsk87TD90vtruqCp/taOrchHrPbCMbeZ03FQYlNUynbnmtGvwsBfSbZcjZNdXOLj0g2Ic+9CF45jOfCXt7e3DkyBH45V/+ZbjrrrsMAXv27Fln/7Nnz8KnPvUpNb39/X3Y37c+gufOnZtPxpcIKZI7EoHaNP+2gOrI3QPaAZzA+dn5Tyu2BjFyEYEdX63iTfWcBQA4sT2Ah87tRUkFJKg+/1hJzp4+Ul81C+DbGjTpxCM5m+o5uyjCAJ+Do5yVyFkSrR4jhDYl5Hq5X/7bAhILacrZOdoaCO84D9ZFVZkh4AdVKhu2ATRn5ayZ1uUqZ1snZwXiXiLg0LYElbN11M5OQDCNnO1bAh3v7bwsDQAAjm2V9e3jc1DONhl0QA/T/bG9D8YeILEM4CAadpJTLEgQG/0enIexO0V/MjV5CJKzOPtjhQOCAZR17e5o4lxjkzpJmiVjA4IJAz3E6qYoiuYd+TXFKrdBNdsoaQqkhF5AAsgPq1rmJHIEO1uO6lSYCspJ415OPGenhUpK27zHycRQB5b62to85EQVCkmKNu18p3aGrc22UGelUeXspHDyS/0fe5msAHZ8qCuQ3dT6AcASr2NCzvKb5tgaBFRfMbJPmxZPMTTtrJjnrH7uap6z8npKOPH0nf2Edfy91bwpObZZDJOmNXpMqRwjS/k+saB5xtbAISPJ/vS9F6orYyUgF20PekCw2fsz8QdxuAcwLvfyDEaTwnxzebR6GugQUQYEw3T1fDo2A+J7IRPYFKJyVjufkplQnIc6nrMIqvb3lLPqUTpklXC1ul0iI/nuUvlxPHrZ/eJ7qx7brK7lg5TBGTFkmRPdk6n23viK1cnUHZjgeUi5F2oezbOwlh54L+ag4VoIlt67uOOOO+CDH/wgvO9974Pv+q7vgm/7tm+DP/mTPzHb+Yc91uh/61vfCsePHzf/rr/++rnlfVkYCMq9iwsOCLZHXtJHL5ZEQD/PDDmAqGprYIIXJQYEOxogZ3GKb6zzj/fzi+dLcvbUkfp+s/R8F4lSri62EpWzKaRim6BTjLEsiAHBiOfsqCVlqYniOYdaN4UwkiwHAIitQQuqU0kdb+9zPjuPr5STMAoMeAyMrUF53dgBmVdAsDEn1loeTJAivOLU9e2hRM5a5WxVUGWU1nGm9SUOaLVNfFMcn4OtwUFLlilYpjA4WkpwIgrNGiOlDG0IHWzHZmIY8secDTBiQDC03lkhWwMAWyc7ylk2oFMFlpwltgZT/TtD6/XL2dpgldugIVsDaZkjVOZ5V7Pyd15I2hBgjorT3UdSzpZkTGYOxc+BTs4GszFb7xM1NJ+crOv3yB0pXPVvCuh+Vx3fTDomBdo9oEHURtOp0RtlkDlEiXYduq2Bcr7ZekzbBIyhnrNmX/dYequDajW6nKD0k7J6YvZNvbA/dtpjfmAnnfCoopwNKRU11ad7vL+OfiLL56yQOAxbQ07qNvvmeWRSgNCOKa7L/LjbeP6OCJ6zmXIPQ+rIVDJbJWdnbZeRYMVmayrMHzvGeM665yitUty06tgayO+Fnx9/H798V1FzA4RFEVJbHkCf/eHmzW7nivfUVzFUzgCocpYo/AM3XRq88b9l/nE0VggPPByqv1y1vLs/V86Gygq9Jj5LU1POSslN2WACH+f16089T9r5aOBCOoixjlg6OTscDuHWW2+F+++/H9761rfCfffdBz/7sz8LV111FQAAPPTQQ87+X/ziFz01LcUb3/hGePzxx82/z3zmM3PN/zJAFSqIC8ZzdvG2Bhjx/IqdofeC7ZiAYKnkbLjD7XvO6teLjapYkCxUXuGL3VQ5i3nHSqGZrUF5ffGAYPOZJq5hQIiAoHKWTLU1CryWAoLNx3M2nkfV1sDchzY8Z/1zWP9IVzkbI2cnAcLZEl5lGrvsHG2hx8z92yoL/nl84h4HNjZD5GwNQp3eT9XWgChn0dZgnuQsDkhRhWpTtDXwgw3LvdHU6aSkKlCHbMAC67yUMoQk+T65J0ja9/IsmAZ+ww4mUzgYT631zgoqZwG4rUET5axva2Cv3f+m0nsoRV++XLDKbVA7IMIUOInkQ8ifsrly1gfW4tT/VJo+zq+nl1n7g6KAaEAwTU0n7SMRELSDjugT0ph2YlM7nXS/q1skZzWCPQNKiBTOFFFDoBKFMO/g02eQQnbj4VSBVpDAadT3NnTLgtPMI2SmZIfBcXxrYPL66KUDs543Pz3iMZKuhtDU8Nwh1eTjJcVpKCBYiHDlg3pNY2B6ZKy/R2Cbn0aMXMdvknO99Boi5RTTc2wHgkyWvFoK4k2Pcd8XJDrL31xcYYkonxjbH0+SiMLYYJxrsxAvu1i+U2Yd0GnmoW+E1JYHSFPO0jqLE4rJtgaRY2jZS6mnYt6+2j5B5axH+FJC2X+GdZSzdBvva07JYJ2WD7MvK69e4DF2SDXlrD0H/raHryc7u1q9Cyg/zvv7+3DTTTfBVVddBe9+97vNtoODA3jPe94Dz3rWs9TjNzY24NixY86/w4aQrcGROZOz0lRHEwxsxyc1kSzeG02j0U0BbIdbtTVgHeKQcvZ4qnKWtThON1TOcrKhiVLUes6Ojf+ahEV7zjq2BgFfQxoQzHhERsjyGAZz9JxFIirkracHBGvR1sCMmpfXWBRFbVuD0DvFfZ12EwIk1cGA2Rq0pcbkwHeP1jWircHsHf+cUc7WsTWw91MNCEZsPS4JgcnaxpFh3zRKzrfkO9tW8DZK9tFvVypBT4MQAlQjjSU/VupFHGqw0+e1ezCp7JW7KNCBAASvM6pAGogNWTrQ8nE5+86uchsUv5mcZIl5EEr7cfAtVesLrUMHQNQvmayc5cXRsTUgPo+qssuZDhrOn7R9OgXP//HopiX1Ss/ZcB44KBHXpnJWC8CY55nj2U7zSzvzhixi10FtDdTptfR8qJyd/ZV8e0307ZqKTVfxKBEscp6cdXlmAgTjLEHML0WIXKiSf638+X7LSllGAkZRR2rT6CV4nrMNjQ284wPkqmqHAfo+9J4PelYhrJNW8rE8/dTBK21bKE4GjSxPM2Vn6Mm2BlD41hq7BxNnIEuDW9/721PKRxXlLF1Psxz6RvSZoANhYmhEBmWkwOllXtTDWBryMl9XFGD4v9A954NiGXsPAeTvq+vRGw7Ql2nLmT2ndJ6wctYue7YGFZSzEzJbDiDB4qQKOTv7i9/gDNyAoOuIpZKzP/qjPwq//du/DZ/85CfhQx/6ELzpTW+C3/zN34Rv+qZvgizL4Hu/93vhLW95C/zyL/8yfPjDH4bXvva1sL29Da95zWuWme2lgxJjiMUHBLPnfvhiqZw9JShO6VTiFPWsUfklBgQLeewmk7OMLDy104yc5XlsQkAhMTAt/I8MhVUiLoYwoARlKCI4VXO1pcCbp+dsCsltlevu+Q/aDAjWx8ZcmSYllbyAYFHlrK5GtwM9M8/Z8Xw8Z7ExYFSPWBZauFcUPIgCAIher6icxXeqlq1BBeXstLBk6TyVs3mewdHZN+DcXjvWBm3VLXRgj767VQOC4XtWZUBKUpXa4Hfh5zHs5+bduXgwttY7TWVELYMOhCHa8JylauOQpUM5vbxcvpyVs6sMTTn7o1/1RAAAeO2znlA/IBgn6yp+58WUZ9UEnUovdWh9T01LeBRAlbPyuR3lbIT0kjrgE6L4fO5tp+ENL7sTXnHf1eai6BTk1E4nPc/Vx7eSjkmB9gwzcL+fhg/PXKJY87R0bA0SyB1OdhdCsCQzpVu5llD69BzafqlBaK6YCU+wrwOQYGtAylqVV0GfGs4JV/l4XE2fT58dF4tEj+ADyTU5cvV4nlyVQHLl/vq53AB12jlIWt40a/mcoZuge87qBSDPZKU591zl9U8Bfhm8uD9Wg+hRRG0NUsoZWW/IWeUye0L9ARAWRRjlrBKIL+Y5i98EPlCc2mt0iU6BuJ/9dWdFBAjxHv9G+fc+Ts4y5SyfRUI2SwMSuIZ/A8LKWbvs+W5P/aB0WnqTonBmG3gEceC8MdDZF+Vv9/msI5YaEOwLX/gCfMu3fAt8/vOfh+PHj8O9994L73rXu+DFL34xAAD88A//MOzu7sJ3f/d3w6OPPgpPf/rT4dd+7dfg6NGjy8z20mGMriXP2Y35dfwBiPqJTLN/+AIqZ31Sc6OfQz/PYDwt4NL+JBpxNqZKosTX1qAX7Jif2C7PFesk8I6KRDJXASd7G5GzA1e1pX3MqkQubwN0an9YOWvVXHifm+axzxotbSLFcxYJRd5oMJ6zLRCOfaacpWq4qspZG91UsjXInH1wqremBK0L/szm5TkrBRFAOwFaPpGcRdR5Zk4UVZWctek+NpsSOU/lLEBpbXBub9ya72xrtgZkYM+xNUhshfFAfFbRGz9eeleMojrgN4vYHvbh8d0RXDoYm/d+UcEXUyHZnDRRzuIxu45yNlwWhv0c9kbT6IBRh+VA69h+w9Ouh+fefhquOrYJ/+OLF9Tjq3hnVlfO+utMkChiCSB1aHlxdAiPFOVsEimEafs7FKSD/oRTO/Bdz78FAOy7WBTQyNbgqmPz95zNMjdwJ82vdAy3NahKzhqbiNw/JwLbJUECNlHNKe3FyUCNOD8pKGdjnX6aVjXPWXl9qZz1CRdpP/vXt6DIMnBuBn+OFNzjsmmQR350WPmnlFOy7HtN22VOSNtj5LRCAYq0Y7y8KRsHgXtcBi9yfwOEgzYCyLYGF/bHSQp9mnbIT7VcDpczmkZoYEFCqA2FeeTdvHESOWuP52rP1Fk90UGA2Tp34E1Pj5cB9hp650QEyVnv/ZHzzL9dvP0WLtN2q6Sc7UnVoJAgH3yLWStUsjWY/aX2Ehl5PuuIpZKz/+Jf/Ivg9izL4M1vfjO8+c1vXkyG1gRStHhUpS7M1mDs2xqcFGwNsiyD7WEPzu2Nk5Sz48C0SQC3wR/ymwWwytmYMotXVE1tDXh6TRRng16p2hpNCrh0MIET2/J+xguwZSViKF8A5YcuqJwlai58dk19Ru0UoTl4zqL6NUTOCupMAErONiffeNA/fN96eWbufXJAsIDazdQlU9dztm11J5+ihH/b9pyVgsXtzggqSTmLqPPMBmygSIJLzo6C+7aFcgBsFx5vi5ydo61BP8+SO3wD9t5X8dmWVOZ7B+llfWfYg8d3R3Bxf5LUOVgGJOuGNpSzVC1hbQ3kax/0SnK2U86uJkJB+FCdGVT/BKeSur+r1qkSCcD5L99xtswTH3js5Rnk03LPAkig2QAxaZc1UghJL38b+qXy7Y4v4TROmlA4ytkT8/ecBbD3ceRElc9kpTy7DjcgWCYuO2djhEF5D919sK7HZ/L2b3oK/IN3/Rn8yMvuhO/6v/7QSUfDNcc34dzeWLRAc4Pm6AldsVMe+wjxnI2JA2KWCvpxGhnme8eKmG3QrEoyyBhZGSC58gw2+rn5pjT95MU8NtMU1/R4d5tra5CL6zV1rj/VWyN3Q6SgvC0444CdAJd4fqytwaxeK3zf4/P74ySiMEbypyiYc+Heaad0bA0IXRZqu2mDBin1KFWZczI2NRZDrCzaafOFuabQPZfKV4rnNT2OD7Lz9ylWTrG+46R4aICGpnMNm8ExmQJM85q2BhFrhWrK2fKv9ZzNnPdkHbFUcrZDPUjKvUUFBDNqGlE5KytOdzb6JTm7n0DORiJhlyqJDCbTIug3CwDw3NuuhFuu3IGX33N1cD+uvGoaEKxNWwOAkjwYTcbGI1GCUTQtiDBAouZgUgRJSarm2myJ5OFqzzZxECEfAHRbg1Y9Z7ndAE7BJmlvCtOYJZgOuXBNhuhG5WwDpV0InFBvS43pn8d65iF2hUBcV2wPTT0CUDMgGHnXNDVsltnOzaMLU86irUG7nrNt1GMAZVmu49vKbQ2qzBaQpvxXGYjY3rCBLVc+IBgNeoZBCmuUbzkgWPieb/RzOA9hC54Oy4P1nA11xvTjY0FYKKoqy2XlLP61xKeklvNUOCSf06KIBgRLmeYdUodNia2BFoTK3PsaTbQ2bQ1CylnqDV8UlnCIETgAbrs3RKDx4/GwKeu8A9jBIEziq+65Gr7qnqvhs49esueSkzf45dc9G/ZHU/G7K6n/JKDw5NGLVchZm2CVgTxtajj3nFXJS+H8vq0BTTecn61hz7Txm/YuQkpZvj1CZ872z5QtbtsiRXGMHqCSbUcKWSnlBxFqK/DngUn4yln3bwHW9xjbmBf2xk5QJA3aveHnKtPRCppfvrV9NVuDoIWOsm0c6M8gyiCR5XYuXkmd1eM8k4CtQaplDS8D3M4CQLY/CdsasDwp5dxV04cDgnLQTX/rwZthY9CDD3z6Ufizh87PAmEK5KyQ3mRqv+NiEDpeN1QY0MJcHiZbg9XqXXRIgqTcW3hAMFLBPYwBwRTFKRLGF/fjI1YxhQOAbQQeC/jNAgA84fQO/JcfeD58w/3XB/fzbQ2aBgRz8960E789ixa+m0LOLogwMIrL8dSQAdJUeKruPGhpOnBPMYpvA0mes3177RT7DYgQDh4MQCJN8TzcB4iiKAqrdhNtDey9nE6LZB/OqrD+Ue6U9LaDKlni3vcWpZ2zXp45g0m1bA1IGQnZQGDaqJzdnjM5izMGVtXWYH9k1aeat7gEzdYgpQxJwbKqlPUdDMy4Pwkq0ZeJDTNgJiln69sa7Dmes0hMhzuho/F6NogPOyYJZbe25yzpxg37eeUp0NLeqEiyAcEEz9ks8/LcI/sVhSXSNFLaIWKUKkkKDoSYTGXrBLpcNbgVHYxv09ZAq8czIN7w0ykhqfz7C+DfJ2rn5Xp56mQYpg8gT9PG73io4x67nWePbcINp+QpZymkHQCYgGCPEHI21ul3yNkWlLNcaacrkvG+ymnmGZ+tEs4bHbysogAW88bO5ZO18ecaUjRqyln1eJafXsL9DX32tU1hcjYT86QpeSnphINO2Oa7uD82utRUha+4WwJJLilntXtDz0HfmqCtgbJtkqSczVTlbLLlUuQemXeoABIQTE/Oq0MzHuBPviZaJrl9WmiwQ3pPMM++rUGgrJBdd4Z9eOur7oEH77gSANCKxj9GngVjB9+k+jCmqg/BU85C5j6fNURHzq4hJOXexQUHBKPqHDTJl2wNAEjHtoKtQehjhsrLmHI2Fb6tQUPPWW5r0FBJuZ1w/w7Gy7E1oJ6zQVuD0aQ1kmeunrMm+FGAnGWWAwgz/bvXgq0BG4DZE4ikTTONWSft6S2SbQ3sukvknW5b3UmjQAPQIFPtlldDAjvKWVkhSa0N6pBXtPEYUl/iM0PP2baJbw709W4vIJhVZzQB9TAdN1DOjibTmbKrXJ9ShoznLFXOHvikvQYcIKPK2VCQj2VgKBDQTQaMpOCfhhDXAnYagjht6mCHxSLNry9E3IYVYIiNOu+GcFp8x0PKWZxNRZHnJFozOV4jyUKEDd9HIhtVT1mynEIqUHzx/J5ZbvN7rD37PLOWSZOpnXycgUw68OsIkb7y+dx0JsI0bSyvHqlHlxsQhrFpwAjs2zxSQTnrpF1FOavkw7M1iBBhrq0B2Q46iSOBtm0ae84GSHaTuci56FrvXpGfjq0BKZohYj/nN0o6JkRkKZtCg2Glys/PE//GYhKUdMI659iMnL2wPybf6ADxqVheSOtiCm0AW6/GfJAx34hQX1BrY+Dsu3TPWS6iSbQ1oMsimVj+TQ0Ixono8j30v2UcVQKCaXUOLuEqz9Yg8FpLZcHW2X4QR54PxISQs9Kj9YlqPU/e+WZ/p2YA1FU2ryNWq3fRIQnc1qAoCuPnurCAYKSCwwaLRmpix/ZCgq0BflhCFS9W6PhBagpaUQ37eWP1Mf/gNJ4OjORs4KOyaOUsWkEcTKaGHJQDgllbg7byOFfPWePdq5c/JIO4crdN5eyAncP4+pK07TRm/T5QAlm2NbDpXSDT4DdbJvlNFGhDzs5najjtXCIuKSScS85WzwclBbWAYOW2cr9HF+U5a5Szq2Vr4AQEq0Fw0iCEtFxX8pwl78peBVsD/K7uHkzWKyAY1s21lLOozKcBwdKUswedcnYlEfKcRYTaXqEiTzfV+QZqgbYA7CBjnnG/TFclZfNpu61Tp1MYJw9iZIRma2CUpgopVtXW4Avn9tN2rIiQ765Rzk6mDuGQCSovfs9pPTwhbTONZLNTbcvfknJ2pAQEc8n0+tAITA5ja3CJKmfDaadaJoSO4+tTSF6pnPJp7PwdCmHTIWejp0/KW8p2bd9Q3jUrBzpDJ6hudEhY+Tyhe6B7zgYGtUAuz5rnrLU1KAD1WcdJmw9nTB3f1vvHTh0lEmXyfdD26fXC5Kw2KBb0nFWO0YJa8mNxIJGLV0IzDSli7wi1l6CBqDTwgc0sCyu/7XEBcjZwvGRNoQUESx0wxHTweU6FII4A8n2gAR9F5WxEVR/OV/nX2BqAvSbJdmEd0JGzawiuqrt0MDENw4XZGlBy9oIeEAzAqnlDnqmIkD8mYsMoZ9u5VlpRnd4ZNh4d5kqulGjiIaByNsXWoEnwsSpAdWgZEEwnJWmQGmxoL9pz9vzeCH7vE49EK+miKIz6VRu1BbANLX+6THues32mzkUbEUqybCQoZylJKdsa2PJyfqa0HPSy1lWB2HibTJhfaMsksO1c2uvWSLgriX1JHTKB3rsQwYfPCZWz87Y1aFs5i+W8rYBg1HO2ikc2tfo4qEjOSsRlJc9Zo5ydmAGGUB2xDEi+uk0GjERbg5hy1szq6TxnVxExkhIgQs4GlbNkkLvG90M6q/182c4vPQ/m1SNnc9K5K8CQGOr0cqEjy8F9+9x8Fo5qhx8DkHbvKa4+3p6VAUXId5fOSsLmkqbk47eBPnP6/dVuOWYD8zOd+ios1dYgZd51ApJtDWooZ6Vp32l50tc7+Y0MNNDt/TyHzUEOw14Ow36efN0AbnulqZNPjIxy3r2Ec4U9Z2153CaiJVd9zOsNuo2mqx/j5kdeHxrIzTJGS+H75qkbM+ck06lVCqLF3+fP7Zo683hAvBRTzjokecJsA6xXY+86QHpAMI0DMLM/Is+hL/QFAOIxOkwaUR9yJP+sOjNUNqTn6U3lF16wvkPOum1VzymBpc/3y5WylTrggEuYz0lRiAG3pPsQGyRNsXjQgM+K+i1zwnbd0AUEW0NwWwP0m82z+auyeECw/fEEzs/Of2pH85ztOfkMIcWLEEmCYy3ZGtCK6vTRZn6zAP6HuLlyNk5uL95z1pKH+wF1llF3jq2tQdOp7FU9Z9/2ro/Cv37fp+D1L7gVfvCld6j70fTq2BqEAqNVBZ3CDUBtDXyf05BylhLYonKWkrOz93Me0+6RhBvPAo2M5qQ+tJ1Le09SlLN1lIWu52zI1mDmOTtTNMzd1mAWEOzxtjxnW3pWjq0Bel9WqAvoO0H9nlPyReshxO7BbMAjgSzHb9il/fEKK2ftQBhCGtRJhUTO2pkF8nPT/Lg7rAZSPP1DfaLgcWS5zkCO1KHDjjxW56Vdgd1uA5z4nVwTrRmI167yzqYoxXAXqcqaFrYT6KjvSGKTwidvQ/i+F90O06KAr3vKdWkHJEIbWMkyGoi0cEgUgJnCjjRBOTlC60Pq+R7yUC3TtR1rTzmrWEFoxFlVpCoiTwqes1UCglXzT9Tvl6bsdPcr/9J9e3kG//SbnwrjSQFbw55Tp8dyRttNTe51mbcwKeSQgiolpt9X+psKVXBwleeBn0H36ZXz6OVNU84G+rN5Jpdnrczj2gIKj4j9/GOlFcrWoBfsh8QU42n1IUkjl/Ms7Utf8aDnrPKtweOD/udZZgQhHMkBwWhZEPKC2wvwB7Ik8OvJwL/3EuFMz+0PsvMyIn97cD/czvu3IVJZqseMcrawAwRarrJsZvsTCQjGC1oVkZwlYv3vBf+OrQs6cnYNwW0N0C5gZ9hvrPqMAT/U2OnDxko/zwwpwGFURwkBwVKCvGDF0pZyllZUpxT1bxWEpnvVwZZgJcFxsOAI4qYTPikiyllLILZta5DqOfsXX74AAAD/5Dc/Ds+69RQ865bT4n6UyEyxNdDJ2TZsDTInT5LnLDa+9gIjwdT6QWrs0LJ6fmZrMI8BHkqoV/ULrYK+QNxrCknH1qCGspA2LFOUs0iWtu3ny2GUsy2Rs63ZGmB5JbYGVQhO19bAHp/yzdsg50ZcGpXlfbuicnZVPWclm5N9wQ4lFZRMR2B9oimeNzrl7ErDTgnVy0NIkaR1eAHA6VzVqSuk02I1TjtYlJzpK6SAGxCsiPq90rW6clEnIOj0TjUg2KSa5+wVO0P4iVfek7RvFYSV0bN2Bwn0guQALxe+WplcK/n+aqfLzHZsz4Gnwhor9YhDZjXo8qQELgNwPWeLooAsy6IBwSSFdwpC5c/1TlXP7KWTZQDPv+OMeGzs+0nbnE0ni4TIWD9f8TQ85SD5Tb/PdEZpiJB3lLPaOQP3QHt2QeUsZCKp5g04sfqnKOyAD1pZYbv3RMDSAICTswLxqHj0uvmxy5hXXTlrNzxw00n4/U89CgAxz9lwuQz1HajnLMeZRAFWpizzddRdL1S3SzMPPCW5cEn0Ovggu/c+Oe+GX6ZwDW+7hm619E7i4VMlIJjTFshzOJhMZ56zs+MlEtobaNHzpOXR5IXc2zV1NehsDdYRXLm3qGBgANaL8mBcBmV5mFgaaJX4EVQdVQgIFqqYjXK2Nc9ZQs4eaa6czbLM+XA0JTWQGNgN3L/xnKaJazDTV8fTYERw19YA89hsAMFOV0kjAJAUKwqA7/vFDzrqB4rUqdJUXeIcP7sPTad/A7hTuAEs4eKSswnKWeLPJJvaZ6Y+QVuDeSg76XRJOs2o7cGEPiO1ASyxTdUTAM0DgtG8h8nZcj9sJMzd1gD9x/ba8Zw9aGnQYWuI5XWSFPiRw1HOViSMpSn/exUCgtGglinqw2VAvMYmylkMokbqlxgxjXV7at3cYbFo7jkbIhksapGzwjobEKz8m2dMOTv7wQfze3lGpjraDnQoGJbJR4Ss0j1nfU9ZSTm77GpDEz6Uyln8fk7NXF1DonLll6fss78dWwNFe8dVWJRER5iAYPxc0SnH6TDWGIHnjuTs/nhqBqswr3dfcwx+8CW3e8doKswYggHBHEWj/hzLvzoB56hPI6+qExCsqXI24iuZ8lzp+pAtAq3jdhxy1ietEHTQKlPqhNA90LaFVZ48DcwLI6tyd/9SrY+2Bm5fOGRpAOCWo7itgZJvQcGses6SMnbHVUfhP/3t58D73/SisOdspKIM3dPSc9bd/tzbTsPXPvla+P4X67MnNUjfBDuoFB+IApCsBDKBkAyTlnyQne+tvRvW1qBc8IOThe6ln35Grj3mOYvXPZ2GbQ34mjq2BvgNzsDe22lRwPs/+UgS/7RK6MjZNcSAETdGOTvnYGAALnGzP57AwxfDfrMA1QKCmY5voNK2tgbtkNGOrUEL5CyAW/k1JzWQGEiwNVhQy3/Yt0TJniEOA8rZVm0N/I9iCEjO7gx78IVz+/DD//aPRP9ZJ3hW4D4iAc7VYUZB3IZylhHQJrCPY2vgT2PmSInOjSO6F+aonKWkaVW/0Cqgyh8AV2UZ9Jyt8cxcWwP9eE52z9t6Bhvm51tTzrajyjfT5McTGEWmGUsw7924IFYLaXmS3pVdQY2uYXvDzv4Y18j7IiDZGjRRzppZMtTWIHLtWLenTh3ssFgkBVOpSdzSDmydQWKpL4bfaRNsK3P3w/xInVyqnJkIqlbt3CopFOgsUlsDjciJqXcXBa1tQwmNkaAEpsfFlKC0baaq6RjZNBEDgs08Z9mxbSlnASz5EHq+28OeafPi4D5e4//6DffB6194m5Bu+v1yjlNenTx3A4LppJl/ztD9i5VHh5xteK9DZCzfritn9XtAb/PAUc6m+ebS5oRDUCp55NCeXcyfXlIya56zdq1va4BoqpxNCghGLgnzmvbMMrj7muNw5dGNYDyW2OB36J5mwvEP3n4l/KO/9hXBQGlunuVlvo7WWSGSU7I14JDqiX6ASwiRuy6pOvtOzg73A4Kp2XbrxczN54QMSn7zM26Ae687Dj/+NXeLgyS0fm9bOQvmWWCe7fMZTQr4+n/6u/DWX/2zCgkuHx05u4YYENUigPVynXcwMAC3I7s3msIjF8uIsiFS0/j1JQQEGyfYGrzqKdfCk649Bs+85VRSnmOgZOHpI81tDQDczklTb8Jt5vMrYeG2BmT6alA5O7Cd9bZIHvwop5KzGLX+rV93Lwx7Ofz6n34R/vX7PuXtR31QQw11TpwCAHziyxfhv3/iYQAAuKqFQB5GnTtlnrN9Xzm7F7C7GCeQ9n2jnJ15zs5B2WmCuE2nzn2bt+csnZK9OXTLnaucrWFrQKcbBe4ZT3tRnrNtBwRrqsrHsrtLrQEqzJOUylBl5eyIkrPlcgpZjsrZi/tjU4+takCwA8Fzto4yXPScHYc94blXdofVQspgXUhBmOw5W6te94/Bfq9RxGRuZxHzyvPVI960BRRRUjqkMrTrcV9/W1EUIgFMT6epQBcNzdKiVM5i22pKgtzgcfJ1SRiRub6xqc4mIFjhThEGsEp9TV1YLje7nzaSeXgf7js7CRANPL1qU3T1AYSQ6pOv14JbAejEowTHc7Zh2Q2RxHx7ynMNeRHTtuWO6jnL6g1llCZVWa9to/URR55lTj7s85MJNGfQCQOCMUvBE1vhfmyobGCeQtsB3HvXM++Q9i7IZG9K4GUNob5DnvlBjavOdHJV3P6xPAgVADh2EBy+rYEQECymnK1gayANYuA6j5xN/K57nrMkiOOpnQ34ldc/B771mU9g72F5rmkRHhz2ryX9eeGemH4G/jP7/ON7yemtAlard9EhCWbq0ZR5zi6AnO3ldsr+7mji2Bpo2DGqowrK2UBl8U1PvxH+4/c8F84cbSeaLa3ET7VFzrZqa5CgnG2JQEkFlsHS1iCknJ2puUbTymo3DUaFmUDOTqeFIameefMp+JGvuhMAAH7iP/0p/Onnzzn7GuIh2ihwPzbTaQE//G//CPZGU3jOrafhObfKnrZVwG0NrK+v/Ti3pZzF6zG2BnMoQ9RzNpUErwNL4M3u2+ydofUWwvWcbRgQLEB+cXKW2yu0Des5OxYV4lVQFFal2lTxvmmUmNNaQbWoWh/f1VQSSA4Ilm5rgEEZz+9bwnvVAoINBVuDfSGQYCq2BvZ5IWKq4aFAEHdYHZjAWCHlbKBODnnOSh2yKpBOi3YBVMXpdBZxSro3BdgSHkVBA5Eo51Z/+PmjqhwEVRBp09mnU3/7MqA9+wyIcnZSkCmiJaoEuKK2QtGAYKSjz5WzWN+Epq+3pZyNXdMVO4ycDUzR5XmMTdF286MTXK4aNkyEhdSxKYMRCMdztuG9jhIwmb6vtD6kHKTts23SN9YC9gG4z0kjKIMkvrI+z0IDQ7Jy31NamudqSUF8Xwa93BlkrqScjRBlMfsMmp52bxxFcuJ3IqqcDRybZfKAXSVEnjlehzNLIJCcZ2sgpCsqZ8k6z9YgQM5K3yEzC6JC21Ui1m0QR9dyiO8HQPrLhMiVOPkUojolj2Va/r2JeYSvGjpydg2h2xosJr4bdvT2RtbWIERq7phgKinkLHYeFlc0B/OwNSA1Y+OAYLP7l2RrsCDCwLU1CHnOWsIA89jUk9UQcAnqrPP7Y6O+ObbVh29/9hPghXeegYPxFL7nFz7gqJFR7RElZ0n+R5MpvPN3Pwnv/+SjsDPswVtfdU8rhCP3ld4TSBbJY5IjxdsT7+f5WT0yj4BVeD2TaVHLbzQVPeYHjO/M1qDnPZcjG31zP2spZ3uWGAi9d4u2NUDP2VLV3owkowMgjclZVHqPJyYKd5V63s4YIbYGic+NDhIh9pRAcRJQOfs4sYpYuYBgpj6w13jQSDlrnxciNvtBC5bYYTWQMlgXeiXDnrPN2jxSyu/6yENw39/7NfivH/2SzZ8wZdIjZ0nnrCjsNydF2RVSuJX59OmK6dSqPrWp5xrRuGiESCI6K4nbNMSmQlPQtllMiWw7+rbzjsD6hqeQKct1YFV/4f2umBFej10qvwFItuvKWbs+9N74x+nrNT9jClytqUD5z1jWthxyttnd9mwMAtu1M2WBe+CSQvaXY2ugWBcA6IpSl3gK1J1aWch1IUIG8vPw67TM7A9QWkLbQafM6f/Hpu7HVPChe8zzQ9NLq1/tcsjWIFbWYspZacCuCmLviETOhgOC8fxElNu4jpKzXDnr2YIodTTWtbO/vC0fyrcbhHD2LcBrV73WyTea9P1CdaY3UFLhcfn1QOatSxFzrRJWq3fRIQmGnF2CrQEAieJ8MIFHZsrZU0HPWZwSmmJrgJ2/xTVgnYBgOy2Rs4Q0aEpG4v3bHenk9qgldVsqhkQ9alWdAeUsDQjW8NlyX9EQMGL95iCHjX5J0P3DV98LVx7dgI9/8QJ87y9+wOQrdao0zf/Hv3gBfupdpZfNG1/+RLj+5Hb1CxLP4ZKMe1JAMDNIElLOltvSlLPz85y1ipz2FNQSuHI25CuaZZlRzzYJCLbZz4OEPCd+t4bzfUd3hj3TsHm8oe8sVUA2DeRHvxsp9jUcTQKCbUrK2Rqesw45u2wJHAOqvyUCuo5ydoPYUCBiimdNOftnD51TAzF2WBymCTOTatsakE31lLN+2uf3xnBub2zeO+oli78B/O9bjyhsKYmhDQYlKcXIvjyvVMXmEhv2x2RFlLPau5uBPPCNl1DFQ3VE1WQRcgeTmkwLb6YH5iOkEGsqnTX5iFwT9q9QDDMpwgMddHUlz9kAwZXiBSqR6SFv16jnLGmvNC26wefIf6tkpk4sOr7XpA6ixKVzL9g5etr9TSArpfzQdLV6Ncs4kVT+8Mi8zO4P4Noa5FkGR0kMlqitQUQ5XcU+g+6v7yvf16BoJNI2DHrOZv79q2xr4NwDgUw0tgbueTXwwfwyaBU/p3+cS86ya/ZISQtR8ZqFy5YEacDEWNFMC3lQkhxvrHKKcECwlOBoeh55Wn6dN+3I2Q7zhlHVTV1ydhEBwQCssq4MCFZ6zp4MkJrYqEmJljeKRIOeBwa93FQ2dKpz0zTtcrMmTVpAsOV4zlJEPWfNVORmebS+aPHKFjt11DD/1JEN+N/++pNh2Mvh//nIF+D1P/+HcEDyF3te1G/xh/7tH8PeaArPvPkUvOaBGypfi4Y+V86OJc9Z+x5qSFLOGs9ZJLLn5zk7cWwN5kfO4vRdfGe2FTXwTaePAADAmWPV33s8V0xpzC0TtuZsa5BlmVHPnmtIzlIFZNP31n43prXU01RNXt1zVggIVsHWwChnL1Fbg9VqPklK+v0Gyln6vJA0MYpn5dqtF7lbN//Q//3H8JS//2549598oXI+OrSHcWQqNkDEjzZR6R5SRGlIOaJUD/okoWhrIJEYSvaTFIlkaijfpVCmd9L0jB/e0pWzOkGNbYEDwZaAkiUxnsNVzsr7mI4+eU68SWdJXnZPExSWqZDIZwlHmD0bkhIqOVtBaSzlx1/vknixcuSq6PRtVZSzjT1n+bvBtwe22TQC6ZGflLyjwqWAoJip3uUyFvMmllAS68oxXhrlX005i6vLQSe7jV4jDxDGEfOcdZ+Dfk0IGxBM3rfnPDO7HJ7RF/7WhMjbUjmbrg6VECuLTZWz5SCfu49Ul9B1fJA91e6Fk+e9XB7klCCnY/tz8qCkXcbrpr7sonI2cN4YfHsUSTm7XrO5Vqt30SEJvq1B2Rk7spEWhbApbGCXaZKtAY10HcM4wROtbfTyDN708ifCD77k9rmQs01JDaOcDQYEmx/hJUEmZ/V1+6MJ7LeUR6rCjEEiZwEAnnnLKfg/vvWpMOyXBO3rfv4Pje1GLH95bqfM/Onnz8H2sAdve/W9lafNhIAEcMjWYJMQ3xpSprHiu4aKkLmQsybAWVHZL7TaeTJzHoD41PWf+rp74J9/6/1w/41XVD4XesfGZixwD9952xoA2PLeNCjYAVEuVfbsYsDvxt5oYtKtUs9jPTqeFGSmQNrx0pT/KrYG28ZztnxH2rgfbSN0jXWUs7QewDRjAQYl5exjlw7gw3/5OAAA3Hvd8cr56NAeJgnKWV/JZRHqEGuqtVSkdMayLHN6cYacFRRwuGoa6RSadGfQPVJnf4W8Tsn0Tn4OTG9MVG7LhOo5m2Vkxg5Rzs7+Omq7SN03dgZnwvfcdPSJssqmIytnU5WMKcBriVXnOxWVs5lQTpPyoxJ8uq+jdF7N59PbP0JvbzrkbHDXKHwCRieX1PeQLIfUdlRkQX3+Q6pQTTnrnieNyHLylWcBb2J5sEEi8+jfoiDTxHO3HVrJc7auclbYX7XkUEjv0Pck9gkJ9atF5WzF/kaMvDTkLA0IFjiF5zmb+VYXMjlLrey4rYELyWeW5ouSq1RkFMq3ZI9ggzgWyqAkfcbEKicwoBUimmOQPg983Zpxs7CYefAdWsXAKewFsTVYjHLWBnaxAcFCtgYm0nWS52y88zAPfMdzbmo1PUoaNA3SheQBjTzPgY3YOoqVOpDUpTI5S2wNWgpaRlWYMWjkLADAC+44A//sW++H/+lf/T68+0++AB//4oUyfwkf8UEvM+f/ka+6szU7A5N+3+3Q7Uu2BoTs0pAyfXyRtgZjYmswD3W8CTw26xzG1JFXH9+Cq49v1TrX3dccg+983s3w5BvCxK6nnF0AOUuDgjUBkmyDXti6IQVIEO6OrK1Blbqgb1SZUzhIDN6HkN6V3Sqes7NvK7bDBwv0RE+FpA5uopylgwq7BxMY9HLTEI8pZ+nA2fv+4hEoCoBbzxyBs8faCeLZoR7sYF1kADLLPP9PXK+BbqnnORuvX1TlLPu+9XISEAyIP2gCkRYlIwyZYu/PRLE1wDxPAEhQMzn9RUG9ByAPfJuOPTku5qE6msaVs7je7ehzclbxnHX4gmY3NBZpHnFkk5GzEbK9ig2Edhxfn6J24xHVAcL3KKqcJW2npmVXELipv9X30CFw2TayTNu8dFapo5JnaavKWee+y/kqt8kbe5m+TVNEczIXyxANdDgxdU5myicAwIkKytkQ8UjzI+UbgX2yWPC/Mv8WIYI19o2KK2czb10VxMqifQ6Ft04Cz49EIEp5pJfJ+9je+6NYfmTsL0DZh0W9V6htL5G8WLdMCxAHJem5TbwRUl5jZY6nEYVQj/BzdMrZDnMHJY9G0ylcOFhwQDAS2OURo5zVFaeYr0tJnrPzI24WCZr/5gHB0m0NFhVILcsy58O6ofhu4sdkPC0MMbJIz9kQOQsA8ODtV8I//9b7YaOfwye+fHGWv/g9xH2eftNJ+Oan35iU7yroJyhnqWUE92pDpCilrK0BKmfn6wU7z+B1nLi/VIGAq4o8z+CNL38ivOxJVwX34w2qedxfjmNbZZ3bVDmLAxaaLUQV4MDC3mhi3l1NgSmhia2BpDK/VMHWYJtZUayaahaA1gfldY0nU3Of65S5fi8393yPBHQst8nXLylnf/fPvwwAAM+65VTlPHRoFymeswA6+TZfz9m0nehumE9PrUqmbVISQ1WvJRHDSI6A1xkM2hrMdo4FJVsUwsrZchu1NciEexwbqHMimEdIRMwO9S9EjBQCNEXZlwqr4A3vZzxn98aOf2GK52yVPGqvjuejqJKX+DftHsXKI/32NyXC+dEhmwPtTHR9WDkr2xqkzCIr8yanGyr72hY6287ZXyT9/LzQPJh6DaxqsZdlcLRmQDA5OJNMpmp5jwcEo8vyM+KIfaOqes5WbbO5RKd/LCbn2hro6fEBfYlArK6c5WWEpu+XWdeKIheP4xCEs+Y7OpkWZIBAPgafw5QGBEt4F6p5zvrfXH74JE4XrBTWmwG7TEErtNGkIJ6ziw0I9vjuyIwinwwqZ8t8lYqn8OjFeJLWeVh1UOKpua1Bef+SbA0aqlKrgF6jNhWeBgnDsiIpbKudt7rn7LHASPLzbr8S/sW3Pc0QGCkdy6fccAWcPrLRup0BwhJRs+n5Yz94EX6oi8I+fw7jERloyOA29JydB5FJp7YswnMWlTt7FQi4eYEqZ7cGvcYK1BRY5Wx9cnY8mcJbf7UMdvfV913TOE+WnK2nnh4SVaaxv0m2NcBgWYJyNsVzls1KqTpFbhHYYMQoJaLrKGcBqBXF1BkM075pQ0KgI37nzx8GgI6cXQWkeM6W2+X1oQ4urdaafuM1cOUsXocUEMyuKmAyCdsaaOQBBSW9+B7UOsH39yz/Ws9ZMfmFgauMERmElbMOoRN5vKNJnLDAMobPcFqAoJxVAoIpy3WA+Uv2nD0YO6pyvUyFCTANIaViCuGLq11fUf38MT0HbXM21X5EPWdTCO3APtoAkds31u+LFtTIJYSVfEFYzSwdh6skIp0rRznpPp26MwJ2HFuDSEAwep0RH27tOdDrMapeZd+ecH0AzQKChcQd/Tzz6rnqAcHkZb7ODQimn4PnRyIQpSziLeoJ1+Ttn8nb8Dy0SNH7F7oz0iAF5kmzNaBfSGzjTyMBwUJBC2OQ6gGe3qRTznaYNxxydjwltgaLIWeRvPnco7uz/GRwbFM/9zbp2MaCghlbgzVXzg5aVM5uG+WsfO+KYr5qRA1D0gHTOmO0E4/kbFues2Mhui9HTDmLeM5tp+FfftvT4MzRDXjBnWeiefi5b38a/Lc3vABuPLWTmOtq4N5veyN/ejJVw2m+s5MEEmvAlLPzIDJtFGjiFzqHDjxeJzYCqhBw8wJ9N9pQoKYAydnHG5Czv/B7n4aPfuE8HN8awPe96PbGeaLlFWdRVKmvcOBpNCkqBxfcYMrZybQwJGbKYMRmv9dYGThvcM9Zl5ytl18cWNg9mDg+lFpHhytnv3huDz7+xQuQZQDPuLkjZ5eNlJkUAAHlbMhzlnSG6rRDUjpjfGo37bhS9HKXxKjiD6qSXkQ5y/ehnrO844md1tCUzkVCs2Qp1WazOpbUHbZDnnnrUhCb6mzuD1FhIYytQYCEa3o7taByHNZzduKq5ZSqlRI17dkaxAkVUekcOF9MDet+H5vd7NBz5OmrJDVZ1oLvAbh1XGpAMC1wVaoKWScys6C3q0sEl79U5ezsdwGFM+DTpq2BljdpO4Btbx5VeABN6R76TsQGNEIcQS/P1ftXB3JZlJ6nngavd/lAY7nOTwBJ+kEv8++J91N+f3C95gsfGqwNedfSgGDawNGQCHOs97t0Hv28MfA988wfdEgIUbNS6Dxn1xC9vByFmxblCDcGBFuccrYs9Z97rCRnT+4MgyNGg14Ow34OB+MpXDyYwImAPScqohZJMs4DQ4ecbXYt2DjSbA0m08J4ITZV6VYBrdw15Wy/V34kx9PC5L8psUE/upNpEewwnkskZwEAnnXrafjvP/qVScrGLMvmEjgLYf013cBWlOCiz3p/NAUQ7BxHCUp07JAZf8p5es5Oq/uFVjuP6zlrpq4vwOdVAyXG5llmKKytQT3P2ccuHcD/+u6PAQDAD7zkdrgiMDMiFfTacaCmig0LlpeD8bRyAERqrzKeTB3iMqVs5HkG24MeXJyVp1Wc2WHVwa4VyrCX11b3bw2thRFVw2lkg3lGs+fz3plq9u5rjkXVPB3mD2xfxcgirbykRnWuU7endMY4MaraGpDfJYkx2z/humKBiCRVTqliw+0yYWQ9SsXkFwbdczazM0+EgGB5TXJWA/dGpQQ3AmfASNNWzXLDvPAI5BqsrcHIUfim2BpUI7P19RphSEHLKQjLqedDtOs5qz/H1PRDQcO0adt0UPxgPIUsK2ec8fviKEqdMqbnWcubm27YZ1N6VppnKv4tiNK8l2emfA56WVQE0HfeZe1a8K9SzsjqV9x3Ddxz3XF40RPPRvfl0+2xf8gR+0ZxCwpadfRyX3lc2dYgMrghq2kDZDP3nM38hGVbg/LvIM+9gSDt/dFmb9D1tN+catWB56PkrDQoSY/B80yLmK1BnKhW8+hdr/+WdsrZDguBCbyxhIBg+LFG5ezJHd1vFmGCgu2HyQLsAK6ip18V0M5JU4Ugfmj3x1NxKj/tNC9S0UXPFVJm8W2NyVlyfMx31tgabMbJWYDmDf22gF6cY89zlkbOzcy91YKCTVJsDRi5PQ8ic0AUrfNUeeN985SzSyRn6TNblIK3qa3BP3r3x+CxSyO4/ewReM0DN7SSp0HPqhlQpV3FHsD6FhPP2cS6lT6D/fHUCa6YqirdJoOfq62cnUBRFCQYWP28bpJAavS91epJrpx978xv9tm3nK6dhw7tATm32OCC1jEKes6S5Xl5zuZZ5nRIjddhzhW1mUpiRPMROHe53Z+OSoNZaQog4zm75LatVudmmT8ojOsBXLVTJSWoSgbPts8W6BRZBN4zKeBLW5CICwnG1oArZyPKQ4AWlbPObyUBcz1pZHqszUvbTk1JeX60RKpo26Q0NBIKwA3KvEM84y8djEmAJJ0Q0sj1OkS3FKCKnl86zFd+uud36rUsM6rV41thsRTmR1p28hZRztJz7Gz04Vuf+QS45oQcXLenEHcA+rci1jak/Wrfu9VXzlb3nCXLwqEh1bYE/9vpE4hSHrHvNujn0XNK3rLlbz/P9L6Hsu4GyXPzWRTyoKQbLA5tDcKzR/zvZiBTDNKACX8HUmwQVwmr18PokARDzhJbg0UpZ1Gh85cz5ezpI3FFDPqmxsjZFDJpHUA/LG15zgKAQyogqN/oIkkDx9YgEHCGKzGb3g/6kUslZ1OUs6uEAVH6AVhbA668xN+arcHIeHvqXzpeZuZBZPZMgLP5es4az7xZi2F3ZgWyKDsBCcuwNcCAEHUCgn30ofPwf/73TwMAwI+94u5WLWawvKK/cZUyMOxLZSitBeeozMdT49+9OUhXle6QZ7eanrNl/qaFG4CxiRLeCeKWEHTStEsmZZDC3/l4qZx9Zuc3uxJA9UiszGsd2WAHl3SG6gxIJwUbymSvQwCmBiNk7bSgqtU4kaaSQoQc4bto3nuzLJt9yuOXW3eErB0k5SxeD33vq3WcZRjCgAyo8g405iNVsV0HXJGoAX3HL+yPncBlScrZCjcsVP40X0f3vJmXryD5EsnaliMICO8bg0cm8e3Osl5OtQTUgEfkIi8dTOw7yI7XfHpTFMte3li+xM+mqVMEAox7lDKylAYEyzKrnD2+FecB6Lus59nPm5D1YBo2Lfm+AuhtuBgHEKqPegIZXl05a5dF1TP7Has/8tz1HZZsDUIkcD/3bQ2890cgYcv9/DpukOvktnt+Pf0JGZTUbCjw+U5J/Z6inK3ynfRJav/edORsh4WARq7GKaI7wwV5zs46qQ+d2wOAcDAwBH44tKn5iPESvFPnAcfWoKFylk5ll4KCjRxydnH3jV7jZiDgjKec7TfLI63YJ5EQjFVsDVYJ2EmywX18WwMAVy0nIfQx5OdC1InsHkOfdMCM5+w8AoIpnrOLshOQ4PoEL1o5W83WoCgK+PH/+BGYTAt46d1n4dm3tqt4xLJlbQ3S6wI6IImzBVLLUJ5nZt/98cQQl1UGIugg2UraGjAP6jaUs1skiNsowXLIBCWbTOEzj+zC5x7bhX6ewQM3naydhw7twXj6V1DO0o5P2HPWYr6es5nzW1ruEZVhAeHplPzcWqeQTn/n+0wLsNM7hY4iAAnGtuSqQ3v2WZaZ5zsSDPooV1KFbIwR4pLCGYH3TCMhym3ttCdjl4TKxAv7aQHB3HKanp9wUKl4QriHpHgT94+kuTlsUznrHh8ip3TlrPzOc2jlfPdgQpSzLtIsKtRTqvmhSn4Kkw+hPOvKWfK+kHrtqmOlr5mmXnXSou+ySr5ifaekkajM5mnw++d4n5JtUVuDwLT8Xp61oJwl6UvbeT2fkCYdMCi/I+52qS7B6xwI9lS+v7mSN2E97YeHbw29D+Uy3svSc9ZPw20zzDxnKZGb8CwqDQB6z8J/37if+aqj85xdU2CFtjeynbBFBQTbJAodgDRydpuMOodgPDJXcNpoFbQZECzLMtga9GB3NBHJ2THxFV2kKoNW7kHlLCMH2lXOhn1kjHJ2e73IWRMQbOoGBOMk+CYhTyRg2QiVwUUoZ7GBMZ5OzZTJeShn+8xzdvegvC/LVM5SsntR9grWc7aacvbX/uQL8DsffxiGvRze9PK7Ws+XVc6irUEVz9nZgMVkagYtqpShjX4OB5Mp7I+mtewuaBlaRVsD14N6IvpUVwXW61Q5m1KXjMYF/M7M0uDJN5xwiO0Oy0PKYF25nSxnGYwTglk5Hb86tgYJ+5RqI5I3ppzdJ+tNfgpL8mlEmqtIVPKX2e18n8KxNZA70NOIendR0BRpGYSVs/UDgsnrTeCqWXYmRQG8OYdiDanzbdNJzoqSDzc/GnY27Ow/NyBYvEzFghtpx7nr3WvlRDbCqtvoOv38VZSzTeFlI/RcE9IIec5qddDFg7FIVvHj3W0+QSVBfXaC6hHA+qTSLUY56wWQcsnSaVGQaeJlwM2f+WtfAU+54Qo1f4h+gmrSEH1KGi6hHIbm5QvgPqdensFUCQLIQQcA+b3t5YJytmJFERuwiw00SOjnGRyY4yU7Bj8N3AevN88s9yLlSsqLVV3T72VcPY3n4/u5VjT+d81pCzgzI8Dbl59Lm4ESBr9e/5piQq5Vw+r1MDokASu0Ry8dmHWLDgiGOH0k7jlrlbNhchbJqFVUJlUBJS7bULMiMXBp5N+/eU4TD2GQrJx1tzVVEmdkykpsqsLa2hr0XJJR8pwFiCtnxynKWVY+N+dAZBq/0Elh1fENy4EEGngMAGB39r4syutVAi3/iyKJUTn7eAXP2b3RBH7yP/0pAAD8zefeBDecCkRurAnP1qBCPY/k42gyrVXnGaJxbAe5qpR16jm7ip7oVB18MKHK2ea2BrvEczaknjTq5MnUBAN7Zuc3uzKwytnwe0M7si4Bqh9HS8W8PGd5p8shDJlS0Cgywapm+FRh6dxJKjDe8ZvGbQ1WRjmb4jk79j1n65KNGnPDlYC0o49AsYbH6TnPKz0rcj588lkC9mHK4Lbj6DF1bQ20XfM8c4QwmnWIUbepRKO8vwbqFd+65yz/LRBBIWgqdQC9Drq0PyFerzo5puWlzi3gxDrClHfhWfnKWcxziYIcn+cZ5HkGr3zytUntNlc5q+XZJYO17Xw5ti/f1VVwusvhGX8BW4M88+q5tj1nNXVqCDyIGT9EqifwGKybtTIKYO+D9l7Q9XQwPzx4Q87H8ll+93wy3SGBZ8+BK70lOLMNKjQhUlTMnXK2w0KAhN9js873sJc3DjyVCk50JClnTUCwiK1B4rS7VYcTEKwF0nRr2AO4KNtCHCzJCsIJCBb0nG1XOQtQVu6TaQGjADlbFIWJVr9u5GyfqATHk6l5Lzxbg9nvfU05mzAVmXe45+k5O55zQDDP1uBgBWwNlqKcrR4Q7Nf/9Avw6UcuwZmjG/C6F9w6l3xxW4MqBD02TqeFVYpXsUhBknJ/NIVLNZSzrufsao5rD4k6uA3lLLU1SCH2BiQg2O+aYGCd3+yqwHaOwvvRThLtSIU6uPSYet/4+LvMbQ00z1lKTDlRorUpvAlEFiUr+C7TghIl8nH4TVolz1lsRwGUHWpJOZsJx1W5hJitAT6T6dTvQGP7xfMjdJab3U+N0OCgtnE46BkiqeuS2arHZ5bBzkYffvVvPxd6eaaSj4aICagVpf1D2Br04Pz+uBYxGTpXOEp8yrsqE5gA+iDExYOx+g3TCMf0gGDyRskDFcCWd6k88/35IAkNxlRVFXpyewg3X7kDJ7YG+jPI3Px4mysQ1tqUdwBfOUtP38symIDcx6P9B37f+3nmKY9b95ytQ846Fg7+TFfpOeJ7jPepzAveE15GMjG/nFQt85JGrkv3wdTZhax0lQZJJtMiGBCsXA+ADEeVet0juTPfMmLdPGc7cnZNgQX+sZlyFs3qFwGukkwhZ3cSA4KND6GtQRukOZLbIc/ZRZHzCGpXUMlztoVni9NDQlMVLpDpZ+tGzg6JcnaPBPvyAoIh4aQpZyfYGQ9NRXa/YvMgMilpWtUvtNJ5jHK2PAcOZizX1oB4zi5YOXtubwxFUSQRAn/0mccAAOCld181t1kYWF6NrUGFBjMtp6iIrlKGzEDGeAp7B808Z6sofheJjX4OF/a552wT5ay1NUgZVMHn8edfugAH4ylsDnL4ihtO1D5/h+bYH09g2MshyzIykyKinFUI2dD7SrfU8ZVP5RfobprCt0csngoaJVq5bIcc0bgKQlb4nrO6rQHuGwtKtijQZzjoZSRfsYBgaSQ9h7YnPovcdPQL49uLGCtTnFPJshRQL+HgfnkGO8MeXDyYGC/30GukKbzj+Qmvv+uaY5XTCZ0+pTxuDktytulnL0Syl9vlZe0Ynh/6W/tOTQubCD9Hn5GD8nKIkJfXZ5nsOSsIZ4mtgUw84/aiKGrXKf1eDr/2vc8LHhdTzlYhz0KB7IYaOZvNgqgJXZvS3kavA9rwnKVPXToyNDCgwclTFq7XEPiNw/IcGiTLtPVCeaf98FDOpfuMeZhObZ1N60KnLUA8ZyeRweGybKTZWjjHCdfrec6uGTm73gzYZQwkLx+9WI7gLsrSAMAnGE4fSSBn0a8pMSDY+itnaQO4DeWsHlBtNJ6fh2cIycpZQg7kWTtTgi0Jp3vOorph2M+XqpysA+rRigo4AJ/opoSTBKOcrWBrMBfPWdLpq+MXmn4e2Q5iUYpVCfSZbS/Yc3YyLaJBGBEf+tzjAABwz7XH55YvnHWxX6MM0H1xBkY1z1k7kGE8ZyuQ5XQANDS1f5mgNif7s2sM1c0xWE9ramugpzeckXL4jj/tCScbkcMdmuFzj+3CU3783fB3/8OHAcB2UGLtK42cDStn7fL8PGddkiNX8pbnlgIoSb/ZPhEVJ4BO0jnKWbYLVbH5UafLv6tia0CJeec5ZfbddpSzs/w6SlB1Wqq/TictyvWYHepJiMBZYZzQaZPftoHJ4vtiPwa93FOVs20GUEs9PlXpnJIsDm43VX2HyNhye7X0/Xtif6dYsEikns0beX7Osp4f7fZoAcFsfnwiUA8IVv51bQ30PGnoCwGmQufTtpfL4ecWun+0LcXLbCjAWhZ4vyTP2aoEtqMYFe6vXvJ0cPLf9ycXjiEBwQD4vZSv0Q8Ulnn7O8rjxEEmrsydqJ6z/jOdTuMBwWJqZTWPqvuuxbgjZzssAkNja1AqZxcVDAwAYJMRRCd34p6zGBDsUkw5i52HFe38pqLNgGAAltSRPHsPluY5a59RqANOyam28mgiQAYqXCRnUUW4TsCG5WhSGIJxo597jWO875TApUjynF2IrcHsY05sDebxjvues6tFzi7K+3Zr0DPvZ0pQsOm0gA9/7hwAANxz3fzIWV5PVCkDtO7AerBqQDCAcop+vYBgRDm7ojM7NgaW/EbFfWhWQwxbhJxNCQg27LnnelbnN7tUfPShc3DxYAJ/8KnHACDtewDgdqA1dSoH7SDV85yN1wV8uqKTN7aMWaVthJROYZhKBDEgmKuc5Xm2++A1LBOUIHB8B4mtwQGZkWQDd8UJ7K97ynUAAPDUG68w62IBh6xy1g9yZa0g3GNDU9urgit4Q8B+FrYtg+QWeQXaCgiWAolMrxPEigK/A02LbkxtKBFBfhr68a5yNkDOIvHIgzppytmEfEn5QfTyKgQYHiPfKzojIEZ2NUHGzudvl5clOKpKtrNja8BIXO296eXuk5MCa3Fyu2p/w3n+wvsTCkanwbc1cLeLtgazddb3Wc4jgPzu0/209yN14MDkkxKuQpAvegSeZ5qg9K5NzgrfB292y5qRs52twZrC2hosXjnLCYZTKcpZtDWIBgRbjgq0bbTtOZtia7AOnrNtWS/gx2EUsDXAqWfHt9avmhsKKkFJ/bsZU84m2ITwRkwTpZ0G6jtkbDjmoZxlnrOoGl1mQDDH1mBBJHGWZXBscwAPXzyAc7tjuDrCt37y4YtwYX8MG/0cbjtzZG754v6ngwqSD1RDTKYFUc6m13n2XbEBwSopZ6nn7LLlbwqMcnY0bUU5u+F4zsa/M3w6+7M6v9mlAuv/yezZxQJyIOrYGtAeWZ26PeWN4moqGuCrxxRY2DmjbQSNTEtRgZnOHun45VlJKk6mVp2rddo1onHRoCQFbY9lmW0n4Aw2Vz1GyW857R//mrvh2beeghfcccauVPblCs+grUHgepreTklVpuHI5kw5i56ziYMVVT4XWjZSSWiRnA29tgnJYrul9YBgHqmi7yvuEzg+9J0yAcE8cszZSUw3rJzV644QQS9RabyutYRyiRSyqwlydj5/eyYuSwh5ejskYe4+AK2+7ud5MKhZGRCMec5WVs6G3x9vXULyPCCYlG/tGKyrUxTxPJkzxzYBAODs7C9AunWkHbzy058Uio+s8B6WMyPC7Y9UhTqH9Cj4unVTzq4fa9EBAGyF9shF9JxdoHKWEAyDXgZHE85tbA0iAcFGh8TWgHZO6vivcSCJINoaLEk5Sxv2YeWs3dYWIYflI0U5u25+swBuBwoj20uBfWiQIwkpAfboRzrLfOuENmDI9OnUdJbnamswZbYGSyRn+3lmOvGL9L49tjUjZxOUs2hp8MSrj83V75srVauqGfozchYDelUZ7KHvSh27i23ynVtVT3TH1qAF5SzWObujiXlvQ3UJrd+PbvbhSXO0yOgQB34fkeRCgj2unJXJ2TAZZVFPORvfJ8/c/TTlLFUlTYj1kVZ2nWnFKjmG+5Kpx70cDsZTR8XGT4E/V8Vz1iHbSf2bge85S3NK7512DdvDPnztk69z1mlFxipny78l2eTuM5r6JLHJb1aqB5veTm0qsAQUmaQEBNOI7RhSiIsQpIBSddSeFEY5m5SDQN4iCSS9h4F93IBg/owwnDGjklpKGU/JV2hbT1DyacdZ5azbLudK1kIJxtQW7Pm07fKyBK6IpaBtBk5eau9CqZzV66Ne1txz1qGJhQvka9KUs7xMudcrnQfLJF6PGzRNvkaezt94zk3wlBuugPufcIVZFwqo5pxfUFBjnibUc1bmZk2fjM6MUANz0uVKytmM/fbLJJ+VsepYzR5GhyjwJceAYEeWFBDs5M4w6SXaMeRiYkCwOiY6K4R+256zs8bRrjB9fWnkLDlfKCL4fGwNyvsb8pw9d1jI2ZkVSEg5q9oaJFgI0I/01qDXeJqgBEOmT4q52nDgeYqZmgkVktuD5Y1DZllmiMFF2iscm6l8Hr+UQM5+tiRn752jpQGAX4arkpxY56A9Th1bg/2xtTWoomSmytlFz1JIhfXVbUc5u1XRc5Y+j2fcfGou0y07pAMHqZDkSvWc1VRR6Z6z1Z97mt+k2ykPeePid4wqZlKmU2q5oGQi7o/3MSUgGLZVlk3O9hXP2SzLTDsBB2KcZy90zlMQUhPSc0yIJyHCBEwKeAo2vZucJA7BKGf3EmwNlHsXg0YhNLM1iO8fAg5uN1bOZvy3T6qY5YQ0QrYIvA766w9cDwAA9994BfGc9Uk96fxudzT0zOX1kgeqm6J/Xm0wBFcXkD4Tog7s+xV+f2meNLjPyd25r5CEWSDdfs7sbQQiVlpXBdGyyFamJO8T7vR4OQEsB1hXhxS9t545As+59TR84wM3OOs3Bz145i2nXLtFkpewrYH7F8C+J3SAQLOa6TvK2dn5WlbOSunwd7tTznZYCLCT+tiMgNoZLtLWwL7UpxL8ZgGs6uhCxHPWdB5WtPObCluRtqMCDtsaoBJxsffMsTVI9ZxtQUUM4CskJayzcpZ+OC/MIttLCjhKxkhI6YzTztq8pt3T5zXCYFAtlQUKOrV1NJkaheXmcLmDPZuDHHZHk4UqeI/Nyn0V5ey8lY6+rUG1MjDo5wD7dgZBJXKWEI27B2UZrPI8qHI2Fu1+WUAi9oB6zjZ4pzeprUHCd4bW9c/uLA2WDl85W93WQAvYwuF4ztaYfZGqnHWns2rkrO1Mjomtge45KxMEzj5mKrTt+PUcclY+Hn9abz4x+YWB3gO3g27bCRjQT1N/VrkGXTnrkrNUfeztKwXkmUlnG3vOsnyEgJ6zaJmVGhCsCjFEvRFRHZyav/IYvB66Tt9/oZ6z4gR++bdG4Dj7KAMhAH7b4A0vuxPuv/EkPOfW0/Dsn/oN8fzalPFUi4rQ4E+QoHeelVu38HNiXgpnSrmedF3QAIjydvornIFQWXQ8Zxkhrfov51mwzu73fOVso4BgkqI1UPY00LZTlqUN4KDN2O1nj3r7Sffy//ybT4/mA8Dtf6VYdUj1GR1Qk2wPyjzRb2RYOUuLUbUBQPk3rT/LoJ1FpXSXiY6cXVNghfboEmwNKBGX4jcLYJW9scjhqPBYd3IWyfNBzw/iVAdbM/J9VW0NgspZxwajXc/ZccBzdp3J2Ty3/prnkZwVbQ3CytlRiucsU87OA1bpPF/PWdrZ3D2YmA/zMgOCAWCdOVqwcnZGzu6GydnptICP/OUsGNicyVnf1qBaGcCGng0Ill63bgrK2SrPw1HOrmgDD9+p/fHEKmcb2JRQZX7Kd4Zue9atXTCwZQOfGZKydrAuXCYcf1FK1IYioJNXYh51O8BMEQM0PzSfcrAVJyCY1tmnq7V+Y2Y34y5WOQt2eie7dOzUjs0U/eXWHX3l2ZYBwcrMG1sDhTyoQjbGAlxJHX0ffhq4punttORsfF8eECx0Hxyyogo5S+7BsJebgffU68TdUj1BU7K2acjZZjdbI1Gk3+qZAuo6+pOTc5uDHvyVe68Opp2z90E6T9CeQFnfy7Lg85OqH2cKvEDIuVYq7dcpeM1ayqlWDwC6XQSA+63g5Lj2fvVzl+bn5+9lvnK2ekCw8PXxVWnKWbd80UO0T+uzbj0N73/Ti+D0jGsJ2RpUQZ+peDWY0wlk9UQZlHS/0UJAsJaVs9qgTwbuTIRJUUDeeK7FYtCRs2sKrGjOzYibI0sKCHZqJ42cxUjXFwPKWRpUYd1tDXBUqq1OilHOjvz7Z8iuOXiFhlBHOdt5zqYD/TUv7JfXsSEQSTQ6uwT02wspZynBFSLZm8CS6fP1nKUNFyS1AVaAnJ3d1+UoZ8OzFT6xoGBgAH4Zrqr2xzJzsZZy1hKXtTxnh9RzdjUbeBskQODeqLlyltoajBOIvRPbA3jw9ithuICy1CEOq5x1bQ1izStavFNJOYecnZNytlQb2d8uiQxk2XZ9R8T6SFXjOaRQuONIp6NSQhjfDz8iffnXdmLF5BcGx3KLPqfMzjyRPGd7yvTjuqDqJgDZc5bvKx7fMB/4CJPs2TZcW4Pw+yAT2zHQJi0lZ9OVs+Vf+o4HicGEdJEYSokvEoL/bvBzOyyonEZiesG2ASt7CE2V6KooA8kqeY7aGgjnVZWzSM5CYdX487A1MPWdVh/S5fD5QxYbA2VmRga6craXZ8HBh16eee2UqgHBYkXRvy/x9AeMEE21PrnyqJ2hnPpeR/OikP8c5rtH183yMCWes5rqXA4IJp/LfefSL85/FOUKzg5MpgUsuSuYjI6cXVNwkgu9kBYB2tk7mWhrsDOMBwSj/qGr2vlNxcAoZ9u5ju1QQLDx/MiuEIbk2kLqLIecbYlATvGcRXL22JqSs9gwN7YGEjlLAgBJGCUQKouwNcBGyWS6GM9ZANuBGvbypQdweuAJJ+HRiwdwx1VHF3bOY1tuZGkNH55ZGtx1zXyDgQH45atqGcD9cdptNc9ZO5CBytvNCmT5DvF1X3Z50kCDnmGd0EQ5a6wgxhND8AWjYGcZvPM7Hqh9vg7tYsxsDZKVswohm2xrUOP9SCGfqCK2zA9ddpWzmFW89rDKMUGxY8hAS/zS781Y8GkFSCGkFgvHc5Z1qAdGOVuYdQgecC0VunK2XO9aQ8iD7VIKGeqiGt7PasrZsj6srpxNz88ZQsQMZzY+NJ8xOPRWNgualrS/jr/53Jvh6uOb8LVPuS6+cwAhpStAmnI2RJS606kDKn/lHHoQNZc01KDbGuhEI8+HVLdIqsSUAEtNEEvSIZQjaYWIXMfWgJHU2nvDPWd5OZDI8KoEtvRMtO1SHiRw24YscF805Owe1QW978Gymbl/AexzmpA6W0sC28op5TVV7e/lUfnNPychMdeqoSNn1xT8w7NIW4NN0tlLtTXAju3FQEAwOkV9sObKWWwAt0VAbQXI2YOETvM8QK8tROpRVW17tgYzD9NDamsA4KvjNwWShXpCSpgYWwO9bPCAYPOAUeQQW4N5lNc8tx2SC/u6HcSi8bZX3ws/+bX3LFTdbmwNIp6zGAxs3pYGAP6zqOrHzctMlTJELUB2Z+9LNeXs6tsa0MEaVFw1sjXoW6/zFIuUDqsF7IygejTVc1azNZhrQLCUQzJdkeiofUnnPfWaY/kwncVMVrfZgF/h9JbdtNX8hDPyG9uUdUh6Du1+ci9Dag2RkkZryllGEofAPWdT/UerEA07G314zw89Hwa9HF75T36HpJF2vFU82mm9wan4CeleeXQDXvvsm9IyEAAXFfFzZ4Ft0j6hgZAUgY8XECx33wd7nni+Qtt6eRYkByWVrqaqNMpZ6jk7hzol5sVchVh07CLYrrQ94dkaBJSzoXLQyzPv+Vdta8YCnvFzprzjrlUFu4eJ+as7SObnhah4A/tdeXQDjm8N4IaT2/a8OKBGg3w5ZdQu0z6/CTSpzWAhy5VsDSLfXMREtc1ZPXTk7JqCVzxHNhan1e73chj0MhhNimRbAySPLx1MoFBM/CnRtu7K2eHM1qAtMjIcEGz5nrNB5SwhZNoi5PBDmxIQbF2Vs/jxtCRjHeVs3NaAfqTnNe2e2lDgez4vonKQ53AwmRpbg+0FBkvUkGWZqRMWBSz3j0eUs3/8ucWRs809Z939q9ikbBILkL2DprYGq0lQbhBfXbRukOxQUoH1wd5oar8zK0pMd/ChK2fDz1CzMkjt4NaxL0rxzys9Z8lvxQ+XetOitU9q8CY9IJj9i8u0nWosIyKd9lXynKX1aZbZIDqSrUFdP8CY56zxL5zqtgZSGpKiqw5sOvGEqtgaUMKsaqT4G0/tlGkohEcIuFeelcdPiyLiKbm48ui3L/V3Q6sPQoGgnAGioD92Jpw9EBAsUa2oPebyWejHSWlyIs+mVf4oiurB4qog9n5V8pwN7DAM2RooN60cfNPP37pyVhwdYj8Tku871+few9Q6Imdp1AW97yFyf3vYh99+wwtcb2BhQE2zrqB9fpx9pX2LU97/2HE8LxSTgJhr1bCaPYwOUXjK2QUTEKioOZnsOVvuP5kWqj8m9QarOsq1asDn00S1RLE1QHI74Dm7YMIgXTlLydnFec6eW3PlLD7PCwkBwXTP2YSAYORdC3kHNwF9XnWmpFcBNnLOzzpQi/R5XSUc23RVPhKm0wL+BIOBXbcI5Ww7nrPmd4X61bwrIxsQbLuKrcFaeM5aAroV5SwJCGY8Z1f02jv4mBDFbFFQz7cIOatMqU3tQNap21M6t0g4IZypv+SUeW7TS1HOSso16dy4XYqoLlkBAEjTX5f7/mhke57ZdoJE+tBH2mTKKU+D5kdTNklpYOe9SVAcev6Ua8IBuoMEH9gQiVg1b2UaacdYj0irHq8zFX8e4IOhTZWz/vGkbAftd+TjtSnjjnI2cC91f9YsODgkEZ2OTYtAGlNhyjxsDSSvUXd7lbT8dBHO9Hp2nbrnbB5U7paes2xdxXukPX9pu5QHCY5aNWPfrMT8paq4q+UlnNCxzYHTdpeCOGr5cr+RU28dRcp3WDwu8huxTsrZjpxdU3DV2SIDggFYwiPV1oCqjrSgYLTjsGx1QVNcd0U5BeA6MhWgCbZMQDCfhBslTF2fBwapyllC+LUWECzBcxbVDetKzuI1np8FBJMI8E0SsEcCKqbCAcEWoZy150BibF7kLF4rKo6XHQxsWbABwXTlLAYD2xzkcOuV8w/g5NsaVCsDvP6o5jlrVeZYBqt4LG85tgar2XSyBLQNetbERxoHYfdGk6XN0OhQH7QD7wbkCLcV6tgajIjsscqgCSKl9UIJJwBdOVtGR5+1ESZ+55HD7RiHVT1O0CFyzlTl7LJ1B7Sd6E5t9QkNcDrZaR6FHFpH3Spn7faxIp2V+gNtKWereM7ywcRUH+OqyllEiIDSD7LHGgI7dOgCyyP/FnmkSqZvk/bhakhHOZvgOcvPQg9xCFOyHPr0a/c51qeVVLq652wJKkyZT0AwP28U9Jyx84d8Uum3oufcB51Q7UdsDfp57r1zVd/BmDK4zh13lLNZBq5yNi2NlG9VCpxZExWPxSyUnrO4Tr5f9DwHEVuDEIkfzpCcP47Oc7bD3MEbCYv0nAUA+PZn3wS//8lH4J5rTyTt38sz2Br0YHc0gUsHEzgl7ION+3VXzQIA3HR6B379+x+Es8fSAqbFYG0NdOXsMgOCpSpn25rKHvOcLYpi/T1nkWRMCggmd2qQvA4R93Tb1pz8WWmkZ0vOzuc9N6T27L5dvsrZODmLfrN3XT3/YGAAzZWzvBxX8pwlqlK0h6lSNob9HIa90jKjbmd73sD64GDSjnLW2BqMp6au7cjZ9QGdxjeeFvZ7EO1M2+VUWwMnZkCduj3hEK6cdfz3GImMv8YRtQ4/tbYbJSusus3urCl06yis5gknIBibOs3rV/rLDb5WhZy1PvC9PDMdZEN203tYYdppxv7WBbdXCIG3X1MDgtVVNjpkdmK1i0fQgEPpAxPzBf/+e7YECVPlM5VadQMAxQJXSudw/Tzp/vL5OULB71I/m5iCppq2ytmpuL0tmPdLm4KuLEsIkrMBa5qQrUGIHM4zf+C/MjkrEObuOdg5E54v93mtQ0bWUdNLoO9H1TrABHEkylluSSGdZxSzNUgcBAkdJ/1GdORsh7mDVzyLJme/6/m3AMAtlY7Z2SjJ2QuKcjZF5bdOuPVMe0o0VP9JAcHWy3O2nTziB12rbHdHNoDNupKzeK/OBwKCbUQCgqW8U7QuaaKyC4GeH4mxedlwIHGPpOTlqpzFch+yNfjQAv1mAfzytUjPWRoQDFWlVcvG9kYPDi5NFx58MRVDYt3QpnJ2Mi3MoMph+T5fDqDK2YPJ1KhcorYGCgEaVM6Sc9VRlidNT+dkijZFP68WECzFU5JOo5fI2YkaECxM1i4amucs3wbACO+Ee6QhgzIw1SDP4IClQYmBkTITSlSuKQRbVUiKaA38exM6xvHordnUqeU5KxB5YUKxVtZqgc+c4ZeURIIGCK0JtcZLUs66yCUWlOUrTHS7hxemvq1e/3CVJV+mfZ95DBbHbA2q2HaEpu+7tgYkfdDVpH5AMLYt8z1nK9saKMtmHVuZZGvAlbMNydkmM4yd+16VnJ3tPy0KYoFjt9PkaP8SB0rbVs56uyqHrhM520kg1hTLtjWoAxsUTCFnE/wxL1eEA4LNN8CSBlq5bwQUl9TWoC1yFj9QWkAwVM3286ySr+QqwZCzs8EMKbDPZiQgmHmnAr2DgaOcXQA5iyTPnG0NLnvl7FZZ357fG8FUeU+QnH3SoshZ5mlclejzPGdrBgTbrUnOou/sqn6jsK5ty3OW1uvo4byq197BB+2MHJDZFVVsDQoggVoD3xE6Jb3ONNuUvhhXU6neuFlmflf1nI1FJ6fTxR3l7MRVhNr0/GtYJugsFvo8s8x/vg4BkmhvIUHylzXrMv8eckhEXRbYVgV4/iRbgwrK2VqWBAx1yApqZWDuTZBQXFx5jHrOxhgxtprfftofCLUtMuW2OAMQznnSBiYcxSAPUBg40L1s6V3x93VsDebwDE2S2nNQyDgJWrAoAGZrkLv3Wfec1YlNfIZ9nlbVb5JzfVL9k7HfcXgBwRIHPp3zBO5lFfD7UwV4L6cFeDMheL76jnJ29i1Wv7FymY8hkZvtyNkO84dva7D6BAT6zl7c14gkVIAut/G6isB7d2k0MdERETbA0mLvmxMQLBBIyrU1aCePMc9Zammwrv7FeI1BWwMknDTlbJKtwfyVs7ThgQMM87Y1wPt2uSpn0dZgWgBcEAbEptMCPjIjZ++97sRC8sSJ8qqDNbz+qBcQjHjODqudHwd6VlU9Sn11UU3f5J3e6NvAGzjY0X2f1wdUiUh9yasoZylCCsAqU9IlhEgXu97tEtN89hl5aJSzkamUmK6UD3cfktfMngcxMspZ1mlfMXLWVc7S6xYinGv3t6oKLcPzUcLK3Qage86K5SFCHqUCy3Qd5WxqmaqrbMxrkBVUkZxi2bDI4uh7zvJ3Jf4ehqabU/Il3LawBDaFFHgrdk4tb3wgIhgQTDgXn+LPzz+eMzlrvZiVb0Fdcpbtqys4M/Xc/TxTiTy873QQqo6tiDPFXji8lnKWWQk437LEF5z78tYFFXNVTYfeT+u1TnYg213PWbQYktNNfc9Cx4WO1cRcq4iOnF1TeLYGwzVQzs46tlpAMGzcr6qf3zKBpMZkWpgKDrEStgYLV86GPWcfv7TefrMA9l7Z4EX+vcN1qnJ2kqCcJe/bvMjZLLPBRhYVEOz8ZW5rsDnomXf03K7vO/sXX74IFw8msDnI4ZYrdxaUJ658rVbX+8rZ9OOxHjq/NzZTsarbGvTFfKwKNkx9MDV1QhPlbJZlZuAN7YhW9do7+KCes9T6JhaIT2uDhY4bKcRaKlJURFxNlaKiNZ3HRM9Z3WMxM9txjx4hwMROKvid9mU3bx0rCIcs8N9tR53WYDot7i9NyXUJbvS1DhPcAK1xs8T7Nr4vvz+hY1xitQ1yNi0NOh09I8samiqPq8BrX3JShS5H3kMA/11KnepvlbPuPlzZKJ0zeC8Dg0Wh915KX6vPeH3D920LsbKjBUyT4BK57r6DnnzP8ky/Lm5rIH07+P2vCocorGG5I4HPVEix0+HQvF2rQiP/U0C/BchHaAOc1Ps6ZmtQd7YBvw/a454WHTnbYc6giqHtYW8u0RrbBtoaXBSm5gPQgGBdseSgU/O5tcHyAoJRz9mAcnYJnrOonD261uSs+05L6mQzjVlVzsYHPKhydl4BwaQ8zMuGA89zudsaAJCgYILv7IdnqtlFBQMDEGwNKp6Xfxsqec7Oyvajlw7MuqqDETjAGFKiLxO0PjC2Bg0HJ5BQx/dpVa+9gw+qFKminNX6RWHP2YbkLFkOqbU0dRpf5gqzYPAm6nWo7Ib7OKQXIYvHhpzlxGL496JBp1u7ZEEmvNvknjoESLVz4q2XVHL0fo2VtqwYkCfP1G3V8paeDp+5kRwQrK5ytsbUY0M8ZoTADhGDCyyOvTxzvtkhlblKCgYInNRpy9p9iRGi5TGJz5wF2wsODrlMMAC431mJKHSVs2rStRErO7WVs2wbfdf54I2meE1SzjYlZ+mycLg/6BY/hz8zgWyrOPii5SsV7qyJaqD5HkvkLHseeG0xW4M6MwX4+aTfNq8dOdthzhiSF2vRwcDqAq0XNM/ZiTJq3qH8gOF94UHBjOfsgslZ/KgOev50OArX1qBdz1mtQ0htDdYVnIgSbQ3MNOYwORt6p2gjcJ5EJp8KPj/lbJkuKv0ua3J25juLwdEo/vizJTm7KEsDAMnWoFpd79kaVPGcnRGXj83qhkEvq1wGrz2xBQAAZ45uVjpuUTBBz8YTY3cjBRKsAlQXoxK9TrCnDssBJSv2K3jO0u1UbBKy82hsa5BEZrleg5o6Ks9s586Qs6FpxUkqMEvI4h7l1PHyF94nr6PIUlm2joIGS+MddC8gmPJMqiqtQj6a9Bxa/ATpbFlgWxX0hHxoGPbc71fYLkAmtquA5qmyuo0U1HDgsjo5qw86e4af2nkPlXyFyNnUacuUwKZQiS/nnHq6rg2ISzoGy4qznHlpSfmyXp/zGfCxg1Fy2lUCgoXqDs3WIIPwIKH2bmAd5tz/Gvcnpmr1y048zYFna1CdQG6PnKWB2Kol5Hitk3Jo8kX2Lb/F5Rpra6CUKee49DyF6hGKdVLOrger18EDrXjWIRgYgPVNvaDYGmDDrAs4ImNz0IPRZOyRs1jhLVrRhB+akN8swHxsDfBaJ5qtwSEgZ/m9km0Nynt7MJnCZFp4H71x5GMI4JIt87I1AMD32pbdeXvOotJv+zK1NQCgylmfnP3wgoOBAfhT7KvOkmgSEAyVs9g+q1PW3/RXngh/9b5r4Dm3nq587CJArRvMusbKWTfNTjm7Phg75Kyte2N9Md1zVj9w1NhzNk5m5Rmf1ux3bvMMrQdmbYQUW4NMXubnLvMJpjeY52GChx6nbV8G+nkGo0nhtLWzzG97a4R51c487t4XSBqMWl4UNO4Eq9dFcsSS5U0gBSbTMKipnK07nlWHEDekUkbvsb7/osvj5qAH52bfkpDiTSVnKYHL7msq+WIsSkB/nlo9E5pKrg4cBVSg/Dhc5lP8+fZJwqBTE8TKTorKWdyX7Uz7ATwgWNjWQH4+OfkOmP1rtFlCgwAA6YQgRc+zNQifQ06D3qP6z17y/06FO9vBn5nCift81vUbCSpbLd1KlxZQ4FN0nrMd5g5qa7AOwcAALIl8KRIQbFWDrSwbaG1ApycC6FPB5g3stG9GlImOcraljj2SOlpli42/41vrMXAhwbM1CChnAdxo3AirRtfLBiVb5krOcluDOXvOolr0clbO4uDEuT13QGw6LeAjf1mSs/detzhyNssyp8wu1nPWPbaOF/GJ7SE8ePuVK+uLjgT044SMb6qcxToBB1W7wdP1wYTMLEHrGz4lVEIdmywtOGcyHDJL77xpak4kKXAdv8QwOSITIe4+Ng+4SyYErQkF1ZJ+LwOYx4FDzmaCclYmTqoWD9lzluRn9mOszAILkSNNb6cleRPI2QUHBKsTvZyWzZR7s+jiSNtjoYj3umLTLnvK2aoDROwUTr2jkI+h+6X5ZmdIUCVkBJc0Yt7315zPA8zYX44qfsih/A8VW4M802dk9vPcLQc53WbfZ1yuFxCMLAuH+3Y18TQHzKpCG/wKwbE6STpChmubUS0lVzkb95zl9bt6rQ6Jn56n1D1TbU9WAevLXFzmcGwN1iAYGIAlFy8qtgZItHXKHBml8nh/ZWwN7jh7FL7+qdfBvdefCO43D89ZrNy1yvbcIVDOchJEUs5SwmlvNPGIyFGKcpbaGsyRnOV5mNdgAp4HyaR5Es6rjmNbsnIWg4FtDXpwy5VHFpqnzUEP9sdTxxcyFbTMDHrVjue+2NuHkLTHbwA+716eNSZTsd7B786gJtHQYfGQPGdTOoG0M5vanVmErQGfwiupo6yXqXtsqspRq1OokoyqNkM+grhP6PcycHRzAHujfTi26fYdODnLO9mIqmSHUQMyMthNuzBtWS8gWCDNpgGtrL1CPB1utxAaxGgjIFgvoVxy2EEESmDrxy7aA5nOtPNO7VxvPC1++5M9Z03ZcUHLtVb2wypku9xnitCwBYa/TvWc9QhlPT9NYBXYSl2s/vARun99hZx18sDQy92BB+1d6/cyGAszClMQU7X69Xz8HI7HNxvYS81iL1AWqsAZmKt4LH1PsM6W1N0AZfnE6xxFAoK15zkrH9yRsx3mjnW0NTABwRRbg5TI8pczkDjjnr0mIFi/QU1dA3mewT/8+vui+w177ZOz2Ik4zJ6zvIMiBV3r93Lo52UDRPKdTfFx7i/I1sBTPc4pIBg29nCG22Ek4VKBne/HGTn7oc89BgAAd11zbOEq0K1BDx7fHdWaIeFG9q1WfvjgxmEk7XEgDEm5pqpZAP8+LXqGRof6kDxnU973Ok0wbIfUhUuGyPtw5SztlWGH0Xbw3ESC0dtTvC6FvWkkant8mGBYBeXsP/qGr4CHzu15swlC5EgzW4Nyf22qNk571WwN5FuWBbalg9phxMAFEKlT1es+8zpkBR1E0AYq3P1rZa02Nh3lrAv3PYxnjBPzqep9LWX6eDVCMUh0k5S5rUGy56ygMg8R/fOzNXD/etsrKOlDARcdWwN2z7VuSz9ga9D32ojTmm1cmai3+XPXpswKpXkr7XfsttQ6tY1BHwDf/7YKYkpi7reN12Y8ZxMI/2qes/wbK++3TuRs18peU7i2BmtCzhrlrGJrMOlsDUJAkmmXe86Ol2NrkAokEAHaI+RQJXOoPWcTAoIB0KBg/ntlomMGetv9pSln5/Oe8/pjnte06jDKWRYQ7Lc/9mUAWKylAQJJ0jr1FVfOVgEf3DiMdhf8Gpv6zQL47083s2V9IHnOJpGztGOU2J9p6ueW2ul0O+V2PY/S7SvM0oi0WAAcOh01z/y8ehHoWTqroD14zm2n4dVPvc7Pa+ZaGzhq5gakgFXOhgmn8US2YZKeSVucFD7XFHLEszVIVM7WHQDNFYIuhMz8tQMHIXXxogcLtmhAMK/8kWXl+FCgplTxvmZlkULIphLdjjIxjwwOCYpdOvgcUp7OzdYA71GCrjJqk6MQdwDugIczZT/TbQ3y3LWJoMf1hPeuzj1KJeQRKTOUeN1aZzZCa7YGSvlKQcYHSYEpZ9m+JoC3mckpp1vXc9ZTMSt3piNnO8wdtGO6LuTstvGc7WwN6gDJBN/WYLXJWQBLIG60lMdBxHP2MJCz/D2QbA3K9ehFrCtnQwMe9CO9NZxfGeJ5mFfUd96gi3kiH2bYgGC2zn3s0gH8xw99HgAAvuYrrl14nrC81qnnaR3Hp5jGwPc/jKQ9V8J1ytnLG2OiZt0bpQ9+1yGTmnZ8HCIwMO2RBgHSAoIBSFOW086tKmdJujSieqiTyvMo/V4mpFdZ9YXN/XudiphyFokJbMvyulpUapltze6nKS8JyfTyLFlBTJs3ddWNjro4lZx1rkceqHD2r5Wz+qDfE091Tpe195As83syqeh77dURStlPGbzh+eF+2OnK2Uhe+DnnJGaKvReax2hsX55dKtjh9YN2z3zlrN1G7xumV6etmVQWyfrq31W3JKU+x16oMFTAsC+Xr1SEvNXdWQP+4Jv2XOvONvDqEeXQSWLAwFVA18peU9DRpiNrEhAMvXEvRgKCdZ0/GaicvTRaDc/ZKkAFV1vWC/hh0KYxITl7bI3JWf4e1FHOmiB7IVsDsk2yTmgL7nSjbG6NSn7ftg8hCZeKY7OAeFQ5+0t/+Dk4GE/hiVcfg/uWopyd1QW1lLMZWa52fC/PFuavvCxwcrYN5ewGGxTqZrasDyai52z8vVkGgahNU6XIc93+wAR/UdRSqbYG2m4ZIbosAearuzwylt3uVXp9JGLTjeItk01Viwfu7nguCp15Y8fC6hzpdJQsbwK8xlQC1Z2GHU8XoL5aup6SDMupHTgIlblFe87S7y4/s6sgTSFw3G2pziougW3hlHGlPgq+vwpZV3rOxvNDz+sSlbQc8PomkJ8GsMpZGVUGDnqB5+pcJ7v/Wrohz1lpEKlWQLAE8pmeN0Us4Nat/vT/FGhltCrcurj68aHvK80XLfuxGCi+D3kaPAW+sl/VwZtlYnXZnA5BUAn9uihndzbCAcFGk7jK73LG9ozc3lU8Z1dZcYykQdues5pax5Czm+tMzrrPUyVnZ+slz1mjRg/0DgaOcnaetgbtew/L53Hv22Gcvp4Kq5wt34eiKOAXfu/TAADwmgeuX3jHDIDYGtSo52kDuE4ZooMPh1FRzclYTtbWASexu8HT9cFY9JyNH0fr0CI5JFgzOJ1tJY+8w+4QKDFbg0Bd507JVIjhzN/OO9jSeb2I9CuknJXuidvJJvsqU4dTgNes2Rrwaa98kFi6Z5QsbwLMU2q/g9Z/oYEOTc1XBZrvaAiOwtscEir7iy2PrnJWJ1XmqZzViP0ktWoiIc/TCtsa+Om7Cm1lX6hftmLAVFNUo7EilAXy77xPWdo96zOyO6acrSMECZUzaZ+qytksy5K+ed45leuuCqpYrlMH+P7k8nJOBjAPIr737j2vnCXx/BQNbfEXivVg9Tp4oMTNugUE49PyEeMEf8zLGZsD2dbgYI1sDVojZ2fpaBGiD4OtgaecVYgWvLd7I0E5mzDgsTHIzYcQ1e3zAM3DvPxm+XkALu+AYMeN52w5oPP7n3oU/scXL8DWoAdf8+TFWxoAUFuD6nVB3yH4q5ehzUEOF/bL5U45mwY+KLTKg4AdXEwEz9mUQHrLHh/XyL+SDLW/pWmlNCASRajcpnhKUrUd9Z+N2RhUIYkXDelah0qnvRXPWcXWgE979ZSzwumsKrTZ/XzlV1wLf/6li/Dye69O2n+jn8P52XLoE1ZXBaalkZoEnY6eQmAv+l0P2hpohKizj35PUn2v7X1xE3DJQfk8qYM8tJ7tZVlwUEYKSKgqZ71zzucB2npUq4vTy2ZoX1rf8IEhjVQtOQL5WTmK5YoDLxQp5LPz/Uloz9I2awZpBDBHSEVdBYM8/fnF8uHni6zP7YDqKGJr4A5CpGfK31U+dp2Us+vB6nXw4NoarMdjRJLkguI5OzG2BqvTeF0lmIBgjITTgiisElAJ0Zb1Qkg5uzeamBG649vrS87Sj30/z9SPv1HOCp6zKbYGm4Me/P1XPgkA5q2cpeTs4pSzmuL4coAJCDYbrPiF/16qZl9x39VLU5VvNfKcbVaGqCLrMJKz/dl0P7TWakM5y4mSVf7OdHBBBy/RczYpIBhVzi7Ipo136LR9tMBhZno6Kme9CM5ppIrWU6Wkb0bWxTxl/d9qNhYO6VKdNhrZnuq1KgF37ylTaTE9bK/wb7YcEAyfczPcd/0J+Fff8UDy/q5yNlSmmpOz9BOZHhAsM/unENiLHiug3xN+aomk5MjIdk7gTFPJWSSw2Xot2FKqv6pL1rnPP/jZFEhpTTW9KA/rKhqp2PT6kK2B9j5lWabahvRy9147A0eOcrZMu1ZAsASbnXKfdFtBXv/VCRqYMoCRAnrf63CWoUFJPruE2xDqyln3uFT4s1Pk/TrlbIe5Yx1tDY5EAoIZW4Ou8ycCn/OjFw+c9SaIwgrftxfddQYe3x3Bk65tx+PSTIMTGmOoms0zgCNzVILOG3RkM0QwoqJ2T/KcncRtDQAAvunpN9bJYiU0JdbSz3P4Az+l4tjmzHN2d+QEAnvNAp63BuM5W2OGBFVZVA0IBuCSlYfR7iLLMtjo54aIa2Ngwrc1WCF2qUMQkuds0vRL0rtZVAgNx6dO6wwHVKkx5WzqtGJ1LyR0yHRUkZxl1dIqK2cldRKtV+lWHuCoCqSAYJJa2XjOerYGetqLvp2aJy9HG7YGyV6nBJR4DBHY//ODt8Av/eFn4W8975ZaeauLrYCtQYp/AH33ONKVs/Ip+LR6+fxphDwfzEgPCJaZv3kGMC2Y7UqFeq0JYqrrKmXTVR6727g3Lz2GnwMfby/PVU9nKb1aAcESDtHIeA0DRthrBHMI9XyofdD8TmuMwPpe63aZK82t52xEOcuOS0XqN1aLUbOKWF/m4jLHOtoaoGfqpdEEptPCG303Kr9VkhasEDB4z3v//GEoisJ8xJGcbSvY1jzwQy+9E37wJXe05reGHxZpmsI5EgxsXkGnFgHqCcTVaxSacrYoCus5uwKEiqOcnWNZ5Y2G7TUm6JsClbPn98fwb//gs0sNBIbAslxPOdvMc3bovFOHj5wFKNXBSM62o5xltgad7dDagHZGqihnbVCteh23OnA6qkoeORnqdtAz59jQlGX/3HKa/NwASHrZPPsBv3inNU3VswxI1zpUyEda3VZtVuHuPc1zdraMg8k8CKF0Onv4Ym+oNg2bow6x6qWhkNkh0LLJ11H8yFfdCW94WXtt8lQk2xqo2bJ1E4cWg8JLQUlc9VtOfJbS9HotQKF2HN2rn+dwMJmqqkSAagrXKgiR4OV6um+4DIWm4ms2Khn4Kli08OvnmUho8zT4gF1dhGZy0PzF4Pu01ni/neX610Xbz6mDGhSha6HIMz/4s1pvJnyHxcMivxGLasu0ga6VvaYYrqFyFgOCFYU/NR+ABi9aodbrCuEZN5+CYS+Hzz66C5/48kWzHqfwr/p00zYbgfghlDxnD4PfLID7HvAAGRRIwPCAYLShugrvVH9BAcH4tbZBUK0rjm7ab8O//G+fAIDlBQJDYFmuM0PCJWerXwPtGB5WRfVGywQ0961dhYGeDmmQPGeTbA2IeqtGv60WNDKE76MpdDgZwlMIDdS6Hf3wPlmWsanjYTI25km7TFx1bNNb5yhnSVYlIjwV+L2hs4EkcgeFBrzeks4nkZCLQKpy1pJb9du+rpIs7Rjqpxoj2JbRDnCUs2xbpiw7++BzF/aoSjL5RKdMlvXyDHaGPRj28mBb3CFWezilfpZ2snLWLkvE7qKU+HQwSoJGKEvo5xkc2ejDsJ8HbZJccj5jdgV2Wy/P1LqJtk967JtQBU5etH3IlmGC4KTPbA3cZ52aL3LfG3Rt6H2v48XKy50+oOoPjGrXGlKIhxAa5KHQYtSsItaD1evgwbU1WI9O5tagZ/zwLh6MPVJ53NkaBLGz0Yen3XQF/M7HH4b3fOxLcPOVRwDAThVYZVuDtoEdMakxdljIWfrxDClnsSPDA4LRe7MK7xRtNM2zrNLzbA7ytVZPN8VGvwebg3Ka+18+vrfUQGAItBMY1HguzT1n7TGHNVAcVZ21MTDh2xosvy7pkIaxQ85W8JzNkBQoZ2AsApwM0fKlqY2o2hf3pQgpZ1OUcZYUcok3PhjoHx8mb5eJO646Cj/5tU+Cq49bkpZPvUVoHpgpOLkzhM89tgunjmwE07a2BvE6xpCQlXLSHEOB/JHAPZDroNY9J6R1TgvtisDxnPVU5fK77exjtvvbkj1nlTR6Sj3QyzP4F699GhyMp0E7pJBqMxw8jubNTyOkKK5qMZKK2OBHFSItzzN4x7eX94/PZKP1Df3U5JnkH2uVs1qdTX1d+YBdFSR5zpLVKcpZHuRtmZ6z9Hx1vFhTvdR7gqVHaPDVLFchZxM9ZzvlbCLe+ta3wtOe9jQ4evQonDlzBl75ylfCRz/6UWefoijgzW9+M1xzzTWwtbUFz3/+8+EjH/nIknK8OlhHW4Msy0w0+Ev7kj9mFxAshgdvvxIAAN7zsS+ZdcbW4DLqNPPGPMXhJGerK2fHK6ecbUaspZ+HEnDrUTfOE/Q9WGYgMMSmUc7WIWeJ52wdcvayUM7a6woN6qSiCwi2vnADglXwnJ094lI5W61DU/dTQw8LEaSampCrpDwSI1DfcMWWBC0g2NDzRw13WlfgU+zgm55+I7zwzrPmt+bl7XjOVqwCfvavfwW847VPg5uv3DHrMuE5Yh+Aq/WlR2LJo8Xe0FRbg7PHNuG+647DS+66qva5Uuw2OKziMXMGFFYFmy0pZ5t4zoJyX1x+zd36jJtPwfNm/S8NtDigIEKzWXHPRElpux7rrJAtwLyKPy1HIipOyX/aE07Cs2897a13AlORb00GmVi/A/hKetcixT+mDoEdIsSl86a0Z+k+9DvC0wqhip1EKup4sYZsDZznmKXbGtQNougpZ5UyW8e+YVlYaiv7Pe95D7zuda+D973vffDud78bxuMxvOQlL4GLF+2U7be97W3w0z/90/CP//E/hve///1w1VVXwYtf/GI4f/78EnO+fAzW0NYAwKqVLghBwTC407wMzg8DHrz9DAAAvO8vHoa9mXfvKvmKLgohz1kkZ5dNQjWFqwBNIWfdAY/JZLXIWcdzdo5llZ7nsBJwVUDfg2984IYl5qQEkn11SL6mnrPOlP/Dqpwl1xiagpkKHpxnFeqSDmmgna79Cp6z2JnKoHok57qzNByyLuDxpxFWfAowTyFVOavmj/zNCOs1ZN8ynnV/yuVqvz+UbHaUyTU7zgAAN195BF5w55moXzCdBeaQEEJnO2N/F4VUW4NensG/f92z4Z9801Nqn6tO8B87cEAVoqtT5qjyNDQdWcuytRTxt6XOFLH3xV2fEhAsmC4lZz3lbNrgEIVJI+D3PK/+MiYbU842Pb07vZ6QZ5l7bX22rJUVVznrEuRVkGZrYJEiFnBsDaCecpb78jbBc287DdddsQVPvfGKysf6Xut2mSug+a3RA37S4xpcnXJoqrJ+FbBUVu9d73qX8/sd73gHnDlzBv7gD/4Anve850FRFPAzP/Mz8KY3vQle9apXAQDAO9/5Tjh79iz8/M//PHznd37nMrK9Etgc9OCrnnQVXDqYwKmd4bKzk4wjG3344vl9uHTgK2exYu6UOTpuP3sErjq2CQ+d24Pf+8Qj8PSbT5ptl9N9S/GcPbb2yllKzqbYGri96BHpVa/CgEe/IbGWfh5Czh5SAq4K8D144tXH4CuuP7HczACxNahFzhKCv8aU/cvNc7YVW4NhZ2uwrqjrOYudp7yGcraOXQmATgRSeMG1yLLnz1iTxIj5c3IvT640repBu2pwA4LZ9U1sDaT0pI44DiZkWVnP4GwgWTmbqdvmCVr/xarCpqQo5f1T7ZnodHRqT7IqoIN9oXdFJWczf1/E/+db74fv+YU/hDe9/K5gHkzZYZWEo2wMphBOF8C3WQkGJHTSsMui5+zCbFLC6VJv4yag9coNJ7dt+pl7bbT886nyWuDCRp6zjppZHSkwqKWcrUFGtkZgAsC/+o4HYFrUuz+8PNO80CZDL8/8fbXBV8dKIj0v/mwV+eBOOVsTjz/+OAAAnDxZEk6f+MQn4KGHHoKXvOQlZp+NjQ148MEH4b3vfa+Yxv7+Ppw7d875d1jx9m9+KrzzOx5YqVHRGLZn/rgXDwTlLInE2EFGlmXwvNvLqSG/9bEvOeTk5eQ5e9nZGiQFBGPKWRJgbxXqCPpea1Mn2z7PYSXgqgAbvN/yjBtXohzcfvYoAADcduZI5WObBgSjZOVhLRvDlgOC8YGhy2mGRh2sUhu0rucsJRZSudn/+cFbAADgx7767oq59JESHbv87RO6WnT0UEe2CimUgatOrE7Orvb7QwPbaGrmuoO9quoZydmJnT3nRnEX0hLyuAg4tgZzPnmKFzIHBgE9sjEg0/dXp8ylDphreabkM8dXXH8CfvuHXwgve1LYSkIrO3WUytrxXoDCUHp00MLxnM1nx+r5ml9AMDyfnH5bylkAgA//vZfCB/+XFztxAPIsc61U2L11SUog24hytteAnM3kZWcfslzVc7YuOQvQrIw6KbF7XAUhawk6oMt94gH05+He8/R88T21IycdOVsdRVHA93//98NznvMceNKTngQAAA899BAAAJw9e9bZ9+zZs2Ybx1vf+lY4fvy4+Xf99dfPN+MdKgE9IC8KtgYmIFhHzgaB1gbv+diXDKENcHl59V4OAcHoxz5EsqjK2Ul6Z3wRcG0N5vfpodOaDisBVwVvfPmd8M+/9X74xgdW41v4jJtPwe/96FfCG152Z+Vjace4lucsJWeHK9P8aRXUyqAN5Sy3RhgkdEIuZ6xSG5R2RqznbEKwJaISTVXOvuFld8D73/Qi+Ib7618v9sdSlbOSspNaMlCkB+SRkZN7gvcnzzLvW+ZlfUFkSlsYKtP23WA29dLWyEZcjW2WPMucfIi2BksiHp37M+e2Ve7c87Rzve4Ft8KbX3EXfPVXXLM0AjsENyCYu835rRJi7nteBxrB21QdTo/gg0RBWwPNc5apb/n2WLpNEFNdRz1pK+DIRh9ObA9dEhrk+h0AoNfLVUsAaRCp6bPUjqfnShGc9FmdRu9danN2Rbpz3jea/izYel5GYwHWql5jsB4h6MjZGnj9618Pf/zHfwy/8Au/4G3jDHpRFCqr/sY3vhEef/xx8+8zn/nMXPLboR4weJkYEMx4p65MsVxJPOfW05BnAP/jixfgkw9fAgC5AjzMCHnOnjsk5Cwl2zcCtgYx5eyqTEOmpM48BxIc5WxnawBnjm7Ci+46uxKqWcSZY5u1OleO71gt5SwNlnU4y8ZGy8pZ/g51ytkwVqkNOnbI2QrKWUJepJKzWZbBlUc3qmeSpoHnV6c9upA66DbvaWodnk4sknSW0eXMGySKdUSz1fgcq6Akg0ZQ1CXGHO5NeHZYXvPMbbdIj4T6/i4Si1XO2uXUU119fAte++yb4MhG3wlitypwA4Kxd4OSlFoChsBpQM4qqTdWzpJ3G8tvnkAQaoNDSbYGc+r3RV+vDCI7VAcv75pav5dlal3CvWn5ulSkDNjR9SnnCClna3nOLvG95uWZ5r8gbYZe5tsaxAKCVX23fbsj+fhJRYumZWIlIkl9z/d8D/zKr/wK/NZv/RZcd911Zv1VV5VTEx566CG4+uqrzfovfvGLnpoWsbGxARsbzRqIHeYHnLYg2RpgpNau8xfG8e0BPPmGK+APPvUo/Jc//QIAlA2BVSJf5o0Uz9n1J2fTSBZLznLl7GoF2KPRshfmOXtICbjLFU0DglHVzmEtGzTSeRvKWV73rMpgz6pildqgtT1nCSmwyP4Metzqtga6Wof7C1YJnJMyhZUqcqnCJ25rAMHtqwbn/dbUaTWvwQ1s5KeH7bk89718OebADSWBDizPWznb9J6/8snXwq9+6PNwz7XH28xWIzjkLLuklGnNuLbJrbdJ66RRHUVoyHM2Z6QhHTiLDVqESPp5FUF8/zRv/3n4GbuEaOZZGTjLZF9VYdvAc5aeIOZDDpAmKuN1XsqgoJ8GzeHyviUhWwO+nk/W0Yhs+12tdl38W6EqZwW+YFWx1FZ2URTw+te/Hn7pl34JfuM3fgNuuukmZ/tNN90EV111Fbz73e826w4ODuA973kPPOtZz1p0dju0gJ2QrcG0szVIxYO3XwkAAO/+k5KcvZz8ZgHCnrPndsuyte7kLCUZQ56z2NjdH2nK2dV4nxzP2XmSs51y9tCiua0BCQh2SMtG28rZTdbwXZX6pEMcY2J7VMVz1hCRWbpytg1YWwN5e4joxO89/vWm/wY6fC75Ie+H9c2gn5OI8b5ylueRp8bfp1WD5vWq+T9WgWZrgOUNg5iWdhFUIeafz05NX2x95AYEm++5NY/eVLzuBbfCf/rbz4Wjm6vTFt4KkbNkWbu11HKlKYIWATWSp4cYv1OBxOQCJD6d3+yX+9fKszUv9fa3PesJ8HVPuQ5efJcshLODI+2dn6tCNeuCYEAwh9DNvWNTkWaxYTFMaBe55H+adYKfL7kOXTR485vmhTYZcvasAPR2aV2lPxchaId3ytlEvO51r4Of//mfh//wH/4DHD161PjIHj9+HLa2tiDLMvje7/1eeMtb3gK33XYb3HbbbfCWt7wFtre34TWvec0ys96hJnZmtgYXD3xbAxsQbLUbr6uAB2+/En763R+DP3voPABcfh3mgbE1uFyUswFbg4GmnF0tz9m+Y2uwIM/ZQ0rAXa5oqpzduByUs6Sh2oZylr5DvXw1ggt2SIPsOZvQiSTTCxdp01Z29IskpVL52y4/59bT8JavvQeeecspkxpFWOWokx+Iv3rf1fDnX7oA3/KMG+HHfuUj5vy+akdXFA17+crbdmm2Bg6xULMK0AOClX+x79zLXC9f6XQmWny9rNTGsmwNVqQZ1xiUmOFciUtCKnUA+1sHhuBl6/MACZoCiSTEeoeWlUEvd2JEaMp9STm7qACDT7nhCnjKDVeo27GZPa9yGbI16PcyldikM/QaBQRz0tfySM8Vr9f5pIQ6tgba+RcN33PW/uYDuvzaYu3SqmWax0XAvLz1VffAr37o83Dm6Cb8uz/87Fp5zi6VnH37298OAADPf/7znfXveMc74LWvfS0AAPzwD/8w7O7uwnd/93fDo48+Ck9/+tPh137t1+Do0aMLzm2HNrCzUb5ElwTl7Kop/VYZ91x7HE7uDOGRiwcAcPn59FrlrO85ezjJ2YByto/KWfdeTIwSfTXKRl9oNM0Dg87W4NBi0NAaww0IdjjLRtu+ulS1381qWS+MSGcEF5OUs0TttUjlrPGTVD3p+G+3c/yap99gk+KquGTlrLzP1ce34B983b00m6VyVlGa2gTt4jrUORtKQDB6/2pH+FbUaJ5nYObW1dLpjm6W3dcjm4vtxi4yIBi954dlUIy2ybigwCkeKiFW/m3mOSufo6mNBK03uX8mH6SR8lPmidRpkucsrwOX1Lw3gyMtlkvuravVOXyQ2CE5RVuIZsSnarFBVicNeuZ0wClTB6tCaDqA0BbcYIXuNt5i4NemxVCpa5XhKWdnx3/jAzfANz5wA/y9/185mNqRs4koEhp9WZbBm9/8Znjzm988/wx1mDtQOXtBCAiGHpmXG9FYB3mewXNuPQ2/8kd/CQCXn62B5jl7MJ7C7kwhdGxrJSy1a4N+7FOUs3ssIBgS16vi4UwbV/NVznbk7GGFo5ztVy/XSFzm2eGtM2nDtw3lbJ6XU7cPJtPOb3bNIHVGqtgaAGTw4rvOwjt+55Nw46ntlnPnA8+qEalICGwNerA7mgS9NEMBS7x0K3aS7ZR6N9CldCxdt70G5KwWiEvycqwKbSoyJzl7OVPOCvf1x7/mSfDBzzwGT77+RK281IVjazDnptWqTGFuE/SbxK24HAWpcrwdGGmeF67O7SmEX3J6s2PKafd2GYB5znq2BnJ6KQHBljUzjtaBbaeJy7S5QftDvSxznr9mf9AoIBhZVpWzZDnmkQ3AyhdRHk8L3yZAzVfCQOIiEPLL5c0OXkY10YAtU9UujJO9/Gi87x0526GDgp1Z4/SSFBBsulrTsFcdD95+pSFnLze1seY5i6pZAFgpn606SA8IJitnkbheFbXbgHrOztF3r/OcPbyg70QdchUHObYGvUOjROKg92WjpcGJzQGSs4fznh1GFEVRm5ztkY7jG152J9x19TF48I4r286iB0puiNtn+frDv/ti2B1N4IqdoZ4W+x1SOaYoZ920LWniKmclctYur8P3yLU1kAnUunWnNk1fUkQ7+RBOd9c1x+Cua47VykcTOLYG81bONlRyriJoOdrjytkEdrYNz1mNWKQq1DqpU3IJ82dJWrvf3dcchy+c+yI9UswPilCc2+J5fS6nXBh/0DmkicvO4ARXzoL7W17OvWNT4RZF5XtEVqfMUJTKV5ZlAIVu5eOd0zn/8uqE4EwKJrzkmzXRQH3PWdnWwOQvYIO4qujI2Q4LxfZQ95ztbA2q4bm3nzbLl5uiSfOcRXL26GZ/7Un+QXJAME05u1q2Bj3Hc3Z+z4Zeb6ecPVxARcq0qGtrUJaHdSBJ6qJt5SxAOTh0bm/czWpZI2gdkRSfTNpJ2hz04Ovvv77VvGkwpKdqa1Cu3xr2ou+wT3To10073ykdXju12h0MkQ6laa+DclYjRZ3OeE1SQPWc5ZG/uXK21tnmg8ECbQ1CXqOHATef3lG3xTxnmzRrDYnK1tO2Yx3iyw7ahG0N3vCyO+HWM0fgr9xzdTA/snLWxbLKRV2VYzBNtqwFIez3MtUWhdbzuFyn2eJ+E+L7pMxQpNeDjnx5BjCB9Lpk3nVOKuj7d4xZCMZsDTRhhXm3qypnFVsDBJYdKYD4qqIjZzssFCYgmOA52wUEq4YzRzfh7muOwUf+8txlR87iR240cUfeD4vfLIDbCdA8egACylkkZ1dksKPf0C+0znnWoTPcoRoGvRz2x/Wm2GMjrg0v1lWF6znbHjkL4KrfO6w2tI5IysBEE6++JjDKWbUzXCEtHhAscC0p06ml/bnCUxoQps3Z7cHqd7lUcjbgMZgKzTvTD3LE2ggrREzSgeW5BwRrIQjbKuK3fugF8MilA7j+pG+VMhMSRq+3mecsDj7xQQG6T3XkpF7wbA3IuY5t9eFHX/5E71w8P9iWdZX9TBW4pG9yXX/QELiPrO45m6vKe0lFW4dTSLEPoOdNmclF8zaZqUsxCGZqXbIq9QC9lmPM9zsUEGyjnwc8fOuVKS8oJ9uOJP1C/fMbYvVbCh0OFTAgmETOrto07HXAg7dfWZKzc5wmvorAjy1XB507ROQsJRnDtgblvdjnylkz2LEa7xPNx8I8Zzty9tBhaMjZ6uV6e/b9ObJxeJs+VEXAp3vVBSrQO+Xs+kBTzuLspRAktdciEFPOVMmPp54Jes7qx4n7E3LHCRAlHEw7ouvwPRoo1+OQsy0EBAt5FuZZFg0ItixsLNDWIHSP1hk3nNqGGxQP65KqCpCjhACtC9XjteooDUNOiFhczoS6VIt0z08pEbu+BUj1fLYBjVBulCYjoTWf3n6uB9OSPGebvju6rYGcPw1XHtmAB28v7YGu2B7M0ii3pdapWl4WDXewgSlnC33fUF+WDnpWQUw5i/e2U8526KAAOwaXBFuD0bQLCFYVr7jvGvhnv/0XcPcSvLeWCfwQap6zh4GcTfWcxW17qnJ2Nd4n2miaZzAmN5Da6neGO1QDvvt1fIvvv/Ek/LX7r1+If+ay4JCzrSlny3RWRYXfIQ6tI7KTQBAub6rsrDPN/MkPZt6UVbJVhZytSoJRz8qYNypdtQ4zOTYSbA3qlg9NLSt5ztLBt1UhJABYQLB5e84G7tFhBXpwquo6xZ+10jmU9c7zrMHj2MEl6p/t/gXwiThLdLL8GHsZ/V1Yel3d4um552hoMCdzjrPL9BmeProBAACnjuje5Brcuiq+f4o6N8syeOd3PCCeJ1U5uyr1gEPObkbIWaac1dMs/1YPCBb2nDXK2Y6c7dBBxpGArcFkxaLLrwOeePUx+MO/++JDrQSTgJWtp5zdO0TkLPnYbwY+aFQ5W5BGLSrRV8V711XOzi9PtJG0Dp3hDtWAneM66uthP4efevW9bWdppUAbqm0NTmwYW4PVGOjpEIemnN1JaCvYCOOtZikK/CrQjuqwV5OcnaOtgU1TV5pK69ZBOet46DoBwew+dcdW+bRlmx5/Vu59XSXR6CLJ2cPuOStBIyqBrW90PxgJiKAkUp0p0HRwCeswiWD1lbOzv6z2wfIVcvhYVvve5qO982fsr6SCBSg5AtciRb633/rMG+EJp7bhubdVH4zPlPTdfezysF9zwIr4FKflq9ZpWodja8D6256tAclzSDBQ9V6YNCO2Bp1ytkOHCJAsuXig2xp0HcBqOLq5/kRkVfQIOUsJyccvHR5yNtnWYLZtWpQfn4FRFZcd2lUJsEcVvPO04eiR6+0Cgh0+NCFnLwe4tgbt3CN8jwY1OyAdFg+s/znQWioEfLUWTggh8aJMZ62SH96MDFUXmheqBjpVeRiZfk/XrcP3SFMC00HPuuVCU8tKPppOPmqdbT5wn/d8c6aR2YcZlqhUts/+NuEkLQnIyh25yXV4HNdz1iVlHRW0p5yVL9p6zurlYFmkPVe5tpLm7NUSrSByd1BEU+H3nJgTfXjZk66ulRd6WVpZcwOR1WtrmTKTGhBsRSoCmo/jW2Eq0VXO6t/AvGa7w7c1WH/lbNe76bBQoGpjbzQ1npgIDO60Kkq/DqsL+iH80oV9s4y2Bnwkbx2RamtAP0x7I2sXYpWzq1HNL8pztrM1ONzAzvGqDDqsGrA+yLL27EOMrcGK1CUd4sD6n6OK5+yi3zCrmLLrHAVlpbQ44RdS7JDlFFsDsm+MrKPprcNMDlexKitn65OzdjmkJCxtDTrlLKafZe16e64yYrYFmsq00jky9y9CCthULV2r/LO2BrN1jvJcU87y/OC3nJCzfEbA0gKCuX/bgHn2s99ucC+7H4+jQX+2FWPDmU2RoJytO+PXkPfJnrOrAfo8uK0BV866nrPzUM4yWwO2Hc+/TsrZrqXdYaGgqo1LI9d3FqfhdZ3uDjHsbPTg2hNbAADwtf/kvfDhzz0OAIfNczbtg0bJ2f2xHfAwytkVGexYnOdsZ2twmIHPNGV69uUIJItCUXGrAgc5um/z+kC3NUj3nF14QDBBZRYLuKWn5f4OFV2X/EhPO88AhtQbVSRn7fJWAjG+bGhKYC1yehVo3r6cN89zNyDYKnnO0unL834/qBLzskHmLbDNzRWbGfuLoPe5qEHOUs/MnNVloYBgJl9cOWsCWun7LC0gWAskuZam/f7YbS5Rm7H6o/13MqWc0U11+zSGxE/M96oM0oRsDfirQ68tpJzNyPtTBYNexsh0d7uxQazxTi8LHTnbYaEY9nLzolzad8nZ0WS1Ahh1WF30ezn83Lc/DW46vQOfe2wXvu7t74V//4HPHSrlbJZlcHJnCP08gxPbuqF9ltmOjKOcna6W5yxVnMxVOUttDTpy9tDhjV/1RHjdC26Bp9xwxbKzspLAxm+bqnGcjt0pZ9cHmkokRTlLFXuLhOmcK7YGVfLjq9D0g7UpsrG0U2wNKHmxDoOFmp0AvX91y4V7n+myr4RbVeXssGef4dw9ZwVy7rDDEKfKNXMCr9Y5lCn59HnW4XEoIWuJWncbgD8YoRGdRnWrDGrguZaBeQQEy+yNmKVNCdk0W4O2lLPYp9oMkon0O1WTnJ39XWdbAy8gGN83MSCY9WyulhfaBwbQ36OJMptoFbH6w7gdDhWyLIPtYQ/O7Y3hAgsKhkq/tirXDocbt509Cv/+dc+G7/vFD8Jv/NkX4Xt/8YOGRDgMylkAgHe89mlwYX8cvZ6Nfg7746mjnP3gpx8DgNUhqmnDd54KPHqe7UH3iTtseM5tp+E5t51edjZWFldsD2Z/q0co1oBEbxesc30wUTxnU4KHYmdr0YFGsXT1lM52FUUN3zfU+a3vOeuSdXJAMLu8FuSsYmuQzQinaVGfEFKVswLhpNkrLBu07TJvHQn3Lb0coE3x59ubjBNaAtgfFEDUCQh229kj8PSbTsIDN5009U2P/QUQAoIpKk1ROcvOuSxbA+0eNkHOnr17z+x+fa6cJdvaGjC5YmcIf/+VTwr2vTKWpzqoOgCzKlWB6zkbCQhG3tWQaMA+/+oXudHvwd5IDhyKxP46KWe7nmuHhePIRh/O7Y3hEgsKhtPwug5gh1Qc3xrAP//W++Ef/frH4H//jY/D7kw5eljI2fuuP5G038agB7A3hv3Zx+mTX74Iv/SBzwEAwGuefsO8slcJi/KcpQEFN4ed0q/D5YWbrzwCb3v1vXDz6Z3W0rS2Bt37tC7QlbNxgvBJ1x6Dn3jlk+C+6060nKswzHTWFr4Vvq1BQDkbOC60f5ZljKwTyFmybt0CgvHL6eUZTCdFbUJII8F9D87VDQg2WGBAsF5Wjbg5DLBEpUrPAsB87j09Zx17yo1+D37xO58JAAD/+n2fAgBZ/ZruOevfi1WxNZhHQDBOUuvK2ZwF7JL3a4pvecaNwe00D8OawVclIjr1nMuEa2vAqET27tDnE1TOmv2r52dDCWQJYMlhzeppFdGRsx0Wju2ZGuOiZmvQTZ3sUAF5nsEPvOQOuPuaY/AD/98/gosHE7jh5Pays7VQoCft3rh8p372v/wPmEwLeMEdV67M9O/+gmwNemQkep7eth06rCq+4f7rW00P65fOc3Z9oAUES/FqzrIMvjnSMZ0HpE55bXKW/U5VzibZGmT27zDQKeT5SLGUWDbcbyZXFmYAULQTEIykLRFOg5p2FvPGcIEBwdqYwr9uSFXONlFsxs4BUM9zliJn+aQ2Bzzv2jX1BWKX77Ms2zJaB7YF7rHs2NuwZc1jdFlN/trK2cx/xsH9V2SkJmRrEAoIFiJnm3jdbwzoYB5/R2bK2Y6c7dBBx85MuXGR2xpMZgGMug5ghxp42ZOuhnuvOwGff3wPbmpRNbYOQJ/J/dEUPv7F8/DvP1iqZr//xXcsM1sOXOXs/N5xVN5vD/uX1XTADh3mBWtr0A12rAu0jshqT60v62tazOp+K3jdfzRESlc+he1EDiIBy2g+Vvvel4gpZ+nfqnB8Imn0eoFwipHeywLN17z9PiXV5WFHTJHZRF1n04izs015HCwbWH2Zd0eqI1AxytOYvST8WrPMeuIuq2yY59SmlpM9FicIIZuhQOvVeSlnY6Df2Nqes6x8pO6/bNDLjVnn0WsLBQQzz7+Wctam2ylnO3SoAVRuXGS2BqMVC2DUYf1wzYktuObE1rKzsXCgsm1/PIF/9Ov/A4oC4CV3nYV7rju+5JxZOJ6zNacApeCGk9tw0+kduPuaY3M7R4cOlxPuufY45Fn5t8N6oElAsGXBdFRbCLRCm5GbgzzoUx0KTiXBKhpdJZDUdKXr1iFAZSgQV9Np9hqhwu95lmWOQnWVyEmHjJ93QLA5TB1fdWTmr3zRraiJDQmop9FUOXvFztD5a4MdSQM4br4QOBDA68BSv15iWe8GrQPbAvdY7ikDODRgZVG4eVhkzBr6ja07S69qYLVWyfAGoK8HtxHkbw7t+20O5qScDdoadMrZDh2iwM7BpQPX1gBfnM7XrkOHasBRww9+5jH4T3/8eQAA+L4X377MLHmgXtLztBvYHPTgN37gwU4126FDS3j2rafhj37sJXB083B4eV8OkDoiW4PeSg9+G1Vc3vxbQTuxL737qmDZDXk6ymmXyJk3qqyctcvrppzlZQjVa/VtDSghS9azMtnLs5XtBzjK2bmTs/h3dd/Z1hFRz2VQjcwKnCL4rjflcV545xn4J695CjztpisAwJYViTxUuFl41VOuhU89fBFe9ZRrnfV5lpmp40uzNYh6A9dJk/1VfHoNOQslEUjrj0VO+3eVszVnE8z+pr7jq1IVUHHd0U2XSuS2BjTPGwHf9ar3gsIhZ7mtwSy9jpzt0CGAnQ3f1qAoChsQbIU7Dx06rCLww/TPfusvAADgr9xzNTzx6tVSjlIv6Xl3vDpitkOHdtERs+sFtInq5ZlpW2Hba1UhK2eb1+Vf95Trgts1L1QN1CMypDQt07Yr14GcpZ3cA+ZbjG3zuoSQc58VohZ/Dxwl1Op8z6nNxrxJ06qR3A8DYsSp9Yutf1NSPGc5wVQVg14Of+Xeq83vXKjbEGgbxCPZ3372KLz9m5/q7U+TqBuIqil6cyibWN6l7wCtc6gX77QonPphWcrZpp6zqXXqqtQFF0jMIN6f468OfY4pnrPt2xrMyNmG7/Qi0ZGzHRaOHSEg2GhCK7nVHDHv0GFVgY26iwcTyDKA733RbUvOkQ/H1qDzle7QoUOHuQE7jpv9HC7OZimtsqUBAFHFOR3xeu3BM8c24PSRIWz0e/DsW3VLA3pegLTOL1XvDSMkIl2zteL3H8DtaCPBj/jGB26AD3z6Mbj1zJFaaWtWBpyYyJmtwSq1Fmi+mk59j6HJNN91Bb5Dqq2B2a/BOSBOAjUlZzmkIFeI609uww+/7A646VRarIyMGBvceGo5wY/vufY4PPvWU/DCO8+2liZXzEpqWbosWSss8l2h9WPdAaSqnrOrUhfwmEEUHjnreM7q3/MmliU0IJjmla5ZPa0iVr+l0OHQAQOCXSKy+DamB3TocLmCfvC+5r5r4LazR5eYGxmUkF3VKYsdOnTocBiAbarNQY+Qs6ut3JQ6qsN+vfbg5qAHv/3DL4QCimjHV4v8Hds/A5ecnQqdP7pqOzClc1VA79WYKWd/4CXNAow6AcEChEppF2HXrQgfAQBh24e20TNKshW6AXOGVaVr25sT1inq2+lU3VQLMYXkdz//1uS06KUvK/jx1rAH/9fffEaraRpiHkk6hZzFATskqZ2ZFktSztYF5nZVSNdUhMlZbmtgr42rw6X96ozHuqSvey+xTEjf51VF10PusHCgeuMCeblH5EvYkbMdOlQDfvB6eQZ/50Wr5TWLcDvc3aenQ4cOHeaFMSFnEThraVVhO6p2XZOBvK1hL0kt7JKz8fbnAzedhK1BD+69/oSjpJQ663sjO0NsHQKCUYxaZqgoAeGqld173sszGPZ66vZlgpbHeU+TnUfQpVVHqjK2yQTLGAEMAFB4YY2a4erjmzDs5XD9yeZKV1rP3HJlPRX7KoLbTWiBvvDZS0rLRXrwtkH2VR1sWJWBmvN7AXKW/U61NWiknA3YGuSdcrZDhziObPgBwcadrUGHDrVxchYR9lVPvnZpI+kxLNJztkOHDh0uZ0xmxBrtDK2+ctbvqC6iPeiShnF8+7Nvgm95xo3Q7+VOB53bAAAA7I1tOzfUMV1FjITraQLnPisqWvxNZ9qsBh1RgpJEc1fO5tWIm8MAbBtqbcQmBI5JI6FEtf1or9gZwm/+0PPh2FZz73Za7s4c3Wic3qqA23hQUk/6JmwNe7A/njpT2hdJzo5aIWfLv6ldolUZqLkQUM5ySxB6bZRE5cBrq0NAuwHBXKyjcrYjZzssHNtCQDBs1GbZ8qJPduiwrvhbz7sZrjmxBX/tadcvOysq+o6tQfeOd+jQocO8gCoRGh051DFaVWwN509o0q9RasewP+tx0qm3Umd996C5L+GyMBq37btJlpUpywCzQGuOl2+r2WgE+gznTc5asmqup1kp/PDL7oQ/+/w5uFkRGVi/2DZsDXTMw0/4mhNbraZ3dLO/dnVKCFw17XqPU6K2/PvWr70HHjq3B2ePbYr7zRttvP9VfaVXZaCmiucsfY6USOcw73aN/NB0+TuB92zctlfJHNGRsx0Wjp3ZNLP3/vnD8G3/8vfgxlPbcGI2mjjoVLMdOlTG2WOb8Deec9OysxEEbTR1ytkOHTp0mB+s56yta1dduWmnG9tvxQvvPAMffeg83H3N8bmd1w1UVT8dqbNOlbPrhrZtDTLlPvPOdGlroHsIrgqObjZXQYYgvQ+HHa9+6nXB7a1aPQTu6zqI7FZ1llxd2HrY9+ftzQQd/Twz78NX3XM1AAD897942KaxZuRs1YBgq1IVvPDOM/Brf/IFuPuaY942flfo9zVFOVvnETq2BmwbCoPW4Z1GdORsh4XjiVcfg2Evhwv7Y3jPx77kbOsUdR06HE70OnK2Q4cOHRYCtIraJJ2WVff6loiXzX4P/u//+VkLOS9frgrJBmB/tL7kLA8I1hSulQFVzrr75ZlbVleFkEC87dX3wie/fBGecsOJuZ7H2Bqs9mu7UFg/0uaFIpQCn5q9ijhs5Cz3AqbfAbQ4kEhMOnixSOVsG6iqnF2VgZq3vfpeeMYffg5ecd813jauOnc8Z0PK2QbB/ujAsxRgEqBTznboEMQdVx2F977xhfCxh87Dpx65BJ9+5BJ8+uFL8NlHL8GLnnh22dnr0KHDHLA1m1670c8765IOHTp0mCPWUjkrTGtchBKKdnhT/Cg1SGTm3mh9OoQckoduE+ies35nmg7grlpr4RvuX4x9VFXi5nJAG8pZfN+DAcFWn5uFJ5w6XOTsjae24cqjG/DAE04CgBzoSyZn7fIilbNtwAw2JOZ7a7Aa1kQntofwHcpszaCtwRICglnP2crJLg0dOdthKTh9ZANO37oB89VDdOjQYVVw6sgG/OjL74QT28NlZ6VDhw4dDjVwSjoluVaenBWmcd94qnl089RzF0UzlaZoa7DGytmDlpWzuULIeuRsnsEw17dfLujIWR2NPGfNXz2NeXjOto0nXu1PKV9nHN0cwHt/5IWGTHNsDULkLFleN+WssTVILM+vuO9q+Hd/8Fl45i2n5pirZvACgtGZMAFy2fpJVz9nSJGLZaZTznbo0KFDhw4Mf+t5tyw7Cx06dOhw6IFEIQ3EuPK2BrO/eQbw7u97HpzbG8PVx9sNoqMhzzKYFEUj0kfyaF1nz9m2O7OOclZZD1ASFXQq/+XKTdro5cvNxyrBqF4bpeH+lbDK/pR/96/eBR//4nl4yV2Hb6YpHUyk9QKSrhL5GlLhrzq2hj3nbwwb/R78wt96xjyz1Bie52yictZ6zjazNeCHIznb8kSQuaIjZzt06NChQ4cOHTp0OCTAKfY9wnKtOjmbE9bktrNHF3puSgzXhSS22z1YY3J2iZ6zGz1LVrQReGcdYTxn14xwmifa8JzN2F8Jq1zmVj34b1ugz/jaK7bgyEYfbhe/C4TEXbO4NW96+V3w/k8+Ak++/sSys9IaPFuDxIBgxtagRjPFtTVgg32GnF0fdrYjZzt06NChQ4cOHTp0OCRAcmGQp3WMVgIt+EnWRdmBLBp5zkp48V1XwZ+/58/hCQuyZ2gTB3P0nHX9Z31bg0HfrhuvMFE2T1hbgyVnZJXQgMAxSSQQu+sQEOywg1oYHN8awO/8yAtFz1X6ONfN1uCZt5xaaYuCOvBsDZKVs+0EBONHW3J2fd7pjpzt0KFDhw4dOnTo0OGQAAmt1I7RKiDFC3LeJ29bpPi9L7oN7rjqCDz3tivbTXgBmGtAMFIUuY8kDwg2Wqf5qC0i75SzHqwvZQvK2e62rjR6jrVJBse3BuJ+IYuUDksA40DpEwl5ztpvcA1ydiDbYQBYP9+OnO3QoUOHDh06dOjQocPCgVP41spzNiGK+rwwL3/PzUEPvvbJ17Wb6ILQdl9WCwi2s9H39qMKuLbtFdYFN57chixbXFC8dUCTiO48jRAJ1Clnlw/6fEJPm+7XbyKp7tAK+JszIe9SKHBXk5kCrq2Bu80oZ9fone5KcYcOHTp06NChQ4cOhwSScvaBm04uKztJaMP3tf65M+dvh/aRObYGdv1L73YDG+V55uy7TlG228QTTu/Ae3/khfC/feOTl52VlUE7dUSKrUGT9Du0gZ5TX+jPzFHOdqzW0lEwEpQOroVm7zTxk+5sDTp06NChQ4cOHTp06LCSwI5IP8/hfW/8SvjLx3fh7muOLzlXYRhF2xIIUhspeuGnvmygBQQ7c3QTXnr3Wfh/PvIFbxsAwMFlqpwFALj6+Nays7BSaFc5q+/TKWeXDzqwGCRnHc/Zjp1dNvibQ21phjz6I0HW4BvskL7s+P4akrNdKe7QoUOHDh06dOjQ4ZCAKmevOr4JT7nhiiXnKA5Dyi5DOWssFTp2dl4IESzf9qwnmGUe1Kdt79sO6wvrOdskDTctCR03u3zkpB4IPW/6HDtudvngAxs0sGTo+2q/D3U8Z4mtATsey9G08FW9q4pOOduhQ4cOHTp06NChwyEBElrrFL26DVVc03N33Oz8oHnOAgA88+ZT8IMvuR2G/dwLGnO5BgTr4KPNOiKUxLqQOIcZtL5IfdzLUM6u0zd2EeCvTqpneBPLEsfWQFHOApTqWerDv6royNkOHTp06NChQ4cOHQ4JJM/ZdcEycrxMv9vLBUc2+nDtiS3YGOQwYB3kLMvg9S+8TTxudBnbGnRw0cZ7au1TdKzRDOhDi1TPWRroaRnfu3X8xs4TnJxNHVxDVW2dgZdhwHOWKrDH0wL6PVh5dORshw4dOnTo0KFDhw6HBNZzdn06jtZaYPHnth249blf88I7v+MB+Dv/5gPwU193b6vp9nv5/5+97w6PqvjeP9t7y2Z3k9303hOSEEJC6L33DoIICNJEKYIg3QYKHxCxi4JYsKF+7UoVxK6AgoAiKALSE9L3/f2R34y7yaYCAjrv89wnm3vnnpkz58zcmTNnztBHU1uQRFK/8BE1xSkU+I+B9RGX0U7r8q6IOXvtUdewBu5rbJy9kb6x/wRQKepsXRfXuFd8A7p7z29EZeOup3xulHYtjLMCAgICAgICAgIC/xL87Tl74xi2Lue05iuXd/3flUr+XZ52LWJs9M2cdlcl/q5GWXe3pbu7xNMHe0/Q4CYhV7wcAjcmeDu9jG6tTgeC/Zsa9A2KunrOesrqWhhKheesNxrqOSvli7OX5zlbHV2iv8dF1zuEcVZAQEBAQEBAQEDgX4Ly/++tciPEV2O4lnFfL2diKJdJqaTs3xUX9Xo4GO2WvAi6JS/iWhdD4DoCi0esuoy9yX+HNajB4Hdj2HD+1ZB6GWerT+cpq2uxsKcQnv1eqOydGhtgqNN7l7M46+k5W9kY7BVz9gYJkSOMswICAgICAgICAgL/EpTdkGEN2N9reCBYA95VSCVUckVLIyAg4At90l107lIJDcpquDc1M8rWeCAY3RhGnH8zPL2ja/omlF9jz1npDfSN/SdQueX0SQ+iguIyahzmV+N7rB4bUp1a1d+LNapKB0p6ejaXi7AGAgICAgICAgICAgL/JMrdFd4jN9KWS240uRZ5X8ZhJDdSHQsI3MiwG9V0V+f4yyNSQ3NVyiu84FODzJeXh8Blw7Nfrfnwtr8NbtfCUHojLYD+E+ie6qQ3v/2D0oLNRFQhx5G54XV+vyHfYJVcRs+MaEwl5W4yaRRezyQSCT05PJNkUgkZ1DeG2fPGKKWAgICAgICAgICAQK24sT1nr0HelcpQHyS5TPTZodNXtDwCAgJXB3+39aqN/f8m5dGrXx+j0SKcxjWHtK4xZ6+xN+SNFDron8CSXsnULMqf2sY76vXe36GFGpZvqzh7tc/aJtSvLNcawjgrICAgICAgICAg8C8AALpQVEZERLIbKB7etTwQzG5U0an8YvLXq+r97sMD0ujhDw/Q0OzQq1AyAQGBKwmppPrt01F2Pc3oGPcPl0jAF+pqnC2/xgGC5TfQoZv/BHQqOfXLDK73e366Co9Xi1Z5pYt0w0EYZwUEBAQEBAQEBARucPx+rpBmvfYDbT1wioiILFpFLW9cP2CebNfCD+nJ4Y3p5MUiCjCp6/2uw6im+/qkXIVSCQgIXGn0SHPSb2cuUYsY27UuikAN8AprUFN84GscRlSEtbky6JHmIq1STs2i/K91Ua45hHFWQEBAQEBAQEBA4AZHUWk57Tx8mpQyKU1qE0WdkwKvdZHqjGsZ1iDApG6QYVZAQODGQpt4B7Wp55ZrgX8enjbPmr4J1+J74YkIf921LcC/BGqFjLqlOq91Ma4LCOOsgICAgICAgICAwA2OSJueHuybQolOE0XZ9de6OPXC3zHnhCeSgICAwH8ZEomEJJIKz9iawhrkRvlTWrCZEpzGf7B0RK/c2pRe+Pw3mnW5B9QJCFSCMM4KCAgICAgICAgI/AvQI811rYvQIPRJDyI3QI3D/K51UQQEBAQErjEsWiWdLywlnbJ6c5VCJqU3bsv9B0tVgcZhfuJbJXBVIIyzAgICAgICAgICAgLXDIObhNDgJiHXuhgCAgICAtcBHh+WQReKSsl0A8VOFxC4XAjjrICAgICAgICAgICAgICAgIDANUem8EwV+A9Ceq0LICAgICAgICAgICAgICAgICAgICDwX4QwzgoICAgICAgICAgICAgICAgICAgIXAMI46yAgICAgICAgICAgICAgICAgICAwDWAMM4KCAgICAgICAgICAgICAgICAgICFwDCOOsgICAgICAgICAgICAgICAgICAgMA1gDDOCggICAgICAgICAgICAgICAgICAhcAwjjrICAgICAgICAgICAgICAgICAgIDANYAwzgoICAgICAgICAgICAgICAgICAgIXAMI46yAgICAgICAgICA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WFoRuGLYvn07lZSUkNvtprZt2xIR0bx58+itt96iCxcukMFgoIULF5JareadbU3p2rRpQ19++eUVpblz50569913q+SjVqs5Hy+88ALt2bOHdDodNWrUiDp37lzne+Xl5SSTyeiJJ56guLg4ysvLq9JYWRoiqjFdfdLWlq62fIiIfvrpJ4qLiyOivzuc2u79+OOPVFJSQiqViuLi4uihhx6iLVu20JEjRyg7O5tmzpxJYWFhtH//fioqKuLpiIiWLVtGW7du9UpbXFxcp3T1ofnaa6/5LBPDBx98QIcPHyaj0UhpaWmUkJBQ7X127/fff6fAwECy2+3Ut29fIiK655576O23326QXl6NNnE1db1Dhw5XRC//bbruS3996cX13rf5Sstk/k/JsT40a3vfl2xr04P9+/fTpUuXSKPRXJE+68knn6QXXniBysvL6dixY7Rp0ybq0qULbdiwgX799Vc6c+YMzZs3j3Q6Hc2ePZs2bNjglfbChQt1Srdz506f+Xhi+fLltHnzZvrtt99oyJAhdMcdd9R6Lzc3lwYMGEBlZWXUsmVLWrBgAX3wwQdUUFBAMpmMFixYQFqtluRyOU9DRD7TtW7dmr755hsqLy+vNW1dae7atYs++eSTKvl46v9LL71EBw4cIK1WSwkJCdSpU6ca723bto17kF2N8YLAlcXixYtp3bp1dOzYMSopKSGLxUIlJSVkMBiovLycLl26xCdeREQRERH0xhtv0BdffEHffPMNPffcc3Tq1ClSqVRkt9vp2LFjFBsbS40bN6Z169bx388//zwREfXo0YPeeOMNcrvdNG3aNHryySdJLpfTmTNnSKvVUlhYGP300080ZMgQ+u677+j777+nwYMHk9VqpZUrV5JUKqUff/yRYmJiiIjo1ltvpWeeeYb3dwqFgsxmM50+fZpiYmIoKiqK3n//fYqMjKSoqCh67733SKlU0kMPPUTdunUjf39/mjZtGj3yyCNe3k8SiYT0ej3l5+dTVlYWffHFF+R2u0kikZBOp6PCwkIKDAyk22+/naZOnUp33XUX3XfffV7vAyCDwUAXL14krVZLarWa8ymXy+nChQtks9no9OnTNGrUKDp58iTt2LGDCgoKeH3LZDKy2+18sUehUNDZs2eprKyMe5a6XC568MEH6eLFi/Trr7/SunXr6Pjx49x4FxAQwCeu58+f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PfccysvLsWbNGqSlpWHIkCFeaZlhoC40+/fv7+Vqv337dvTu3dvLaLVv3z7u/fPDDz9g8ODBaNSoEebNm+fz3qefforevXuje/fuyM3NxbPPPosPPvjAq5GXlpZi48aNUKlUePvtt7m+uN1uZGRkYObMmQAqJsqffPIJBg0aBLPZjG+++YbrFUvndrtRVlYGt9vNab7zzjs10nS73diwYQNMJhO++eYbnvb333+H1WrF22+/jalTp+KHH37gNNxuNyZOnIjQ0FCv+4cPH+YrUk888QTf0jp79mzodDrExMQgICAAMpkMycnJfEsa08vJkydzvRw/fryXXtY1XUlJCSZPnszbRGRkJG8TLC1rEyUlJRg/fvwV03WiihVvhUKBl19+mRvXmjdvDoVCgY0bN/rUy9WrV3O9PHr0aI26vnr1aq7rnmnrQrO0tPQf0fWcnBw8++yzeP/99710/aOPPuL6+/XXX/NFqg4dOqB58+YICwvjsqrct/mSY11142rIu7y8HN999x3/sLO+jdV7kyZNoFQqsXHjRmzduvWKyrE+ulFXme/btw9ffPEFLl68yGWbm5uLe++9F1988UUVmd90000YNWoU3nvvPQwePBhNmzbF2rVra+2zmMw905WUlMDtduOPP/7gHm6jRo1CZGQkWrZsiQ4dOiAzMxMvvvgiZDIZIiMjkZKSwg33Op0OLpcL/v7+SElJwcWLF7F27VoQVXhssXRarRYulwstW7bEwIEDIZfL0bZtWxBVeFMcOXIEAPDmm2/yCcOKFSuwe/duJCcnczrMMOnn58fvDR8+nE9yWF+/bt06SCQS2O12xMXFoV27dnygyxZAunbtitGjRyM+Ph5msxktWrQAACxYsAByuRy9e/fG4MGD0aVLF5SWlmLs2LFeacvKymql2bx5cwDAPffcA4VCgQEDBqBXr17o2rUrFixYAKvVinPnzmHw4MFITk5GVFQUDhw4wPW/ffv2MBqNmD9/PoxGIz777DOvewqFAoGBgbjtttswevRorFq1iqdryHihcjsDgNdff53fE2g4/vjjDzz88MM4fvw49u3bh7i4OO7d6TnB8jWxCQwMRKdOnfhEhnnD1Gci29BLIpHwSWDlPH0Zj3xdcXFxfAu91Wr14tdut0OpVCI6OrrKeyNHjsRtt90GIsJtt90GqVSKIUOG8Mks2w5b18vT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x/P31LGePXtyz9AePXpwPWdzK4lEgvHjx2PXrl31lsldd93FaUycOLHecnU4HNDr9WjatCmUSiWGDBmCCRMmYNiwYdXKVa1Wo1WrVly/2CHviYmJ/HyEm2++GbfddpvXQXFEhDFjxnDZde/enYepWrVqFYKDg6HT6bBixQpeb8zDdPHixVi3bh2kUikeeeQRxMXFYfTo0fDz88Py5ctx//334/Dhw3wXCjtQ8c4770RMTAxsNhs/uNhgMOD+++9HREQEevToAafTieXLl2P27Nlo0aIF2rRpA5lMxmnMmDED0dHR8Pf3x+jRoxETEwOj0YgHHngATqcTgYGBeO+997Bz50488cQTfM7fsWNHxMXF8TMNPMfLLISW2+2+7HBawjh7DVDZmn7TTTdhwoQJcLlcePHFF7nH0aVLl+ByuRAWFuaVjhn+9u3bB6Biwux0Onk6lrZnz548HmR9aG7atAlr166FyWRCcHAw91gpLi7G//73P+h0Onz++ec4e/YsioqK8PHHHyMzMxOffPIJPvvsM9xyyy24//77AQDffvstPvvsM8TGxqJx48YoLy/HsWPHsGfPHn7IE4uz++abb2L06NEYMWIEduzYAZVKhZUrV/5n+B45ciS2bdsGlUqF//3vf5fNT33qqDbetVotvvnmG57/xx9/jLS0NGzYsAEjRozA4sWLAVTEX/n555/RvXt3xMTE4N577wUAzjuLe+lyubB27Vq43W4MHjyYn5aYnp6Ohx56iBuf1Wo1lEolNm/ejCNHjvAV/759+9aYrnPnztDr9ejbty/27t2LV155BeHh4Tzum9FoxObNm/HUU08hLS0NKpUK3bt3x969e3HkyBEsWbIEfn5+SEhIwNatW3H27FkUFBSgTZs2uO222zBmzBiYzWaEh4fD4XDgpZdewpgxY/gEyc/PDy+99BKmTJni5WEQEBAAo9GIlStX8lASV5KfutbR1eLbarViw4YNmDJlCh/MMM+ojIwMHqNz0qRJiImJgcViwf33389XZNlqOTuMKD09HUqlkhtyfvvtNx7+ITY2FidPnkR+fj5OnDjBT6t94okneLrk5GS0b98erVu3Rn5+Pp555hnuyfnQQw+hrKwMJ06cwJAhQ3g84j/++AOnTp1CUVER5s+fj3bt2mHSpElISkrCypUrAQD5+fmYNWsWYmNjuQdkWVkZ8vPz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zJGnMg22fbyyvtWkq77K7UtnL4dGdeETpFIpdyyprV0qFAqv9l9fmbDfvuTKbCR10dnq2pNSqbwicq1LGa7UdSXyq2u/VTmdQqGA2WzGbbfdhry8PBCR10JJz549AVx5wywAVPgnC1xV5Ofnk0ajocjISO4aHxMTQ35+flRQUEDPPfccAaDg4GAymUzUt29fys3N5VvJ/fz8qLS0lP7880/q1KkTZWZmUuPGjclsNlOzZs3o1KlTVFJSQsnJyeTn50dut5v27dtHAMjlctWZpsPhIH9/f2revDmdO3eOSktL6dixYzR06FBKT0+nLVu20IEDByg4OJg6duxIo0ePplatWhERUaNGjejhhx+mHTt2kMViIZlMRnl5eXTy5EmyWCyUl5dHzZs3px49evAtnqWlpXTixAm69957yWg00tixY6l58+akVCrpoYce4mU8ceLEv5Lvjz/+mDIyMsjf35/y8vJIoVDQmjVrKDU19bL4qWsdpaenU0BAQLW8JyQk0KlTp8hqtZJWq6X27dvTxIkTKSsri6RSKb3zzjv0+eefk7+/P/Xp04cUCgUlJCRQcXExnTx5kux2O7Vq1Yratm1LRBXbIN58800aPHgwrVmzhvz8/Dg/p0+fpsjISPLz86PCwkLSarX00EMPUX5+PhERZWdnU3BwMJWWlnK+PdMREf3++++k0+l4eIiSkhKKiooiPz8/kkqlpNPpqLS0lNxuNx07doy0Wi2FhoYSACotLaVDhw7RgAEDqGnTpvTXX3/RgQMHyGazUWBgID300EO0ePFiL5l/9dVXfJtbXFwcAaA77riDpFIpZWZmUl5eHhFVbMt47rnnqLi4mHJzc0mr1VLr1q05PxEREZfFz4ULF+pcR0ePHr2ifDdp0oSKiorI4XBQYmIipaenU/v27am8vJzUajVdunSJXn75ZUpJSSGtVkujRo0if39/KioqoqeeeorCwsLI7XaTWq2m++67j4qLi8lisZBSqaSQkBAuq6ysLBo+fDhJJBLavHkz/fzzzxQaGkparZYef/xxGjBgAJ05c4ZCQkJowIABRES0detWslgsFBwcTLfccgs5nU7q0aMHnT17ln755Rdyu920Zs0aatWqFb333nt04sQJKisro5iYGGrUqBFlZmaSyWSirKwsevLJJ2njxo1kMBjowQcfpKCgILpw4QKVlZWR2+2m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nBUQEBAQEBAQEBAQEBAQEBAQEBAQuAkQwVkBAQEBAQEBAQEBAQEBAQEBAQEBgZsAEZwVEBAQEBAQEBAQEBAQEBAQEBAQELgJEMFZAQEBgUaMESNGkCRJJEkSqdVq8vHxoc6dO9OyZcvIZrPVWs4bb7xBbm5u16+gAgICAgICAgICTQaiDyogICBw4yCCswICAgKNHF27dqXjx4/TwYMH6ZNPPqH27dvT5MmTqWfPnlRRUXGziycgICAgICAgINAEIfqgAgICAjcGIjgrICAg0Mih1WrJ19eXAgICKD09ne6//356//336ZNPPqE33niDiIgWL15MSUlJ5OLiQkFBQTR+/Hi6dOkSERFt3ryZRo4cSefPn+czIB599FEiIiorK6OZM2dSQEAAubi4UIsWLWjz5s03R1EBAQEBAQEBAYFGA9EHFRAQELgxEMFZAQEBgVsQHTp0oJSUFFq7di0RESkUCnruuefol19+oTfffJO++uormjlzJhERZWVl0TPPPEMmk4mOHz9Ox48fp+nTpxMR0ciRI+nbb7+ld999l37++Wfq378/de3alf7444+bppuAgICAgICAgEDjhOiDCggICDQ8JAC42YUQEBAQEHCOESNG0Llz52j9+vVVrg0aNIh+/vln2rNnT5Vr7733Ho0bN44KCwuJqDLf15QpU+jcuXP8nj///JOioqLoyJEj5O/vz8936tSJmjdvTvPnz29wfQQEBAQEBAQEBBo/RB9UQEBA4MZBdbMLICAgICBQPwAgSZKIiGjTpk00f/582rNnD124cIEqKiqopKSELl++TC4uLk6f37VrFwGg6Ohou/OlpaXk6el53csvICAgICAgICBw60H0QQUEBAQaFiI4KyAgIHCLYu/evRQWFkaHDh2i7t270z333ENz584lDw8P2rJlC40ePZrKy8urfd5ms5FSqaSdO3eSUqm0u+bq6nq9iy8gICAgICAgIHALQvRBBQQEBBoWIjgrICAgcAviq6++ot27d9PUqVNpx44dVFFRQU8//TQpFJWpxFetWmV3v0ajIavVancuLS2NrFYrnTp1itq2bXvDyi4gICAgICAgIHBrQvRBBQQEBBoeIjgrICAg0MhRWlpKJ06cIKvVSidPnqRPP/2UFixYQD179qThw4fT7t27qaKigp5//nnKy8ujb7/9ll555RU7GaGhoXTp0iX68ssvKSUlhQwGA0VHR9PQoUNp+PDh9PTTT1NaWhoVFhbSV199RUlJSdS9e/ebpLGAgICAgICAgMDNhuiDCggICNwYKG52AQQEBAQEasann35Kfn5+FBoaSl27dqVNmzbRc889R++//z4plUpKTU2lxYsX05NPPkmJiYn0zjvv0IIFC+xkZGVl0T333EMDBw4ki8VCCxcuJCKif/3rXzR8+HC67777KCYmhvLz82nr1q0UFBR0M1QVEBAQEBAQEBBoJBB9UAEBAYEbAwkAbnYhBAQEBAQEBAQEBAQEBAQEBAQEBARuN4iZswICAgICAgICAgICAgICAgICAgICNwEiOCsgICAgICAgICAgICAgICAgICAgcBMggrMCAgICAgICAgICAgICAgICAgICAjcBIjgrICAgICAgICAgICAgICAgICAgIHATIIKzAgICAgICAgICAgICAgICAgICAgI3ASI4KyAgICAgICAgICAgICAgICAgICBwEyCCswICAgICAgICAgICAgICAgICAgICNwEiOCsgICAgICAgICAgICAgICAgICAgcBMggrMCAgICAgICAgICAgICAgICAgICAjcBIjgrICAgICAgICAgICAgICAgICAgIHATIIKzAgICAgICAgICAgICAgICAgICAgI3ASI4KyAgICAgICAgICAgICAgICAgICBwE/D/Jvxqn5PAL54AAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1400x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Filter the data for recession and non-recession periods\n",
    "recession_data = data[data['Recession'] == 1]\n",
    "non_recession_data = data[data['Recession'] == 0]\n",
    "\n",
    "# Set up the subplots\n",
    "fig, axes = plt.subplots(1, 2, figsize=(14, 6), sharey=True)\n",
    "\n",
    "# Plot GDP variations for recession period\n",
    "sns.lineplot(data=recession_data, x='Date', y='GDP', ax=axes[0])\n",
    "axes[0].set_title('GDP During Recession Period')\n",
    "axes[0].set_xlabel('Date')\n",
    "axes[0].set_ylabel('GDP')\n",
    "axes[0].tick_params(axis='x', rotation=45)\n",
    "\n",
    "# Plot GDP variations for non-recession period\n",
    "sns.lineplot(data=non_recession_data, x='Date', y='GDP', ax=axes[1])\n",
    "axes[1].set_title('GDP During Non-Recession Period')\n",
    "axes[1].set_xlabel('Date')\n",
    "axes[1].set_ylabel('GDP')\n",
    "axes[1].tick_params(axis='x', rotation=45)\n",
    "\n",
    "# Adjust layout\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "6512d081-52dd-4d09-9f50-ec69145722c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Filter the data for recession and non-recession periods\n",
    "recession_data = data[data['Recession'] == 1]\n",
    "non_recession_data = data[data['Recession'] == 0]\n",
    "\n",
    "# Set up the subplots\n",
    "fig, axes = plt.subplots(1, 2, figsize=(14, 6), sharey=True)\n",
    "\n",
    "# Plot GDP variations for recession period\n",
    "sns.lineplot(data=recession_data, x='Date', y='GDP', ax=axes[0])\n",
    "axes[0].set_title('GDP During Recession Period')\n",
    "axes[0].set_xlabel('Date')\n",
    "axes[0].set_ylabel('GDP')\n",
    "axes[0].tick_params(axis='x', rotation=45)\n",
    "\n",
    "# Plot GDP variations for non-recession period\n",
    "sns.lineplot(data=non_recession_data, x='Date', y='GDP', ax=axes[1])\n",
    "axes[1].set_title('GDP During Non-Recession Period')\n",
    "axes[1].set_xlabel('Date')\n",
    "axes[1].set_ylabel('GDP')\n",
    "axes[1].tick_params(axis='x', rotation=45)\n",
    "\n",
    "# Adjust layout\n",
    "plt.tight_layout()\n",
    "\n",
    "# Save the plot as \"Subplot.png\"\n",
    "plt.savefig('Subplot.png')\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "be9740a2-5328-4d41-80d1-51ac8ec479c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Set up the plot\n",
    "plt.figure(figsize=(10, 6))\n",
    "\n",
    "# Create the bubble plot\n",
    "sns.scatterplot(data=data, x='Seasonality_Weight', y='Automobile_Sales', size='Seasonality_Weight', sizes=(20, 200), alpha=0.5, hue='Vehicle_Type')\n",
    "\n",
    "# Add titles and labels\n",
    "plt.title('Impact of Seasonality on Automobile Sales')\n",
    "plt.xlabel('Seasonality Weight')\n",
    "plt.ylabel('Automobile Sales')\n",
    "\n",
    "# Add a legend\n",
    "plt.legend(title='Vehicle Type')\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "23bb07a0-2e38-42c4-8808-bb28647e3c4c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Filter data for recession periods\n",
    "recession_data = data[data['Recession'] == 1]\n",
    "\n",
    "# Set up the plot\n",
    "plt.figure(figsize=(10, 6))\n",
    "\n",
    "# Create the scatter plot\n",
    "plt.scatter(recession_data['Price'], recession_data['Automobile_Sales'], alpha=0.5, c='blue', label='Recession Period')\n",
    "\n",
    "# Add titles and labels\n",
    "plt.title('Average Vehicle Price vs. Sales Volume During Recessions')\n",
    "plt.xlabel('Average Vehicle Price')\n",
    "plt.ylabel('Automobile Sales')\n",
    "plt.legend()\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "35920a40-389c-4d3f-b88c-bb2d84834ac7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set up the plot\n",
    "plt.figure(figsize=(10, 6))\n",
    "\n",
    "# Create the scatter plot\n",
    "plt.scatter(recession_data['Consumer_Confidence'], recession_data['Automobile_Sales'], alpha=0.5, c='green', label='Recession Period')\n",
    "\n",
    "# Add titles and labels\n",
    "plt.title('Consumer Confidence vs. Automobile Sales During Recession Period')\n",
    "plt.xlabel('Consumer Confidence')\n",
    "plt.ylabel('Automobile Sales')\n",
    "plt.legend()\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "12019d89-dd45-4cc9-91a7-bc93ef4369bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Aggregate advertising expenditure for recession and non-recession periods\n",
    "recession_expenditure = data[data['Recession'] == 1]['Advertising_Expenditure'].sum()\n",
    "non_recession_expenditure = data[data['Recession'] == 0]['Advertising_Expenditure'].sum()\n",
    "\n",
    "# Prepare data for pie chart\n",
    "labels = ['Recession', 'Non-Recession']\n",
    "sizes = [recession_expenditure, non_recession_expenditure]\n",
    "colors = ['#ff9999','#66b3ff']\n",
    "explode = (0.1, 0)  # explode the 1st slice (Recession)\n",
    "\n",
    "# Create the pie chart\n",
    "plt.figure(figsize=(8, 8))\n",
    "plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)\n",
    "plt.title('Advertising Expenditure During Recession and Non-Recession Periods')\n",
    "plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "41491653-bd8c-4fc4-9eb8-1a0f6b06d087",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Load the data\n",
    "data = pd.read_csv('C:/Users/Admin/historical_automobile_sales.csv')\n",
    "\n",
    "# Filter data for recession period\n",
    "recession_data = data[data['Recession'] == 1]\n",
    "\n",
    "# Group by Vehicle Type and sum Advertising Expenditure\n",
    "ad_expenditure_by_vehicle = recession_data.groupby('Vehicle_Type')['Advertising_Expenditure'].sum()\n",
    "\n",
    "# Plotting the pie chart\n",
    "plt.figure(figsize=(10, 7))\n",
    "plt.pie(ad_expenditure_by_vehicle, labels=ad_expenditure_by_vehicle.index, autopct='%1.1f%%', startangle=140)\n",
    "plt.title('Total Advertisement Expenditure by Vehicle Type during Recession Period')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "0ba45b7a-dad1-4f55-8dd9-43a2fe9ea78b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Load the data\n",
    "data = pd.read_csv('C:/Users/Admin/historical_automobile_sales.csv')\n",
    "\n",
    "# Filter data for recession period\n",
    "recession_data = data[data['Recession'] == 1]\n",
    "\n",
    "# Group data by Year and Vehicle Type\n",
    "grouped_data = recession_data.groupby(['Year', 'Vehicle_Type']).agg({'unemployment_rate': 'mean', 'Automobile_Sales': 'mean'}).reset_index()\n",
    "\n",
    "# Create line plots\n",
    "plt.figure(figsize=(14, 8))\n",
    "\n",
    "# Plot for each vehicle type\n",
    "for vehicle_type in grouped_data['Vehicle_Type'].unique():\n",
    "    vehicle_data = grouped_data[grouped_data['Vehicle_Type'] == vehicle_type]\n",
    "    plt.plot(vehicle_data['Year'], vehicle_data['unemployment_rate'], marker='o', label=f'{vehicle_type} Unemployment Rate')\n",
    "    plt.plot(vehicle_data['Year'], vehicle_data['Automobile_Sales'], marker='o', label=f'{vehicle_type} Sales')\n",
    "\n",
    "plt.title('Effect of Unemployment Rate on Vehicle Sales during Recession Period')\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Value')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "9f584ef7-2779-4cc1-8325-6def83847797",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'folium'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[83], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mfolium\u001b[39;00m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mfolium\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m Choropleth, Marker\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mfolium\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mplugins\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m MarkerCluster\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'folium'"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import folium\n",
    "from folium import Choropleth, Marker\n",
    "from folium.plugins import MarkerCluster\n",
    "\n",
    "# Load the data\n",
    "data = pd.read_csv('C:/Users/Admin/historical_automobile_sales.csv')\n",
    "\n",
    "# Filter for recession period\n",
    "recession_data = data[data['Recession'] == 1]\n",
    "\n",
    "# Aggregate sales by region\n",
    "sales_by_city = recession_data.groupby('City')['Automobile_Sales'].sum().reset_index()\n",
    "\n",
    "# Create a base map\n",
    "map = folium.Map(location=[39.8283, -98.5795], zoom_start=5)  # Centered on the US\n",
    "\n",
    "# Optionally, you can use marker clusters for better visualization\n",
    "marker_cluster = MarkerCluster().add_to(map)\n",
    "\n",
    "# Add markers for each city\n",
    "for idx, row in sales_by_city.iterrows():\n",
    "    folium.Marker(\n",
    "        location=[row['Latitude'], row['Longitude']],  # Ensure you have Latitude and Longitude in your data\n",
    "        popup=f\"{row['City']}: {row['Automobile_Sales']}\",\n",
    "        icon=folium.Icon(color='blue', icon='info-sign')\n",
    "    ).add_to(marker_cluster)\n",
    "\n",
    "# Save the map to an HTML file\n",
    "map.save('highest_sales_region_recession.html')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "4ce804e5-91e7-42c3-8811-947a6714d5e9",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'pyodide'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[85], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mpyodide\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mhttp\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m pyfetch\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28;01masync\u001b[39;00m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdownload\u001b[39m(url, filename):\n\u001b[0;32m      4\u001b[0m     response \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mawait\u001b[39;00m pyfetch(url)\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'pyodide'"
     ]
    }
   ],
   "source": [
    "from pyodide.http import pyfetch\n",
    "\n",
    "async def download(url, filename):\n",
    "    response = await pyfetch(url)\n",
    "    if response.status == 200:\n",
    "        with open(filename, \"wb\") as f:\n",
    "            f.write(await response.bytes())\n",
    "\n",
    "path = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data%20Files/us-states.json'\n",
    "await download(path, \"us-states.json\")\n",
    "\n",
    "filename = \"us-states.json\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "38872db9-5d90-4eb3-b3fe-e8cd6f9a22a4",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'sales_by_year' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[87], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m sales_by_year\u001b[38;5;241m.\u001b[39mplot(kind\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mline\u001b[39m\u001b[38;5;124m'\u001b[39m, marker\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mo\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      2\u001b[0m plt\u001b[38;5;241m.\u001b[39mtitle(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mAutomobile Sales Fluctuations from Year to Year\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      3\u001b[0m plt\u001b[38;5;241m.\u001b[39mxlabel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mYear\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'sales_by_year' is not defined"
     ]
    }
   ],
   "source": [
    "sales_by_year.plot(kind='line', marker='o')\n",
    "plt.title('Automobile Sales Fluctuations from Year to Year')\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Total Automobile Sales')\n",
    "plt.grid(True)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "ef7a8735-d784-4bc0-b469-ab135485157a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting dashNote: you may need to restart the kernel to use updated packages.\n",
      "\n",
      "  Downloading dash-2.17.1-py3-none-any.whl.metadata (10 kB)\n",
      "Requirement already satisfied: Flask<3.1,>=1.0.4 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash) (3.0.3)\n",
      "Requirement already satisfied: Werkzeug<3.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash) (3.0.3)\n",
      "Requirement already satisfied: plotly>=5.0.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash) (5.22.0)\n",
      "Collecting dash-html-components==2.0.0 (from dash)\n",
      "  Downloading dash_html_components-2.0.0-py3-none-any.whl.metadata (3.8 kB)\n",
      "Collecting dash-core-components==2.0.0 (from dash)\n",
      "  Downloading dash_core_components-2.0.0-py3-none-any.whl.metadata (2.9 kB)\n",
      "Collecting dash-table==5.0.0 (from dash)\n",
      "  Downloading dash_table-5.0.0-py3-none-any.whl.metadata (2.4 kB)\n",
      "Requirement already satisfied: importlib-metadata in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash) (7.0.1)\n",
      "Requirement already satisfied: typing-extensions>=4.1.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash) (4.11.0)\n",
      "Requirement already satisfied: requests in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash) (2.32.2)\n",
      "Collecting retrying (from dash)\n",
      "  Downloading retrying-1.3.4-py3-none-any.whl.metadata (6.9 kB)\n",
      "Requirement already satisfied: nest-asyncio in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash) (1.6.0)\n",
      "Requirement already satisfied: setuptools in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash) (69.5.1)\n",
      "Requirement already satisfied: Jinja2>=3.1.2 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from Flask<3.1,>=1.0.4->dash) (3.1.4)\n",
      "Requirement already satisfied: itsdangerous>=2.1.2 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from Flask<3.1,>=1.0.4->dash) (2.2.0)\n",
      "Requirement already satisfied: click>=8.1.3 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from Flask<3.1,>=1.0.4->dash) (8.1.7)\n",
      "Requirement already satisfied: blinker>=1.6.2 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from Flask<3.1,>=1.0.4->dash) (1.6.2)\n",
      "Requirement already satisfied: tenacity>=6.2.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from plotly>=5.0.0->dash) (8.2.2)\n",
      "Requirement already satisfied: packaging in c:\\users\\admin\\anaconda3\\lib\\site-packages (from plotly>=5.0.0->dash) (23.2)\n",
      "Requirement already satisfied: MarkupSafe>=2.1.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from Werkzeug<3.1->dash) (2.1.3)\n",
      "Requirement already satisfied: zipp>=0.5 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from importlib-metadata->dash) (3.17.0)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from requests->dash) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from requests->dash) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from requests->dash) (2.2.2)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from requests->dash) (2024.7.4)\n",
      "Requirement already satisfied: six>=1.7.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from retrying->dash) (1.16.0)\n",
      "Requirement already satisfied: colorama in c:\\users\\admin\\anaconda3\\lib\\site-packages (from click>=8.1.3->Flask<3.1,>=1.0.4->dash) (0.4.6)\n",
      "Downloading dash-2.17.1-py3-none-any.whl (7.5 MB)\n",
      "   ---------------------------------------- 0.0/7.5 MB ? eta -:--:--\n",
      "   ---------------------------------------- 0.0/7.5 MB ? eta -:--:--\n",
      "   ---------------------------------------- 0.0/7.5 MB ? eta -:--:--\n",
      "   ---------------------------------------- 0.0/7.5 MB 245.8 kB/s eta 0:00:31\n",
      "   ---------------------------------------- 0.0/7.5 MB 245.8 kB/s eta 0:00:31\n",
      "   ---------------------------------------- 0.1/7.5 MB 326.8 kB/s eta 0:00:23\n",
      "    --------------------------------------- 0.1/7.5 MB 392.2 kB/s eta 0:00:19\n",
      "    --------------------------------------- 0.2/7.5 MB 510.2 kB/s eta 0:00:15\n",
      "   - -------------------------------------- 0.3/7.5 MB 655.4 kB/s eta 0:00:12\n",
      "   - -------------------------------------- 0.3/7.5 MB 654.7 kB/s eta 0:00:12\n",
      "   - -------------------------------------- 0.4/7.5 MB 764.2 kB/s eta 0:00:10\n",
      "   -- ------------------------------------- 0.4/7.5 MB 793.8 kB/s eta 0:00:09\n",
      "   -- ------------------------------------- 0.5/7.5 MB 861.1 kB/s eta 0:00:09\n",
      "   -- ------------------------------------- 0.5/7.5 MB 861.1 kB/s eta 0:00:09\n",
      "   -- ------------------------------------- 0.5/7.5 MB 861.1 kB/s eta 0:00:09\n",
      "   -- ------------------------------------- 0.5/7.5 MB 861.1 kB/s eta 0:00:09\n",
      "   -- ------------------------------------- 0.5/7.5 MB 861.1 kB/s eta 0:00:09\n",
      "   -- ------------------------------------- 0.5/7.5 MB 861.1 kB/s eta 0:00:09\n",
      "   -- ------------------------------------- 0.5/7.5 MB 861.1 kB/s eta 0:00:09\n",
      "   -- ------------------------------------- 0.5/7.5 MB 861.1 kB/s eta 0:00:09\n",
      "   -- ------------------------------------- 0.5/7.5 MB 861.1 kB/s eta 0:00:09\n",
      "   -- ------------------------------------- 0.5/7.5 MB 499.0 kB/s eta 0:00:14\n",
      "   ---- ----------------------------------- 0.8/7.5 MB 733.5 kB/s eta 0:00:10\n",
      "   ---- ----------------------------------- 0.9/7.5 MB 870.4 kB/s eta 0:00:08\n",
      "   ---- ----------------------------------- 0.9/7.5 MB 870.4 kB/s eta 0:00:08\n",
      "   ---- ----------------------------------- 0.9/7.5 MB 870.4 kB/s eta 0:00:08\n",
      "   ---- ----------------------------------- 0.9/7.5 MB 870.4 kB/s eta 0:00:08\n",
      "   ----- ---------------------------------- 1.0/7.5 MB 807.4 kB/s eta 0:00:08\n",
      "   ----- ---------------------------------- 1.1/7.5 MB 855.3 kB/s eta 0:00:08\n",
      "   ------ --------------------------------- 1.2/7.5 MB 865.9 kB/s eta 0:00:08\n",
      "   ------ --------------------------------- 1.2/7.5 MB 883.4 kB/s eta 0:00:08\n",
      "   ------- -------------------------------- 1.3/7.5 MB 895.0 kB/s eta 0:00:07\n",
      "   ------- -------------------------------- 1.3/7.5 MB 895.0 kB/s eta 0:00:07\n",
      "   ------- -------------------------------- 1.4/7.5 MB 920.1 kB/s eta 0:00:07\n",
      "   ------- -------------------------------- 1.5/7.5 MB 925.1 kB/s eta 0:00:07\n",
      "   -------- ------------------------------- 1.6/7.5 MB 979.7 kB/s eta 0:00:06\n",
      "   -------- ------------------------------- 1.7/7.5 MB 982.7 kB/s eta 0:00:06\n",
      "   --------- ------------------------------ 1.8/7.5 MB 1.0 MB/s eta 0:00:06\n",
      "   ---------- ----------------------------- 1.9/7.5 MB 1.1 MB/s eta 0:00:06\n",
      "   ---------- ----------------------------- 2.0/7.5 MB 1.1 MB/s eta 0:00:06\n",
      "   ---------- ----------------------------- 2.1/7.5 MB 1.1 MB/s eta 0:00:05\n",
      "   ----------- ---------------------------- 2.2/7.5 MB 1.1 MB/s eta 0:00:05\n",
      "   ----------- ---------------------------- 2.2/7.5 MB 1.1 MB/s eta 0:00:05\n",
      "   ----------- ---------------------------- 2.2/7.5 MB 1.1 MB/s eta 0:00:05\n",
      "   ------------ --------------------------- 2.4/7.5 MB 1.1 MB/s eta 0:00:05\n",
      "   ------------ --------------------------- 2.4/7.5 MB 1.1 MB/s eta 0:00:05\n",
      "   ------------- -------------------------- 2.4/7.5 MB 1.1 MB/s eta 0:00:05\n",
      "   ------------- -------------------------- 2.5/7.5 MB 1.2 MB/s eta 0:00:05\n",
      "   ------------- -------------------------- 2.6/7.5 MB 1.1 MB/s eta 0:00:05\n",
      "   -------------- ------------------------- 2.7/7.5 MB 1.2 MB/s eta 0:00:05\n",
      "   -------------- ------------------------- 2.7/7.5 MB 1.2 MB/s eta 0:00:05\n",
      "   --------------- ------------------------ 2.9/7.5 MB 1.2 MB/s eta 0:00:04\n",
      "   --------------- ------------------------ 2.9/7.5 MB 1.2 MB/s eta 0:00:04\n",
      "   ---------------- ----------------------- 3.0/7.5 MB 1.2 MB/s eta 0:00:04\n",
      "   ---------------- ----------------------- 3.1/7.5 MB 1.2 MB/s eta 0:00:04\n",
      "   ---------------- ----------------------- 3.1/7.5 MB 1.2 MB/s eta 0:00:04\n",
      "   ----------------- ---------------------- 3.2/7.5 MB 1.2 MB/s eta 0:00:04\n",
      "   ----------------- ---------------------- 3.2/7.5 MB 1.2 MB/s eta 0:00:04\n",
      "   ------------------ --------------------- 3.4/7.5 MB 1.3 MB/s eta 0:00:04\n",
      "   ------------------ --------------------- 3.5/7.5 MB 1.3 MB/s eta 0:00:04\n",
      "   ------------------ --------------------- 3.6/7.5 MB 1.3 MB/s eta 0:00:04\n",
      "   ------------------- -------------------- 3.6/7.5 MB 1.3 MB/s eta 0:00:04\n",
      "   ------------------- -------------------- 3.6/7.5 MB 1.3 MB/s eta 0:00:04\n",
      "   ------------------- -------------------- 3.7/7.5 MB 1.2 MB/s eta 0:00:04\n",
      "   -------------------- ------------------- 3.8/7.5 MB 1.3 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 3.8/7.5 MB 1.3 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 3.9/7.5 MB 1.2 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 3.9/7.5 MB 1.2 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 3.9/7.5 MB 1.2 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 3.9/7.5 MB 1.2 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 3.9/7.5 MB 1.2 MB/s eta 0:00:03\n",
      "   -------------------- ------------------- 3.9/7.5 MB 1.2 MB/s eta 0:00:03\n",
      "   --------------------- ------------------ 4.1/7.5 MB 1.2 MB/s eta 0:00:03\n",
      "   --------------------- ------------------ 4.1/7.5 MB 1.2 MB/s eta 0:00:03\n",
      "   --------------------- ------------------ 4.1/7.5 MB 1.2 MB/s eta 0:00:03\n",
      "   ------------------------ --------------- 4.6/7.5 MB 1.3 MB/s eta 0:00:03\n",
      "   ------------------------ --------------- 4.6/7.5 MB 1.3 MB/s eta 0:00:03\n",
      "   ------------------------ --------------- 4.7/7.5 MB 1.3 MB/s eta 0:00:03\n",
      "   ------------------------- -------------- 4.7/7.5 MB 1.3 MB/s eta 0:00:03\n",
      "   ------------------------- -------------- 4.8/7.5 MB 1.3 MB/s eta 0:00:03\n",
      "   -------------------------- ------------- 4.9/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 4.9/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   -------------------------- ------------- 5.0/7.5 MB 1.3 MB/s eta 0:00:02\n",
      "   ---------------------------- ----------- 5.4/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ---------------------------- ----------- 5.4/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ----------------------------- ---------- 5.4/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ----------------------------- ---------- 5.5/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ------------------------------ --------- 5.6/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ------------------------------ --------- 5.7/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ------------------------------ --------- 5.7/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ------------------------------- -------- 5.8/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ------------------------------- -------- 5.8/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ------------------------------- -------- 5.9/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ------------------------------- -------- 5.9/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ------------------------------- -------- 5.9/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   ------------------------------- -------- 6.0/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   -------------------------------- ------- 6.0/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   -------------------------------- ------- 6.1/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   -------------------------------- ------- 6.1/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   -------------------------------- ------- 6.1/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   -------------------------------- ------- 6.2/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   --------------------------------- ------ 6.3/7.5 MB 1.2 MB/s eta 0:00:02\n",
      "   --------------------------------- ------ 6.3/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   --------------------------------- ------ 6.3/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ---------------------------------- ----- 6.5/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ---------------------------------- ----- 6.5/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 6.6/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 6.6/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 6.6/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 6.7/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 6.7/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ----------------------------------- ---- 6.7/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 6.8/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 6.8/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ------------------------------------ --- 6.9/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 7.0/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 7.0/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ------------------------------------- -- 7.0/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 7.1/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 7.1/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 7.2/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 7.2/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 7.2/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   -------------------------------------- - 7.3/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ---------------------------------------  7.4/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ---------------------------------------  7.5/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ---------------------------------------  7.5/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ---------------------------------------  7.5/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ---------------------------------------  7.5/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ---------------------------------------  7.5/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ---------------------------------------  7.5/7.5 MB 1.2 MB/s eta 0:00:01\n",
      "   ---------------------------------------- 7.5/7.5 MB 1.1 MB/s eta 0:00:00\n",
      "Downloading dash_core_components-2.0.0-py3-none-any.whl (3.8 kB)\n",
      "Downloading dash_html_components-2.0.0-py3-none-any.whl (4.1 kB)\n",
      "Downloading dash_table-5.0.0-py3-none-any.whl (3.9 kB)\n",
      "Downloading retrying-1.3.4-py3-none-any.whl (11 kB)\n",
      "Installing collected packages: dash-table, dash-html-components, dash-core-components, retrying, dash\n",
      "Successfully installed dash-2.17.1 dash-core-components-2.0.0 dash-html-components-2.0.0 dash-table-5.0.0 retrying-1.3.4\n"
     ]
    }
   ],
   "source": [
    "pip install dash\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "8cbaae5a-1948-4192-a9be-1a00bd3939ec",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'path/to/your/historical_automobile_sales.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[91], line 7\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Load your dataset\u001b[39;00m\n\u001b[1;32m----> 7\u001b[0m data \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mpath/to/your/historical_automobile_sales.csv\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[0;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m   1014\u001b[0m     dialect,\n\u001b[0;32m   1015\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[0;32m   1023\u001b[0m )\n\u001b[0;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m _read(filepath_or_buffer, kwds)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_make_engine(f, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mengine)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[0;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m get_handle(\n\u001b[0;32m   1881\u001b[0m     f,\n\u001b[0;32m   1882\u001b[0m     mode,\n\u001b[0;32m   1883\u001b[0m     encoding\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1884\u001b[0m     compression\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcompression\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1885\u001b[0m     memory_map\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmemory_map\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m),\n\u001b[0;32m   1886\u001b[0m     is_text\u001b[38;5;241m=\u001b[39mis_text,\n\u001b[0;32m   1887\u001b[0m     errors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding_errors\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstrict\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[0;32m   1888\u001b[0m     storage_options\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstorage_options\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1889\u001b[0m )\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m    876\u001b[0m             encoding\u001b[38;5;241m=\u001b[39mioargs\u001b[38;5;241m.\u001b[39mencoding,\n\u001b[0;32m    877\u001b[0m             errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'path/to/your/historical_automobile_sales.csv'"
     ]
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "import plotly.express as px\n",
    "import pandas as pd\n",
    "\n",
    "# Load your dataset\n",
    "data = pd.read_csv('path/to/your/historical_automobile_sales.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "20f8fec3-a4fa-427f-8d3b-57727754fae0",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'path/to/your/historical_automobile_sales.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[93], line 7\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Load your dataset\u001b[39;00m\n\u001b[1;32m----> 7\u001b[0m data \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mpath/to/your/historical_automobile_sales.csv\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[0;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m   1014\u001b[0m     dialect,\n\u001b[0;32m   1015\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[0;32m   1023\u001b[0m )\n\u001b[0;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m _read(filepath_or_buffer, kwds)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_make_engine(f, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mengine)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[0;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m get_handle(\n\u001b[0;32m   1881\u001b[0m     f,\n\u001b[0;32m   1882\u001b[0m     mode,\n\u001b[0;32m   1883\u001b[0m     encoding\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1884\u001b[0m     compression\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcompression\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1885\u001b[0m     memory_map\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmemory_map\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m),\n\u001b[0;32m   1886\u001b[0m     is_text\u001b[38;5;241m=\u001b[39mis_text,\n\u001b[0;32m   1887\u001b[0m     errors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding_errors\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstrict\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[0;32m   1888\u001b[0m     storage_options\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstorage_options\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1889\u001b[0m )\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m    876\u001b[0m             encoding\u001b[38;5;241m=\u001b[39mioargs\u001b[38;5;241m.\u001b[39mencoding,\n\u001b[0;32m    877\u001b[0m             errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'path/to/your/historical_automobile_sales.csv'"
     ]
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "import plotly.express as px\n",
    "import pandas as pd\n",
    "\n",
    "# Load your dataset\n",
    "data = pd.read_csv('path/to/your/historical_automobile_sales.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "ccd79d9c-23a4-4247-ad02-84ece5f85fac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"650\"\n",
       "            src=\"http://127.0.0.1:8050/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x166b952cf20>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a Dash application\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "# Define the layout of the app\n",
    "app.layout = html.Div([\n",
    "    html.H1(\"Automobile Sales Dashboard\"),\n",
    "\n",
    "    # Line Chart: Automobile Sales Over Time\n",
    "    dcc.Graph(\n",
    "        id='sales-line-chart',\n",
    "        figure=px.line(data, x='Year', y='Automobile_Sales', title='Automobile Sales Over Time')\n",
    "    ),\n",
    "\n",
    "    # Seaborn Comparison Plot: Sales Trend per Vehicle Type (Recession vs. Non-Recession)\n",
    "    dcc.Graph(\n",
    "        id='seaborn-sales-comparison',\n",
    "        figure=px.line(data, x='Year', y='Automobile_Sales', color='Vehicle_Type', line_dash='Recession',\n",
    "                       title='Sales Trend per Vehicle Type: Recession vs. Non-Recession')\n",
    "    ),\n",
    "\n",
    "    # GDP Comparison Plot: Recession vs Non-Recession\n",
    "    dcc.Graph(\n",
    "        id='gdp-comparison',\n",
    "        figure=px.line(data, x='Year', y='GDP', color='Recession', title='GDP Comparison: Recession vs Non-Recession')\n",
    "    ),\n",
    "\n",
    "    # Bubble Plot: Impact of Seasonality on Sales\n",
    "    dcc.Graph(\n",
    "        id='seasonality-bubble-plot',\n",
    "        figure=px.scatter(data, x='Seasonality_Weight', y='Automobile_Sales', size='Advertising_Expenditure',\n",
    "                          color='Recession', title='Impact of Seasonality on Automobile Sales')\n",
    "    ),\n",
    "\n",
    "    # Scatter Plot: Average Vehicle Price vs. Sales During Recessions\n",
    "    dcc.Graph(\n",
    "        id='price-sales-scatter-plot',\n",
    "        figure=px.scatter(data[data['Recession'] == 1], x='Price', y='Automobile_Sales',\n",
    "                          title='Average Vehicle Price vs. Sales During Recessions')\n",
    "    ),\n",
    "\n",
    "    # Pie Chart: Advertising Expenditure During Recession and Non-Recession Periods\n",
    "    dcc.Graph(\n",
    "        id='advertising-expenditure-pie',\n",
    "        figure=px.pie(data, names='Recession', values='Advertising_Expenditure',\n",
    "                      title='Advertising Expenditure During Recession and Non-Recession Periods')\n",
    "    ),\n",
    "\n",
    "    # Pie Chart: Total Advertisement Expenditure for Each Vehicle Type During Recession\n",
    "    dcc.Graph(\n",
    "        id='vehicle-type-advertising-pie',\n",
    "        figure=px.pie(data[data['Recession'] == 1], names='Vehicle_Type', values='Advertising_Expenditure',\n",
    "                      title='Total Advertisement Expenditure for Each Vehicle Type During Recession')\n",
    "    ),\n",
    "\n",
    "    # Line Plot: Effect of Unemployment Rate on Vehicle Types During Recession\n",
    "    dcc.Graph(\n",
    "        id='unemployment-sales-line-plot',\n",
    "        figure=px.line(data[data['Recession'] == 1], x='unemployment_rate', y='Automobile_Sales',\n",
    "                       color='Vehicle_Type', title='Effect of Unemployment Rate on Vehicle Sales During Recession')\n",
    "    ),\n",
    "\n",
    "    # Optional: Map of Highest Sales Region During Recession\n",
    "    dcc.Graph(\n",
    "        id='sales-region-map',\n",
    "        figure=px.scatter_geo(data[data['Recession'] == 1], locations='City', size='Automobile_Sales',\n",
    "                              title='Highest Sales Region During Recession')\n",
    "    )\n",
    "])\n",
    "\n",
    "# Run the app\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "8a2eabc0-da29-4f08-8233-a79e3831878a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "from dash.dependencies import Input, Output\n",
    "import plotly.express as px\n",
    "import pandas as pd\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "4cf3f635-8b57-43ec-a3a1-177d648a48ef",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'path/to/your/historical_automobile_sales.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[99], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m# Load your dataset\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m data \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mpath/to/your/historical_automobile_sales.csv\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[0;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m   1014\u001b[0m     dialect,\n\u001b[0;32m   1015\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[0;32m   1023\u001b[0m )\n\u001b[0;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m _read(filepath_or_buffer, kwds)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_make_engine(f, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mengine)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[0;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m get_handle(\n\u001b[0;32m   1881\u001b[0m     f,\n\u001b[0;32m   1882\u001b[0m     mode,\n\u001b[0;32m   1883\u001b[0m     encoding\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1884\u001b[0m     compression\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcompression\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1885\u001b[0m     memory_map\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmemory_map\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m),\n\u001b[0;32m   1886\u001b[0m     is_text\u001b[38;5;241m=\u001b[39mis_text,\n\u001b[0;32m   1887\u001b[0m     errors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding_errors\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstrict\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[0;32m   1888\u001b[0m     storage_options\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstorage_options\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1889\u001b[0m )\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m    876\u001b[0m             encoding\u001b[38;5;241m=\u001b[39mioargs\u001b[38;5;241m.\u001b[39mencoding,\n\u001b[0;32m    877\u001b[0m             errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'path/to/your/historical_automobile_sales.csv'"
     ]
    }
   ],
   "source": [
    "# Load your dataset\n",
    "data = pd.read_csv('path/to/your/historical_automobile_sales.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "98fe3e18-349c-4fbc-8ab0-dc7b6b317709",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"650\"\n",
       "            src=\"http://127.0.0.1:8050/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x166b95971d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a Dash application\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "# Define the layout of the app\n",
    "app.layout = html.Div([\n",
    "    html.H1(\"Automobile Sales Dashboard\"),\n",
    "\n",
    "    # Dropdown for selecting year\n",
    "    html.Div([\n",
    "        html.Label(\"Select Year:\"),\n",
    "        dcc.Dropdown(\n",
    "            id='year-dropdown',\n",
    "            options=[{'label': year, 'value': year} for year in data['Year'].unique()],\n",
    "            value=data['Year'].min(),  # Default value\n",
    "            clearable=False\n",
    "        )\n",
    "    ]),\n",
    "\n",
    "    # Dropdown for selecting vehicle type\n",
    "    html.Div([\n",
    "        html.Label(\"Select Vehicle Type:\"),\n",
    "        dcc.Dropdown(\n",
    "            id='vehicle-type-dropdown',\n",
    "            options=[{'label': vt, 'value': vt} for vt in data['Vehicle_Type'].unique()],\n",
    "            value=data['Vehicle_Type'].unique()[0],  # Default value\n",
    "            clearable=False\n",
    "        )\n",
    "    ]),\n",
    "\n",
    "    # Line Chart: Automobile Sales Over Time\n",
    "    dcc.Graph(\n",
    "        id='sales-line-chart'\n",
    "    ),\n",
    "\n",
    "    # Seaborn Comparison Plot: Sales Trend per Vehicle Type (Recession vs. Non-Recession)\n",
    "    dcc.Graph(\n",
    "        id='seaborn-sales-comparison'\n",
    "    ),\n",
    "\n",
    "    # GDP Comparison Plot: Recession vs Non-Recession\n",
    "    dcc.Graph(\n",
    "        id='gdp-comparison'\n",
    "    ),\n",
    "\n",
    "    # Bubble Plot: Impact of Seasonality on Sales\n",
    "    dcc.Graph(\n",
    "        id='seasonality-bubble-plot'\n",
    "    ),\n",
    "\n",
    "    # Scatter Plot: Average Vehicle Price vs. Sales During Recessions\n",
    "    dcc.Graph(\n",
    "        id='price-sales-scatter-plot'\n",
    "    ),\n",
    "\n",
    "    # Pie Chart: Advertising Expenditure During Recession and Non-Recession Periods\n",
    "    dcc.Graph(\n",
    "        id='advertising-expenditure-pie'\n",
    "    ),\n",
    "\n",
    "    # Pie Chart: Total Advertisement Expenditure for Each Vehicle Type During Recession\n",
    "    dcc.Graph(\n",
    "        id='vehicle-type-advertising-pie'\n",
    "    ),\n",
    "\n",
    "    # Line Plot: Effect of Unemployment Rate on Vehicle Types During Recession\n",
    "    dcc.Graph(\n",
    "        id='unemployment-sales-line-plot'\n",
    "    ),\n",
    "\n",
    "    # Optional: Map of Highest Sales Region During Recession\n",
    "    dcc.Graph(\n",
    "        id='sales-region-map'\n",
    "    )\n",
    "])\n",
    "\n",
    "# Callbacks to update graphs based on dropdown selections\n",
    "\n",
    "@app.callback(\n",
    "    Output('sales-line-chart', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_sales_line_chart(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.line(filtered_data, x='Year', y='Automobile_Sales', title=f'Automobile Sales in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('seaborn-sales-comparison', 'figure'),\n",
    "    [Input('year-dropdown', 'value'), Input('vehicle-type-dropdown', 'value')]\n",
    ")\n",
    "def update_seaborn_comparison(selected_year, selected_vehicle_type):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Vehicle_Type'] == selected_vehicle_type)]\n",
    "    return px.line(filtered_data, x='Year', y='Automobile_Sales', color='Recession',\n",
    "                   title=f'Sales Trend for {selected_vehicle_type} in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('gdp-comparison', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_gdp_comparison(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.line(filtered_data, x='Year', y='GDP', color='Recession', title=f'GDP Comparison in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('seasonality-bubble-plot', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_seasonality_bubble_plot(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.scatter(filtered_data, x='Seasonality_Weight', y='Automobile_Sales', size='Advertising_Expenditure',\n",
    "                      color='Recession', title=f'Impact of Seasonality on Sales in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('price-sales-scatter-plot', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_price_sales_scatter_plot(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.scatter(filtered_data, x='Price', y='Automobile_Sales', title=f'Price vs. Sales During Recession in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('advertising-expenditure-pie', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_advertising_expenditure_pie(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.pie(filtered_data, names='Recession', values='Advertising_Expenditure',\n",
    "                  title=f'Advertising Expenditure in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('vehicle-type-advertising-pie', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_vehicle_type_advertising_pie(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.pie(filtered_data, names='Vehicle_Type', values='Advertising_Expenditure',\n",
    "                  title=f'Advertisement Expenditure by Vehicle Type in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('unemployment-sales-line-plot', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_unemployment_sales_line_plot(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.line(filtered_data, x='unemployment_rate', y='Automobile_Sales', color='Vehicle_Type',\n",
    "                   title=f'Effect of Unemployment Rate on Sales in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('sales-region-map', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_sales_region_map(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.scatter_geo(filtered_data, locations='City', size='Automobile_Sales',\n",
    "                          title=f'Highest Sales Region in {selected_year}')\n",
    "\n",
    "# Run the app\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "6db721c7-51f8-4d5d-b86e-fe7dc18b3004",
   "metadata": {},
   "outputs": [
    {
     "ename": "AssertionError",
     "evalue": "The setup method 'errorhandler' can no longer be called on the application. It has already handled its first request, any changes will not be applied consistently.\nMake sure all imports, decorators, functions, etc. needed to set up the application are done before running it.",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAssertionError\u001b[0m                            Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[103], line 174\u001b[0m\n\u001b[0;32m    172\u001b[0m \u001b[38;5;66;03m# Run the app\u001b[39;00m\n\u001b[0;32m    173\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;18m__name__\u001b[39m \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m__main__\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[1;32m--> 174\u001b[0m     app\u001b[38;5;241m.\u001b[39mrun_server(debug\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\dash\\dash.py:2277\u001b[0m, in \u001b[0;36mDash.run_server\u001b[1;34m(self, *args, **kwargs)\u001b[0m\n\u001b[0;32m   2271\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mrun_server\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m   2272\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"`run_server` is a deprecated alias of `run` and may be removed in a\u001b[39;00m\n\u001b[0;32m   2273\u001b[0m \u001b[38;5;124;03m    future version. We recommend using `app.run` instead.\u001b[39;00m\n\u001b[0;32m   2274\u001b[0m \n\u001b[0;32m   2275\u001b[0m \u001b[38;5;124;03m    See `app.run` for usage information.\u001b[39;00m\n\u001b[0;32m   2276\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m-> 2277\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mrun(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\dash\\dash.py:2099\u001b[0m, in \u001b[0;36mDash.run\u001b[1;34m(self, host, port, proxy, debug, jupyter_mode, jupyter_width, jupyter_height, jupyter_server_url, dev_tools_ui, dev_tools_props_check, dev_tools_serve_dev_bundles, dev_tools_hot_reload, dev_tools_hot_reload_interval, dev_tools_hot_reload_watch_interval, dev_tools_hot_reload_max_retry, dev_tools_silence_routes_logging, dev_tools_prune_errors, **flask_run_options)\u001b[0m\n\u001b[0;32m   2096\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m debug \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   2097\u001b[0m     debug \u001b[38;5;241m=\u001b[39m get_combined_config(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdebug\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[1;32m-> 2099\u001b[0m debug \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39menable_dev_tools(\n\u001b[0;32m   2100\u001b[0m     debug,\n\u001b[0;32m   2101\u001b[0m     dev_tools_ui,\n\u001b[0;32m   2102\u001b[0m     dev_tools_props_check,\n\u001b[0;32m   2103\u001b[0m     dev_tools_serve_dev_bundles,\n\u001b[0;32m   2104\u001b[0m     dev_tools_hot_reload,\n\u001b[0;32m   2105\u001b[0m     dev_tools_hot_reload_interval,\n\u001b[0;32m   2106\u001b[0m     dev_tools_hot_reload_watch_interval,\n\u001b[0;32m   2107\u001b[0m     dev_tools_hot_reload_max_retry,\n\u001b[0;32m   2108\u001b[0m     dev_tools_silence_routes_logging,\n\u001b[0;32m   2109\u001b[0m     dev_tools_prune_errors,\n\u001b[0;32m   2110\u001b[0m )\n\u001b[0;32m   2112\u001b[0m \u001b[38;5;66;03m# Verify port value\u001b[39;00m\n\u001b[0;32m   2113\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\dash\\dash.py:1869\u001b[0m, in \u001b[0;36mDash.enable_dev_tools\u001b[1;34m(self, debug, dev_tools_ui, dev_tools_props_check, dev_tools_serve_dev_bundles, dev_tools_hot_reload, dev_tools_hot_reload_interval, dev_tools_hot_reload_watch_interval, dev_tools_hot_reload_max_retry, dev_tools_silence_routes_logging, dev_tools_prune_errors)\u001b[0m\n\u001b[0;32m   1867\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m debug:\n\u001b[0;32m   1868\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m jupyter_dash\u001b[38;5;241m.\u001b[39mactive:\n\u001b[1;32m-> 1869\u001b[0m         jupyter_dash\u001b[38;5;241m.\u001b[39mconfigure_callback_exception_handling(\n\u001b[0;32m   1870\u001b[0m             \u001b[38;5;28mself\u001b[39m, dev_tools\u001b[38;5;241m.\u001b[39mprune_errors\n\u001b[0;32m   1871\u001b[0m         )\n\u001b[0;32m   1872\u001b[0m     \u001b[38;5;28;01melif\u001b[39;00m dev_tools\u001b[38;5;241m.\u001b[39mprune_errors:\n\u001b[0;32m   1873\u001b[0m         secret \u001b[38;5;241m=\u001b[39m gen_salt(\u001b[38;5;241m20\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\dash\\_jupyter.py:446\u001b[0m, in \u001b[0;36mJupyterDash.configure_callback_exception_handling\u001b[1;34m(self, app, dev_tools_prune_errors)\u001b[0m\n\u001b[0;32m    443\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mconfigure_callback_exception_handling\u001b[39m(\u001b[38;5;28mself\u001b[39m, app, dev_tools_prune_errors):\n\u001b[0;32m    444\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Install traceback handling for callbacks\"\"\"\u001b[39;00m\n\u001b[1;32m--> 446\u001b[0m     \u001b[38;5;129m@app\u001b[39m\u001b[38;5;241m.\u001b[39mserver\u001b[38;5;241m.\u001b[39merrorhandler(\u001b[38;5;167;01mException\u001b[39;00m)\n\u001b[0;32m    447\u001b[0m     \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_wrap_errors\u001b[39m(error):\n\u001b[0;32m    448\u001b[0m         \u001b[38;5;66;03m# Compute number of stack frames to skip to get down to callback\u001b[39;00m\n\u001b[0;32m    449\u001b[0m         skip \u001b[38;5;241m=\u001b[39m _get_skip(error) \u001b[38;5;28;01mif\u001b[39;00m dev_tools_prune_errors \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;241m0\u001b[39m\n\u001b[0;32m    451\u001b[0m         \u001b[38;5;66;03m# Customized formatargvalues function we can place function parameters\u001b[39;00m\n\u001b[0;32m    452\u001b[0m         \u001b[38;5;66;03m# on separate lines\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\flask\\sansio\\scaffold.py:46\u001b[0m, in \u001b[0;36msetupmethod.<locals>.wrapper_func\u001b[1;34m(self, *args, **kwargs)\u001b[0m\n\u001b[0;32m     45\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mwrapper_func\u001b[39m(\u001b[38;5;28mself\u001b[39m: Scaffold, \u001b[38;5;241m*\u001b[39margs: t\u001b[38;5;241m.\u001b[39mAny, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs: t\u001b[38;5;241m.\u001b[39mAny) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m t\u001b[38;5;241m.\u001b[39mAny:\n\u001b[1;32m---> 46\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_setup_finished(f_name)\n\u001b[0;32m     47\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m f(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\flask\\sansio\\app.py:415\u001b[0m, in \u001b[0;36mApp._check_setup_finished\u001b[1;34m(self, f_name)\u001b[0m\n\u001b[0;32m    413\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_check_setup_finished\u001b[39m(\u001b[38;5;28mself\u001b[39m, f_name: \u001b[38;5;28mstr\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m    414\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_got_first_request:\n\u001b[1;32m--> 415\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mAssertionError\u001b[39;00m(\n\u001b[0;32m    416\u001b[0m             \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mThe setup method \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mf_name\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m can no longer be called\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    417\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m on the application. It has already handled its first\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    418\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m request, any changes will not be applied\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    419\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m consistently.\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    420\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mMake sure all imports, decorators, functions, etc.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    421\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m needed to set up the application are done before\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    422\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m running it.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    423\u001b[0m         )\n",
      "\u001b[1;31mAssertionError\u001b[0m: The setup method 'errorhandler' can no longer be called on the application. It has already handled its first request, any changes will not be applied consistently.\nMake sure all imports, decorators, functions, etc. needed to set up the application are done before running it."
     ]
    }
   ],
   "source": [
    "# Define the layout of the app\n",
    "app.layout = html.Div([\n",
    "    html.H1(\"Automobile Sales Dashboard\"),\n",
    "\n",
    "    # Dropdown for selecting year\n",
    "    html.Div([\n",
    "        html.Label(\"Select Year:\"),\n",
    "        dcc.Dropdown(\n",
    "            id='year-dropdown',\n",
    "            options=[{'label': year, 'value': year} for year in data['Year'].unique()],\n",
    "            value=data['Year'].min(),  # Default value\n",
    "            clearable=False\n",
    "        )\n",
    "    ]),\n",
    "\n",
    "    # Dropdown for selecting vehicle type\n",
    "    html.Div([\n",
    "        html.Label(\"Select Vehicle Type:\"),\n",
    "        dcc.Dropdown(\n",
    "            id='vehicle-type-dropdown',\n",
    "            options=[{'label': vt, 'value': vt} for vt in data['Vehicle_Type'].unique()],\n",
    "            value=data['Vehicle_Type'].unique()[0],  # Default value\n",
    "            clearable=False\n",
    "        )\n",
    "    ]),\n",
    "\n",
    "    # Line Chart: Automobile Sales Over Time\n",
    "    dcc.Graph(\n",
    "        id='sales-line-chart'\n",
    "    ),\n",
    "\n",
    "    # Seaborn Comparison Plot: Sales Trend per Vehicle Type (Recession vs. Non-Recession)\n",
    "    dcc.Graph(\n",
    "        id='seaborn-sales-comparison'\n",
    "    ),\n",
    "\n",
    "    # GDP Comparison Plot: Recession vs Non-Recession\n",
    "    dcc.Graph(\n",
    "        id='gdp-comparison'\n",
    "    ),\n",
    "\n",
    "    # Bubble Plot: Impact of Seasonality on Sales\n",
    "    dcc.Graph(\n",
    "        id='seasonality-bubble-plot'\n",
    "    ),\n",
    "\n",
    "    # Scatter Plot: Average Vehicle Price vs. Sales During Recessions\n",
    "    dcc.Graph(\n",
    "        id='price-sales-scatter-plot'\n",
    "    ),\n",
    "\n",
    "    # Pie Chart: Advertising Expenditure During Recession and Non-Recession Periods\n",
    "    dcc.Graph(\n",
    "        id='advertising-expenditure-pie'\n",
    "    ),\n",
    "\n",
    "    # Pie Chart: Total Advertisement Expenditure for Each Vehicle Type During Recession\n",
    "    dcc.Graph(\n",
    "        id='vehicle-type-advertising-pie'\n",
    "    ),\n",
    "\n",
    "    # Line Plot: Effect of Unemployment Rate on Vehicle Types During Recession\n",
    "    dcc.Graph(\n",
    "        id='unemployment-sales-line-plot'\n",
    "    ),\n",
    "\n",
    "    # Optional: Map of Highest Sales Region During Recession\n",
    "    dcc.Graph(\n",
    "        id='sales-region-map'\n",
    "    ),\n",
    "\n",
    "    # Division for Output Display\n",
    "    html.Div([\n",
    "        html.H3(\"Analysis Output\"),\n",
    "        html.Div(id='output-container', className='output-class')\n",
    "    ])\n",
    "])\n",
    "\n",
    "# Callbacks to update graphs based on dropdown selections\n",
    "\n",
    "@app.callback(\n",
    "    Output('sales-line-chart', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_sales_line_chart(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.line(filtered_data, x='Year', y='Automobile_Sales', title=f'Automobile Sales in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('seaborn-sales-comparison', 'figure'),\n",
    "    [Input('year-dropdown', 'value'), Input('vehicle-type-dropdown', 'value')]\n",
    ")\n",
    "def update_seaborn_comparison(selected_year, selected_vehicle_type):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Vehicle_Type'] == selected_vehicle_type)]\n",
    "    return px.line(filtered_data, x='Year', y='Automobile_Sales', color='Recession',\n",
    "                   title=f'Sales Trend for {selected_vehicle_type} in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('gdp-comparison', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_gdp_comparison(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.line(filtered_data, x='Year', y='GDP', color='Recession', title=f'GDP Comparison in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('seasonality-bubble-plot', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_seasonality_bubble_plot(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.scatter(filtered_data, x='Seasonality_Weight', y='Automobile_Sales', size='Advertising_Expenditure',\n",
    "                      color='Recession', title=f'Impact of Seasonality on Sales in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('price-sales-scatter-plot', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_price_sales_scatter_plot(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.scatter(filtered_data, x='Price', y='Automobile_Sales', title=f'Price vs. Sales During Recession in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('advertising-expenditure-pie', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_advertising_expenditure_pie(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.pie(filtered_data, names='Recession', values='Advertising_Expenditure',\n",
    "                  title=f'Advertising Expenditure in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('vehicle-type-advertising-pie', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_vehicle_type_advertising_pie(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.pie(filtered_data, names='Vehicle_Type', values='Advertising_Expenditure',\n",
    "                  title=f'Advertisement Expenditure by Vehicle Type in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('unemployment-sales-line-plot', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_unemployment_sales_line_plot(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.line(filtered_data, x='unemployment_rate', y='Automobile_Sales', color='Vehicle_Type',\n",
    "                   title=f'Effect of Unemployment Rate on Sales in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('sales-region-map', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_sales_region_map(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.scatter_geo(filtered_data, locations='City', size='Automobile_Sales',\n",
    "                          title=f'Highest Sales Region in {selected_year}')\n",
    "\n",
    "# Callback for output display division\n",
    "@app.callback(\n",
    "    Output('output-container', 'children'),\n",
    "    [Input('year-dropdown', 'value'), Input('vehicle-type-dropdown', 'value')]\n",
    ")\n",
    "def update_output_container(selected_year, selected_vehicle_type):\n",
    "    # Example output text\n",
    "    output_text = f\"You have selected year {selected_year} and vehicle type {selected_vehicle_type}.\"\n",
    "    return html.Div([\n",
    "        html.P(output_text),\n",
    "        # Add more output details here as needed\n",
    "    ])\n",
    "\n",
    "# Run the app\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "8ed5f3d7-300b-41f9-adcb-c3957c6b5336",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Admin\\AppData\\Local\\Temp\\ipykernel_1312\\3934778022.py:2: UserWarning:\n",
      "\n",
      "\n",
      "The dash_core_components package is deprecated. Please replace\n",
      "`import dash_core_components as dcc` with `from dash import dcc`\n",
      "\n",
      "C:\\Users\\Admin\\AppData\\Local\\Temp\\ipykernel_1312\\3934778022.py:3: UserWarning:\n",
      "\n",
      "\n",
      "The dash_html_components package is deprecated. Please replace\n",
      "`import dash_html_components as html` with `from dash import html`\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"650\"\n",
       "            src=\"http://127.0.0.1:8050/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x166b6712030>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import dash\n",
    "import dash_core_components as dcc\n",
    "import dash_html_components as html\n",
    "import plotly.express as px\n",
    "from dash.dependencies import Input, Output\n",
    "\n",
    "# Sample data (replace this with your actual data loading code)\n",
    "import pandas as pd\n",
    "\n",
    "# Create a sample dataframe\n",
    "data = pd.DataFrame({\n",
    "    'Year': [2021, 2021, 2022, 2022],\n",
    "    'Vehicle_Type': ['SUV', 'Sedan', 'SUV', 'Sedan'],\n",
    "    'Automobile_Sales': [200, 150, 220, 180],\n",
    "    'Recession': [0, 0, 1, 1],\n",
    "    'GDP': [30000, 30500, 29000, 29500],\n",
    "    'Seasonality_Weight': [1.2, 1.1, 1.3, 1.2],\n",
    "    'Advertising_Expenditure': [1000, 900, 1100, 950],\n",
    "    'Price': [30000, 25000, 31000, 26000],\n",
    "    'unemployment_rate': [5.0, 5.1, 6.0, 6.1],\n",
    "    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston']\n",
    "})\n",
    "\n",
    "# Initialize the Dash app\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "# Define the layout of the app\n",
    "app.layout = html.Div([\n",
    "    html.H1(\"Automobile Sales Dashboard\"),\n",
    "\n",
    "    # Dropdown for selecting year\n",
    "    html.Div([\n",
    "        html.Label(\"Select Year:\"),\n",
    "        dcc.Dropdown(\n",
    "            id='year-dropdown',\n",
    "            options=[{'label': year, 'value': year} for year in data['Year'].unique()],\n",
    "            value=data['Year'].min(),  # Default value\n",
    "            clearable=False\n",
    "        )\n",
    "    ]),\n",
    "\n",
    "    # Dropdown for selecting vehicle type\n",
    "    html.Div([\n",
    "        html.Label(\"Select Vehicle Type:\"),\n",
    "        dcc.Dropdown(\n",
    "            id='vehicle-type-dropdown',\n",
    "            options=[{'label': vt, 'value': vt} for vt in data['Vehicle_Type'].unique()],\n",
    "            value=data['Vehicle_Type'].unique()[0],  # Default value\n",
    "            clearable=False\n",
    "        )\n",
    "    ]),\n",
    "\n",
    "    # Line Chart: Automobile Sales Over Time\n",
    "    dcc.Graph(id='sales-line-chart'),\n",
    "\n",
    "    # Seaborn Comparison Plot: Sales Trend per Vehicle Type (Recession vs. Non-Recession)\n",
    "    dcc.Graph(id='seaborn-sales-comparison'),\n",
    "\n",
    "    # GDP Comparison Plot: Recession vs Non-Recession\n",
    "    dcc.Graph(id='gdp-comparison'),\n",
    "\n",
    "    # Bubble Plot: Impact of Seasonality on Sales\n",
    "    dcc.Graph(id='seasonality-bubble-plot'),\n",
    "\n",
    "    # Scatter Plot: Average Vehicle Price vs. Sales During Recessions\n",
    "    dcc.Graph(id='price-sales-scatter-plot'),\n",
    "\n",
    "    # Pie Chart: Advertising Expenditure During Recession and Non-Recession Periods\n",
    "    dcc.Graph(id='advertising-expenditure-pie'),\n",
    "\n",
    "    # Pie Chart: Total Advertisement Expenditure for Each Vehicle Type During Recession\n",
    "    dcc.Graph(id='vehicle-type-advertising-pie'),\n",
    "\n",
    "    # Line Plot: Effect of Unemployment Rate on Vehicle Types During Recession\n",
    "    dcc.Graph(id='unemployment-sales-line-plot'),\n",
    "\n",
    "    # Optional: Map of Highest Sales Region During Recession\n",
    "    dcc.Graph(id='sales-region-map'),\n",
    "\n",
    "    # Division for Output Display\n",
    "    html.Div([\n",
    "        html.H3(\"Analysis Output\"),\n",
    "        html.Div(id='output-container', className='output-class')\n",
    "    ])\n",
    "])\n",
    "\n",
    "# Callbacks to update graphs based on dropdown selections\n",
    "\n",
    "@app.callback(\n",
    "    Output('sales-line-chart', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_sales_line_chart(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.line(filtered_data, x='Year', y='Automobile_Sales', title=f'Automobile Sales in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('seaborn-sales-comparison', 'figure'),\n",
    "    [Input('year-dropdown', 'value'), Input('vehicle-type-dropdown', 'value')]\n",
    ")\n",
    "def update_seaborn_comparison(selected_year, selected_vehicle_type):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Vehicle_Type'] == selected_vehicle_type)]\n",
    "    return px.line(filtered_data, x='Year', y='Automobile_Sales', color='Recession',\n",
    "                   title=f'Sales Trend for {selected_vehicle_type} in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('gdp-comparison', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_gdp_comparison(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.line(filtered_data, x='Year', y='GDP', color='Recession', title=f'GDP Comparison in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('seasonality-bubble-plot', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_seasonality_bubble_plot(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.scatter(filtered_data, x='Seasonality_Weight', y='Automobile_Sales', size='Advertising_Expenditure',\n",
    "                      color='Recession', title=f'Impact of Seasonality on Sales in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('price-sales-scatter-plot', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_price_sales_scatter_plot(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.scatter(filtered_data, x='Price', y='Automobile_Sales', title=f'Price vs. Sales During Recession in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('advertising-expenditure-pie', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_advertising_expenditure_pie(selected_year):\n",
    "    filtered_data = data[data['Year'] == selected_year]\n",
    "    return px.pie(filtered_data, names='Recession', values='Advertising_Expenditure',\n",
    "                  title=f'Advertising Expenditure in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('vehicle-type-advertising-pie', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_vehicle_type_advertising_pie(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.pie(filtered_data, names='Vehicle_Type', values='Advertising_Expenditure',\n",
    "                  title=f'Advertisement Expenditure by Vehicle Type in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('unemployment-sales-line-plot', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_unemployment_sales_line_plot(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.line(filtered_data, x='unemployment_rate', y='Automobile_Sales', color='Vehicle_Type',\n",
    "                   title=f'Effect of Unemployment Rate on Sales in {selected_year}')\n",
    "\n",
    "@app.callback(\n",
    "    Output('sales-region-map', 'figure'),\n",
    "    [Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_sales_region_map(selected_year):\n",
    "    filtered_data = data[(data['Year'] == selected_year) & (data['Recession'] == 1)]\n",
    "    return px.scatter_geo(filtered_data, locations='City', size='Automobile_Sales',\n",
    "                          title=f'Highest Sales Region in {selected_year}')\n",
    "\n",
    "# Callback for output display division\n",
    "@app.callback(\n",
    "    Output('output-container', 'children'),\n",
    "    [Input('year-dropdown', 'value'), Input('vehicle-type-dropdown', 'value')]\n",
    ")\n",
    "def update_output_container(selected_year, selected_vehicle_type):\n",
    "    # Example output text\n",
    "    output_text = f\"You have selected year {selected_year} and vehicle type {selected_vehicle_type}.\"\n",
    "    return html.Div([\n",
    "        html.P(output_text),\n",
    "        # Add more output details here as needed\n",
    "    ])\n",
    "\n",
    "# Run the app\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "9d37f773-b8d0-49f3-9571-f4bb81f3e64c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import dash\n",
    "import dash_core_components as dcc\n",
    "import dash_html_components as html\n",
    "from dash.dependencies import Input, Output\n",
    "import plotly.express as px\n",
    "import pandas as pd\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "ed49f720-9844-4a1f-8892-ec1c3186efc0",
   "metadata": {},
   "outputs": [],
   "source": [
    "app = dash.Dash(__name__)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "d2555f33-dbc6-42b7-8f20-834559cb179b",
   "metadata": {},
   "outputs": [],
   "source": [
    "app.layout = html.Div([\n",
    "    html.H1(\"Automobile Sales Dashboard\"),\n",
    "    dcc.Dropdown(\n",
    "        id='statistic-dropdown',\n",
    "        options=[\n",
    "            {'label': 'Yearly Statistics', 'value': 'yearly'},\n",
    "            {'label': 'Recession Period Statistics', 'value': 'recession'}\n",
    "        ],\n",
    "        value='yearly'\n",
    "    ),\n",
    "    dcc.Dropdown(\n",
    "        id='year-dropdown',\n",
    "        options=[{'label': str(year), 'value': year} for year in range(1980, 2024)],\n",
    "        value=2020,\n",
    "        disabled=False\n",
    "    ),\n",
    "    html.Div(id='output-container', className='output-container')\n",
    "])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "b74e8778-d0f9-4355-a2c7-336d3e8b8de6",
   "metadata": {},
   "outputs": [],
   "source": [
    "@app.callback(\n",
    "    Output('output-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value'),\n",
    "     Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_output(statistic, year):\n",
    "    if statistic == 'yearly':\n",
    "        # Example logic for yearly statistics\n",
    "        df = pd.read_csv('path_to_your_data.csv')  # Update with the actual path\n",
    "        data = df[df['Year'] == year]\n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "        fig.update_layout(title=f'Automobile Sales for {year}', xaxis_title='Month', yaxis_title='Sales')\n",
    "        return dcc.Graph(figure=fig)\n",
    "\n",
    "    elif statistic == 'recession':\n",
    "        # Example logic for recession period statistics\n",
    "        df = pd.read_csv('path_to_your_data.csv')  # Update with the actual path\n",
    "        data = df[df['Recession'] == 1]\n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Bar(x=data['Month'], y=data['Automobile_Sales']))\n",
    "        fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "        return dcc.Graph(figure=fig)\n",
    "\n",
    "    return 'Select a statistic and year to see the output.'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "878e8eb6-605d-43b8-bb23-912eb4414527",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"650\"\n",
       "            src=\"http://127.0.0.1:8050/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x166b3ffd3d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "f19bd183-27fb-4416-b0b1-3ecb16f92f92",
   "metadata": {},
   "outputs": [],
   "source": [
    "from dash import Dash, dcc, html, Input, Output\n",
    "import plotly.graph_objs as go\n",
    "import pandas as pd\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "48a737ee-97a4-461f-b3a2-2e02407901c8",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'path_to_your_data.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[119], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m df \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mpath_to_your_data.csv\u001b[39m\u001b[38;5;124m'\u001b[39m)  \u001b[38;5;66;03m# Ensure this path is correct\u001b[39;00m\n\u001b[0;32m      2\u001b[0m \u001b[38;5;28mprint\u001b[39m(df\u001b[38;5;241m.\u001b[39mhead())\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[0;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m   1014\u001b[0m     dialect,\n\u001b[0;32m   1015\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[0;32m   1023\u001b[0m )\n\u001b[0;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m _read(filepath_or_buffer, kwds)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_make_engine(f, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mengine)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[0;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m get_handle(\n\u001b[0;32m   1881\u001b[0m     f,\n\u001b[0;32m   1882\u001b[0m     mode,\n\u001b[0;32m   1883\u001b[0m     encoding\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1884\u001b[0m     compression\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcompression\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1885\u001b[0m     memory_map\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmemory_map\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m),\n\u001b[0;32m   1886\u001b[0m     is_text\u001b[38;5;241m=\u001b[39mis_text,\n\u001b[0;32m   1887\u001b[0m     errors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding_errors\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstrict\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[0;32m   1888\u001b[0m     storage_options\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstorage_options\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1889\u001b[0m )\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m    876\u001b[0m             encoding\u001b[38;5;241m=\u001b[39mioargs\u001b[38;5;241m.\u001b[39mencoding,\n\u001b[0;32m    877\u001b[0m             errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'path_to_your_data.csv'"
     ]
    }
   ],
   "source": [
    "df = pd.read_csv('path_to_your_data.csv')  # Ensure this path is correct\n",
    "print(df.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "23b78143-956c-4970-8d0f-1ee70208823b",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'path_to_your_data.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[121], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m df \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mpath_to_your_data.csv\u001b[39m\u001b[38;5;124m'\u001b[39m)  \u001b[38;5;66;03m# Ensure this path is correct\u001b[39;00m\n\u001b[0;32m      2\u001b[0m \u001b[38;5;28mprint\u001b[39m(df\u001b[38;5;241m.\u001b[39mhead())\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[0;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m   1014\u001b[0m     dialect,\n\u001b[0;32m   1015\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[0;32m   1023\u001b[0m )\n\u001b[0;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m _read(filepath_or_buffer, kwds)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_make_engine(f, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mengine)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[0;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m get_handle(\n\u001b[0;32m   1881\u001b[0m     f,\n\u001b[0;32m   1882\u001b[0m     mode,\n\u001b[0;32m   1883\u001b[0m     encoding\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1884\u001b[0m     compression\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcompression\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1885\u001b[0m     memory_map\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmemory_map\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m),\n\u001b[0;32m   1886\u001b[0m     is_text\u001b[38;5;241m=\u001b[39mis_text,\n\u001b[0;32m   1887\u001b[0m     errors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding_errors\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstrict\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[0;32m   1888\u001b[0m     storage_options\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstorage_options\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1889\u001b[0m )\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m    876\u001b[0m             encoding\u001b[38;5;241m=\u001b[39mioargs\u001b[38;5;241m.\u001b[39mencoding,\n\u001b[0;32m    877\u001b[0m             errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'path_to_your_data.csv'"
     ]
    }
   ],
   "source": [
    "df = pd.read_csv('path_to_your_data.csv')  # Ensure this path is correct\n",
    "print(df.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "16a4e258-2352-4998-af08-3cf71a14a6e0",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "expected ':' (588923723.py, line 16)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[123], line 16\u001b[1;36m\u001b[0m\n\u001b[1;33m    if data.empty\u001b[0m\n\u001b[1;37m                 ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m expected ':'\n"
     ]
    }
   ],
   "source": [
    "@app.callback(\n",
    "    Output('output-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value'),\n",
    "     Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_output(statistic, year):\n",
    "    try:\n",
    "        # Load the data\n",
    "        df = pd.read_csv('C:/Users/Admin/historical_automobile_sales.csv')  # Update with the correct path\n",
    "        \n",
    "        # Print the first few rows of the DataFrame\n",
    "        print(df.head())\n",
    "\n",
    "        if statistic == 'yearly':\n",
    "            data = df[df['Year'] == year]\n",
    "            if data.empty\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "40c17f00-97b2-4acf-a358-97506b9485fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "@app.callback(\n",
    "    Output('output-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value'),\n",
    "     Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_output(statistic, year):\n",
    "    try:\n",
    "        # Load the data\n",
    "        df = pd.read_csv('C:/Users/Admin/historical_automobile_sales.csv')  # Update with the correct path\n",
    "        \n",
    "        # Print the first few rows of the DataFrame\n",
    "        print(df.head())\n",
    "\n",
    "        if statistic == 'yearly':\n",
    "            data = df[df['Year'] == year]\n",
    "            if data.empty:\n",
    "                return 'No data available for the selected year.'\n",
    "            fig = go.Figure()\n",
    "            fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "            fig.update_layout(title=f'Automobile Sales for {year}', xaxis_title='Month', yaxis_title='Sales')\n",
    "            return dcc.Graph(figure=fig)\n",
    "\n",
    "        elif statistic == 'recession':\n",
    "            data = df[df['Recession'] == 1]\n",
    "            if data.empty:\n",
    "                return 'No recession data available.'\n",
    "            fig = go.Figure()\n",
    "            fig.add_trace(go.Bar(x=data['Month'], y=data['Automobile_Sales']))\n",
    "            fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "            return dcc.Graph(figure=fig)\n",
    "\n",
    "        return 'Select a statistic and year to see the output.'\n",
    "\n",
    "    except Exception as e:\n",
    "        return f'An error occurred: {e}'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "7fbb74c8-dfe3-43dd-85d4-122ad566769b",
   "metadata": {},
   "outputs": [],
   "source": [
    "@app.callback(\n",
    "    Output('output-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value'),\n",
    "     Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_output(statistic, year):\n",
    "    try:\n",
    "        # Load the data\n",
    "        df = pd.read_csv('C:/Users/Admin/historical_automobile_sales.csv')  # Update with the correct path\n",
    "        \n",
    "        # Print the first few rows of the DataFrame\n",
    "        print(df.head())\n",
    "\n",
    "        if statistic == 'yearly':\n",
    "            data = df[df['Year'] == year]\n",
    "            if data.empty:\n",
    "                return 'No data available for the selected year.'\n",
    "            fig = go.Figure()\n",
    "            fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "            fig.update_layout(title=f'Automobile Sales for {year}', xaxis_title='Month', yaxis_title='Sales')\n",
    "            return dcc.Graph(figure=fig)\n",
    "\n",
    "        elif statistic == 'recession':\n",
    "            data = df[df['Recession'] == 1]\n",
    "            if data.empty:\n",
    "                return 'No recession data available.'\n",
    "            fig = go.Figure()\n",
    "            fig.add_trace(go.Bar(x=data['Month'], y=data['Automobile_Sales']))\n",
    "            fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "            return dcc.Graph(figure=fig)\n",
    "\n",
    "        return 'Select a statistic and year to see the output.'\n",
    "\n",
    "    except Exception as e:\n",
    "        return f'An error occurred: {e}'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "db5e730d-b5f6-4518-bc24-0076dac21dd6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"650\"\n",
       "            src=\"http://127.0.0.1:8050/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x166b4ce9ac0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from dash import dcc, html, Input, Output, Dash\n",
    "import pandas as pd\n",
    "import plotly.graph_objects as go\n",
    "\n",
    "app = Dash(__name__)\n",
    "\n",
    "# Layout of the Dash app\n",
    "app.layout = html.Div([\n",
    "    dcc.Dropdown(\n",
    "        id='statistic-dropdown',\n",
    "        options=[\n",
    "            {'label': 'Yearly Statistics', 'value': 'yearly'},\n",
    "            {'label': 'Recession Period Statistics', 'value': 'recession'}\n",
    "        ],\n",
    "        value='yearly'  # Default value\n",
    "    ),\n",
    "    dcc.Dropdown(\n",
    "        id='year-dropdown',\n",
    "        options=[{'label': year, 'value': year} for year in range(1980, 2024)],\n",
    "        value=2020  # Default value\n",
    "    ),\n",
    "    html.Div(id='output-container', className='output-container')\n",
    "])\n",
    "\n",
    "@app.callback(\n",
    "    Output('output-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value'),\n",
    "     Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_output(statistic, year):\n",
    "    try:\n",
    "        # Load the data\n",
    "        df = pd.read_csv('C:/Users/Admin/historical_automobile_sales.csv')  # Ensure the path is correct\n",
    "\n",
    "        if statistic == 'yearly':\n",
    "            data = df[df['Year'] == year]\n",
    "            if data.empty:\n",
    "                return 'No data available for the selected year.'\n",
    "            fig = go.Figure()\n",
    "            fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "            fig.update_layout(title=f'Automobile Sales for {year}', xaxis_title='Month', yaxis_title='Sales')\n",
    "            return dcc.Graph(figure=fig)\n",
    "\n",
    "        elif statistic == 'recession':\n",
    "            data = df[df['Recession'] == 1]\n",
    "            if data.empty:\n",
    "                return 'No recession data available.'\n",
    "            fig = go.Figure()\n",
    "            fig.add_trace(go.Bar(x=data['Month'], y=data['Automobile_Sales']))\n",
    "            fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "            return dcc.Graph(figure=fig)\n",
    "\n",
    "        return 'Select a statistic and year to see the output.'\n",
    "\n",
    "    except Exception as e:\n",
    "        return f'An error occurred: {e}'\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "66b79fe3-fad2-43fe-92c6-de9b8a782d08",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'historical_automobile_sales.xlsx'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[131], line 6\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      5\u001b[0m \u001b[38;5;66;03m# Load your data\u001b[39;00m\n\u001b[1;32m----> 6\u001b[0m df \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_excel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mhistorical_automobile_sales.xlsx\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      8\u001b[0m \u001b[38;5;129m@app\u001b[39m\u001b[38;5;241m.\u001b[39mcallback(\n\u001b[0;32m      9\u001b[0m     Output(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124moutput-container\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mchildren\u001b[39m\u001b[38;5;124m'\u001b[39m),\n\u001b[0;32m     10\u001b[0m     [Input(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstatistic-dropdown\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mvalue\u001b[39m\u001b[38;5;124m'\u001b[39m),\n\u001b[0;32m     11\u001b[0m      Input(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124myear-dropdown\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mvalue\u001b[39m\u001b[38;5;124m'\u001b[39m)]\n\u001b[0;32m     12\u001b[0m )\n\u001b[0;32m     13\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mupdate_output\u001b[39m(statistic, year):\n\u001b[0;32m     14\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:495\u001b[0m, in \u001b[0;36mread_excel\u001b[1;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)\u001b[0m\n\u001b[0;32m    493\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(io, ExcelFile):\n\u001b[0;32m    494\u001b[0m     should_close \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m--> 495\u001b[0m     io \u001b[38;5;241m=\u001b[39m ExcelFile(\n\u001b[0;32m    496\u001b[0m         io,\n\u001b[0;32m    497\u001b[0m         storage_options\u001b[38;5;241m=\u001b[39mstorage_options,\n\u001b[0;32m    498\u001b[0m         engine\u001b[38;5;241m=\u001b[39mengine,\n\u001b[0;32m    499\u001b[0m         engine_kwargs\u001b[38;5;241m=\u001b[39mengine_kwargs,\n\u001b[0;32m    500\u001b[0m     )\n\u001b[0;32m    501\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m engine \u001b[38;5;129;01mand\u001b[39;00m engine \u001b[38;5;241m!=\u001b[39m io\u001b[38;5;241m.\u001b[39mengine:\n\u001b[0;32m    502\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    503\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEngine should not be specified when passing \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    504\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man ExcelFile - ExcelFile already has the engine set\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    505\u001b[0m     )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1550\u001b[0m, in \u001b[0;36mExcelFile.__init__\u001b[1;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)\u001b[0m\n\u001b[0;32m   1548\u001b[0m     ext \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mxls\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1549\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 1550\u001b[0m     ext \u001b[38;5;241m=\u001b[39m inspect_excel_format(\n\u001b[0;32m   1551\u001b[0m         content_or_path\u001b[38;5;241m=\u001b[39mpath_or_buffer, storage_options\u001b[38;5;241m=\u001b[39mstorage_options\n\u001b[0;32m   1552\u001b[0m     )\n\u001b[0;32m   1553\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ext \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1554\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m   1555\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mExcel file format cannot be determined, you must specify \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1556\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man engine manually.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1557\u001b[0m         )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1402\u001b[0m, in \u001b[0;36minspect_excel_format\u001b[1;34m(content_or_path, storage_options)\u001b[0m\n\u001b[0;32m   1399\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(content_or_path, \u001b[38;5;28mbytes\u001b[39m):\n\u001b[0;32m   1400\u001b[0m     content_or_path \u001b[38;5;241m=\u001b[39m BytesIO(content_or_path)\n\u001b[1;32m-> 1402\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m get_handle(\n\u001b[0;32m   1403\u001b[0m     content_or_path, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m, storage_options\u001b[38;5;241m=\u001b[39mstorage_options, is_text\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[0;32m   1404\u001b[0m ) \u001b[38;5;28;01mas\u001b[39;00m handle:\n\u001b[0;32m   1405\u001b[0m     stream \u001b[38;5;241m=\u001b[39m handle\u001b[38;5;241m.\u001b[39mhandle\n\u001b[0;32m   1406\u001b[0m     stream\u001b[38;5;241m.\u001b[39mseek(\u001b[38;5;241m0\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:882\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m--> 882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n\u001b[0;32m    883\u001b[0m     handles\u001b[38;5;241m.\u001b[39mappend(handle)\n\u001b[0;32m    885\u001b[0m \u001b[38;5;66;03m# Convert BytesIO or file objects passed with an encoding\u001b[39;00m\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'historical_automobile_sales.xlsx'"
     ]
    }
   ],
   "source": [
    "from dash import dcc, html, Input, Output\n",
    "import plotly.graph_objects as go\n",
    "import pandas as pd\n",
    "\n",
    "# Load your data\n",
    "df = pd.read_excel('historical_automobile_sales.xlsx')\n",
    "\n",
    "@app.callback(\n",
    "    Output('output-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value'),\n",
    "     Input('year-dropdown', 'value')]\n",
    ")\n",
    "def update_output(statistic, year):\n",
    "    try:\n",
    "        if statistic == 'yearly':\n",
    "            # Filter data for the selected year\n",
    "            data = df[df['Year'] == year]\n",
    "            if data.empty:\n",
    "                return 'No data available for the selected year.'\n",
    "            \n",
    "            # Generate line plot for Yearly Statistics\n",
    "            fig = go.Figure()\n",
    "            fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "            fig.update_layout(title=f'Automobile Sales for {year}', xaxis_title='Month', yaxis_title='Sales')\n",
    "            return dcc.Graph(figure=fig)\n",
    "\n",
    "        elif statistic == 'recession':\n",
    "            # Filter data for Recession Period\n",
    "            data = df[df['Recession'] == 1]\n",
    "            if data.empty:\n",
    "                return 'No recession data available.'\n",
    "            \n",
    "            # Generate bar plot for Recession Period Statistics\n",
    "            fig = go.Figure()\n",
    "            fig.add_trace(go.Bar(x=data['Month'], y=data['Automobile_Sales']))\n",
    "            fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "            return dcc.Graph(figure=fig)\n",
    "\n",
    "    except Exception as e:\n",
    "        return f'An error occurred: {e}'\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "7721353e-cbc9-4132-b0f0-e11b502587e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "import plotly.graph_objects as go\n",
    "\n",
    "@app.callback(\n",
    "    Output('recession-report-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter data for Recession Period\n",
    "        data = df[df['Recession'] == 1]\n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "\n",
    "        # Create line plot for Automobile Sales during recession periods\n",
    "        fig1 = go.Figure()\n",
    "        fig1.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "        fig1.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "\n",
    "        # Create bar plot for Vehicle Sales by Type during recession periods\n",
    "        vehicle_sales_by_type = data.groupby('Vehicle_Type')['Automobile_Sales'].sum().reset_index()\n",
    "        fig2 = go.Figure()\n",
    "        fig2.add_trace(go.Bar(x=vehicle_sales_by_type['Vehicle_Type'], y=vehicle_sales_by_type['Automobile_Sales']))\n",
    "        fig2.update_layout(title='Vehicle Sales by Type During Recession Periods', xaxis_title='Vehicle Type', yaxis_title='Sales')\n",
    "\n",
    "        # Create pie chart for Advertisement Expenditure during recession periods\n",
    "        ad_expenditure_by_type = data.groupby('Vehicle_Type')['Advertising_Expenditure'].sum().reset_index()\n",
    "        fig3 = go.Figure(data=[go.Pie(labels=ad_expenditure_by_type['Vehicle_Type'], values=ad_expenditure_by_type['Advertising_Expenditure'])])\n",
    "        fig3.update_layout(title='Advertisement Expenditure by Vehicle Type During Recession Periods')\n",
    "\n",
    "        # Arrange graphs in a 2x2 grid layout\n",
    "        return html.Div([\n",
    "            html.Div([dcc.Graph(figure=fig1)], className='six columns'),\n",
    "            html.Div([dcc.Graph(figure=fig2)], className='six columns'),\n",
    "            html.Div([dcc.Graph(figure=fig3)], className='six columns')\n",
    "        ])\n",
    "    return 'Please select the Recession Report Statistics to view graphs.'\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "58ca2ad4-98a2-41e4-937c-4a40886d85da",
   "metadata": {},
   "outputs": [],
   "source": [
    "import plotly.graph_objects as go\n",
    "\n",
    "@app.callback(\n",
    "    Output('recession-report-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter data for Recession Period\n",
    "        data = df[df['Recession'] == 1]\n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "\n",
    "        # Create line plot for Automobile Sales during recession periods\n",
    "        fig1 = go.Figure()\n",
    "        fig1.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "        fig1.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "\n",
    "        # Create bar plot for Vehicle Sales by Type during recession periods\n",
    "        vehicle_sales_by_type = data.groupby('Vehicle_Type')['Automobile_Sales'].sum().reset_index()\n",
    "        fig2 = go.Figure()\n",
    "        fig2.add_trace(go.Bar(x=vehicle_sales_by_type['Vehicle_Type'], y=vehicle_sales_by_type['Automobile_Sales']))\n",
    "        fig2.update_layout(title='Vehicle Sales by Type During Recession Periods', xaxis_title='Vehicle Type', yaxis_title='Sales')\n",
    "\n",
    "        # Create pie chart for Advertisement Expenditure during recession periods\n",
    "        ad_expenditure_by_type = data.groupby('Vehicle_Type')['Advertising_Expenditure'].sum().reset_index()\n",
    "        fig3 = go.Figure(data=[go.Pie(labels=ad_expenditure_by_type['Vehicle_Type'], values=ad_expenditure_by_type['Advertising_Expenditure'])])\n",
    "        fig3.update_layout(title='Advertisement Expenditure by Vehicle Type During Recession Periods')\n",
    "\n",
    "        # Arrange graphs in a 2x2 grid layout\n",
    "        return html.Div([\n",
    "            html.Div([dcc.Graph(figure=fig1)], className='six columns'),\n",
    "            html.Div([dcc.Graph(figure=fig2)], className='six columns'),\n",
    "            html.Div([dcc.Graph(figure=fig3)], className='six columns')\n",
    "        ])\n",
    "    return 'Please select the Recession Report Statistics to view graphs.'\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "02df6505-4aaa-4c6f-b809-a8755d624ee6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import plotly.graph_objects as go\n",
    "\n",
    "@app.callback(\n",
    "    Output('recession-report-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter data for Recession Period\n",
    "        data = df[df['Recession'] == 1]\n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "\n",
    "        # Create line plot for Automobile Sales during recession periods\n",
    "        fig1 = go.Figure()\n",
    "        fig1.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "        fig1.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "\n",
    "        # Return the single graph\n",
    "        return dcc.Graph(figure=fig1)\n",
    "    \n",
    "    return 'Please select the Recession Report Statistics to view graphs.'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "a21fe3c9-93ab-4108-a22f-649b36e79106",
   "metadata": {},
   "outputs": [],
   "source": [
    "import plotly.graph_objects as go\n",
    "\n",
    "@app.callback(\n",
    "    Output('recession-report-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter data for Recession Period\n",
    "        data = df[df['Recession'] == 1]\n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "\n",
    "        # Create line plot for Automobile Sales during recession periods\n",
    "        fig1 = go.Figure()\n",
    "        fig1.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "        fig1.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "\n",
    "        # Create bar plot for Vehicle Sales by Type during recession periods\n",
    "        vehicle_sales_by_type = data.groupby('Vehicle_Type')['Automobile_Sales'].sum().reset_index()\n",
    "        fig2 = go.Figure()\n",
    "        fig2.add_trace(go.Bar(x=vehicle_sales_by_type['Vehicle_Type'], y=vehicle_sales_by_type['Automobile_Sales']))\n",
    "        fig2.update_layout(title='Vehicle Sales by Type During Recession Periods', xaxis_title='Vehicle Type', yaxis_title='Sales')\n",
    "\n",
    "        # Create pie chart for Advertisement Expenditure during recession periods\n",
    "        ad_expenditure_by_type = data.groupby('Vehicle_Type')['Advertising_Expenditure'].sum().reset_index()\n",
    "        fig3 = go.Figure(data=[go.Pie(labels=ad_expenditure_by_type['Vehicle_Type'], values=ad_expenditure_by_type['Advertising_Expenditure'])])\n",
    "        fig3.update_layout(title='Advertisement Expenditure by Vehicle Type During Recession Periods')\n",
    "\n",
    "        # Arrange graphs in a 2x2 grid layout\n",
    "        return html.Div([\n",
    "            html.Div([dcc.Graph(figure=fig1)], className='six columns'),\n",
    "            html.Div([dcc.Graph(figure=fig2)], className='six columns'),\n",
    "            html.Div([dcc.Graph(figure=fig3)], className='six columns')\n",
    "        ])\n",
    "    return 'Please select the Recession Report Statistics to view graphs.'\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "e1400ce7-c170-43a9-83ca-34951f6c160d",
   "metadata": {},
   "outputs": [],
   "source": [
    "@app.callback(\n",
    "    Output('recession-report-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    print(f\"Dropdown selection: {statistic}\")  # Debugging line\n",
    "    if statistic == 'recession':\n",
    "        # Your filtering and plotting logic here...\n",
    "        pass\n",
    "    return 'Please select the Recession Report Statistics to view graphs.'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "867dc035-19c5-42c0-99e6-40d8b52bb4c3",
   "metadata": {},
   "outputs": [],
   "source": [
    "@app.callback(\n",
    "    Output('recession-report-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        data = df[df['Recession'] == 1]\n",
    "        print(data.head())  # Debugging line\n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "\n",
    "        fig1 = go.Figure()\n",
    "        fig1.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "        fig1.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "\n",
    "        return dcc.Graph(figure=fig1)\n",
    "    \n",
    "    return 'Please select the Recession Report Statistics to view graphs.'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "d184eb14-624f-4a56-9438-2a07619b3035",
   "metadata": {},
   "outputs": [
    {
     "ename": "AssertionError",
     "evalue": "The setup method 'errorhandler' can no longer be called on the application. It has already handled its first request, any changes will not be applied consistently.\nMake sure all imports, decorators, functions, etc. needed to set up the application are done before running it.",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAssertionError\u001b[0m                            Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[145], line 12\u001b[0m\n\u001b[0;32m      7\u001b[0m app\u001b[38;5;241m.\u001b[39mlayout \u001b[38;5;241m=\u001b[39m html\u001b[38;5;241m.\u001b[39mDiv([\n\u001b[0;32m      8\u001b[0m     dcc\u001b[38;5;241m.\u001b[39mGraph(\u001b[38;5;28mid\u001b[39m\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtest-graph\u001b[39m\u001b[38;5;124m'\u001b[39m, figure\u001b[38;5;241m=\u001b[39mfig)\n\u001b[0;32m      9\u001b[0m ])\n\u001b[0;32m     11\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;18m__name__\u001b[39m \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m__main__\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[1;32m---> 12\u001b[0m     app\u001b[38;5;241m.\u001b[39mrun_server(debug\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\dash\\dash.py:2277\u001b[0m, in \u001b[0;36mDash.run_server\u001b[1;34m(self, *args, **kwargs)\u001b[0m\n\u001b[0;32m   2271\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mrun_server\u001b[39m(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m   2272\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"`run_server` is a deprecated alias of `run` and may be removed in a\u001b[39;00m\n\u001b[0;32m   2273\u001b[0m \u001b[38;5;124;03m    future version. We recommend using `app.run` instead.\u001b[39;00m\n\u001b[0;32m   2274\u001b[0m \n\u001b[0;32m   2275\u001b[0m \u001b[38;5;124;03m    See `app.run` for usage information.\u001b[39;00m\n\u001b[0;32m   2276\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m-> 2277\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mrun(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\dash\\dash.py:2099\u001b[0m, in \u001b[0;36mDash.run\u001b[1;34m(self, host, port, proxy, debug, jupyter_mode, jupyter_width, jupyter_height, jupyter_server_url, dev_tools_ui, dev_tools_props_check, dev_tools_serve_dev_bundles, dev_tools_hot_reload, dev_tools_hot_reload_interval, dev_tools_hot_reload_watch_interval, dev_tools_hot_reload_max_retry, dev_tools_silence_routes_logging, dev_tools_prune_errors, **flask_run_options)\u001b[0m\n\u001b[0;32m   2096\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m debug \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   2097\u001b[0m     debug \u001b[38;5;241m=\u001b[39m get_combined_config(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdebug\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[1;32m-> 2099\u001b[0m debug \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39menable_dev_tools(\n\u001b[0;32m   2100\u001b[0m     debug,\n\u001b[0;32m   2101\u001b[0m     dev_tools_ui,\n\u001b[0;32m   2102\u001b[0m     dev_tools_props_check,\n\u001b[0;32m   2103\u001b[0m     dev_tools_serve_dev_bundles,\n\u001b[0;32m   2104\u001b[0m     dev_tools_hot_reload,\n\u001b[0;32m   2105\u001b[0m     dev_tools_hot_reload_interval,\n\u001b[0;32m   2106\u001b[0m     dev_tools_hot_reload_watch_interval,\n\u001b[0;32m   2107\u001b[0m     dev_tools_hot_reload_max_retry,\n\u001b[0;32m   2108\u001b[0m     dev_tools_silence_routes_logging,\n\u001b[0;32m   2109\u001b[0m     dev_tools_prune_errors,\n\u001b[0;32m   2110\u001b[0m )\n\u001b[0;32m   2112\u001b[0m \u001b[38;5;66;03m# Verify port value\u001b[39;00m\n\u001b[0;32m   2113\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\dash\\dash.py:1869\u001b[0m, in \u001b[0;36mDash.enable_dev_tools\u001b[1;34m(self, debug, dev_tools_ui, dev_tools_props_check, dev_tools_serve_dev_bundles, dev_tools_hot_reload, dev_tools_hot_reload_interval, dev_tools_hot_reload_watch_interval, dev_tools_hot_reload_max_retry, dev_tools_silence_routes_logging, dev_tools_prune_errors)\u001b[0m\n\u001b[0;32m   1867\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m debug:\n\u001b[0;32m   1868\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m jupyter_dash\u001b[38;5;241m.\u001b[39mactive:\n\u001b[1;32m-> 1869\u001b[0m         jupyter_dash\u001b[38;5;241m.\u001b[39mconfigure_callback_exception_handling(\n\u001b[0;32m   1870\u001b[0m             \u001b[38;5;28mself\u001b[39m, dev_tools\u001b[38;5;241m.\u001b[39mprune_errors\n\u001b[0;32m   1871\u001b[0m         )\n\u001b[0;32m   1872\u001b[0m     \u001b[38;5;28;01melif\u001b[39;00m dev_tools\u001b[38;5;241m.\u001b[39mprune_errors:\n\u001b[0;32m   1873\u001b[0m         secret \u001b[38;5;241m=\u001b[39m gen_salt(\u001b[38;5;241m20\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\dash\\_jupyter.py:446\u001b[0m, in \u001b[0;36mJupyterDash.configure_callback_exception_handling\u001b[1;34m(self, app, dev_tools_prune_errors)\u001b[0m\n\u001b[0;32m    443\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mconfigure_callback_exception_handling\u001b[39m(\u001b[38;5;28mself\u001b[39m, app, dev_tools_prune_errors):\n\u001b[0;32m    444\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Install traceback handling for callbacks\"\"\"\u001b[39;00m\n\u001b[1;32m--> 446\u001b[0m     \u001b[38;5;129m@app\u001b[39m\u001b[38;5;241m.\u001b[39mserver\u001b[38;5;241m.\u001b[39merrorhandler(\u001b[38;5;167;01mException\u001b[39;00m)\n\u001b[0;32m    447\u001b[0m     \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_wrap_errors\u001b[39m(error):\n\u001b[0;32m    448\u001b[0m         \u001b[38;5;66;03m# Compute number of stack frames to skip to get down to callback\u001b[39;00m\n\u001b[0;32m    449\u001b[0m         skip \u001b[38;5;241m=\u001b[39m _get_skip(error) \u001b[38;5;28;01mif\u001b[39;00m dev_tools_prune_errors \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;241m0\u001b[39m\n\u001b[0;32m    451\u001b[0m         \u001b[38;5;66;03m# Customized formatargvalues function we can place function parameters\u001b[39;00m\n\u001b[0;32m    452\u001b[0m         \u001b[38;5;66;03m# on separate lines\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\flask\\sansio\\scaffold.py:46\u001b[0m, in \u001b[0;36msetupmethod.<locals>.wrapper_func\u001b[1;34m(self, *args, **kwargs)\u001b[0m\n\u001b[0;32m     45\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mwrapper_func\u001b[39m(\u001b[38;5;28mself\u001b[39m: Scaffold, \u001b[38;5;241m*\u001b[39margs: t\u001b[38;5;241m.\u001b[39mAny, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs: t\u001b[38;5;241m.\u001b[39mAny) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m t\u001b[38;5;241m.\u001b[39mAny:\n\u001b[1;32m---> 46\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_setup_finished(f_name)\n\u001b[0;32m     47\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m f(\u001b[38;5;28mself\u001b[39m, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\flask\\sansio\\app.py:415\u001b[0m, in \u001b[0;36mApp._check_setup_finished\u001b[1;34m(self, f_name)\u001b[0m\n\u001b[0;32m    413\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_check_setup_finished\u001b[39m(\u001b[38;5;28mself\u001b[39m, f_name: \u001b[38;5;28mstr\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m    414\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_got_first_request:\n\u001b[1;32m--> 415\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mAssertionError\u001b[39;00m(\n\u001b[0;32m    416\u001b[0m             \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mThe setup method \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mf_name\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m can no longer be called\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    417\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m on the application. It has already handled its first\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    418\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m request, any changes will not be applied\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    419\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m consistently.\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    420\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mMake sure all imports, decorators, functions, etc.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    421\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m needed to set up the application are done before\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    422\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m running it.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    423\u001b[0m         )\n",
      "\u001b[1;31mAssertionError\u001b[0m: The setup method 'errorhandler' can no longer be called on the application. It has already handled its first request, any changes will not be applied consistently.\nMake sure all imports, decorators, functions, etc. needed to set up the application are done before running it."
     ]
    }
   ],
   "source": [
    "# Create a simple static graph\n",
    "fig = go.Figure()\n",
    "fig.add_trace(go.Scatter(x=[1, 2, 3], y=[10, 20, 30], mode='lines+markers'))\n",
    "fig.update_layout(title='Test Plot', xaxis_title='X Axis', yaxis_title='Y Axis')\n",
    "\n",
    "# Display the graph\n",
    "app.layout = html.Div([\n",
    "    dcc.Graph(id='test-graph', figure=fig)\n",
    "])\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "54edd677-92db-48d1-a990-1d9fc8eab278",
   "metadata": {},
   "outputs": [],
   "source": [
    "@app.callback(\n",
    "    Output('recession-report-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    try:\n",
    "        if statistic == 'recession':\n",
    "            data = df[df['Recession'] == 1]\n",
    "            if data.empty:\n",
    "                return 'No recession data available.'\n",
    "\n",
    "            fig1 = go.Figure()\n",
    "            fig1.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "            fig1.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "\n",
    "            return dcc.Graph(figure=fig1)\n",
    "    except Exception as e:\n",
    "        return f\"Error: {str(e)}\"\n",
    "    \n",
    "    return 'Please select the Recession Report Statistics to view graphs.'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "a3507d79-1ad8-4ea8-9a4d-21629d89dc69",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'path_to_your_data.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[149], line 7\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Load your dataset here\u001b[39;00m\n\u001b[1;32m----> 7\u001b[0m df \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mpath_to_your_data.csv\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      9\u001b[0m app \u001b[38;5;241m=\u001b[39m dash\u001b[38;5;241m.\u001b[39mDash(\u001b[38;5;18m__name__\u001b[39m)\n\u001b[0;32m     11\u001b[0m \u001b[38;5;66;03m# Define the layout\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[0;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m   1014\u001b[0m     dialect,\n\u001b[0;32m   1015\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[0;32m   1023\u001b[0m )\n\u001b[0;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m _read(filepath_or_buffer, kwds)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_make_engine(f, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mengine)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[0;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m get_handle(\n\u001b[0;32m   1881\u001b[0m     f,\n\u001b[0;32m   1882\u001b[0m     mode,\n\u001b[0;32m   1883\u001b[0m     encoding\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1884\u001b[0m     compression\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcompression\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1885\u001b[0m     memory_map\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmemory_map\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m),\n\u001b[0;32m   1886\u001b[0m     is_text\u001b[38;5;241m=\u001b[39mis_text,\n\u001b[0;32m   1887\u001b[0m     errors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding_errors\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstrict\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[0;32m   1888\u001b[0m     storage_options\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstorage_options\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1889\u001b[0m )\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m    876\u001b[0m             encoding\u001b[38;5;241m=\u001b[39mioargs\u001b[38;5;241m.\u001b[39mencoding,\n\u001b[0;32m    877\u001b[0m             errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'path_to_your_data.csv'"
     ]
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "import plotly.graph_objs as go\n",
    "import pandas as pd\n",
    "\n",
    "# Load your dataset here\n",
    "df = pd.read_csv('path_to_your_data.csv')\n",
    "\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "# Define the layout\n",
    "app.layout = html.Div([\n",
    "    dcc.Dropdown(\n",
    "        id='statistic-dropdown',\n",
    "        options=[\n",
    "            {'label': 'Yearly Statistics', 'value': 'yearly'},\n",
    "            {'label': 'Recession Period Statistics', 'value': 'recession'}\n",
    "        ],\n",
    "        value='yearly',\n",
    "        placeholder=\"Select a statistic\",\n",
    "    ),\n",
    "    html.Div(id='recession-report-container')\n",
    "])\n",
    "\n",
    "# Define the callback\n",
    "@app.callback(\n",
    "    dash.dependencies.Output('recession-report-container', 'children'),\n",
    "    [dash.dependencies.Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter your data for the recession period\n",
    "        data = df[df['Recession'] == 1]\n",
    "        \n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "        \n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "        fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "\n",
    "        return dcc.Graph(figure=fig)\n",
    "    \n",
    "    return 'Please select the Recession Report Statistics to view graphs.'\n",
    "\n",
    "# Run the server\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "07f1f0fe-8e60-4afb-b684-9c6d44d76729",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "incomplete input (2675768262.py, line 33)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[154], line 33\u001b[1;36m\u001b[0m\n\u001b[1;33m    data = df[df['Recession']\u001b[0m\n\u001b[1;37m                             ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m incomplete input\n"
     ]
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "import plotly.graph_objs as go\n",
    "import pandas as pd\n",
    "\n",
    "# Load your dataset here\n",
    "df = pd.read_csv('path_to_your_data.csv')\n",
    "\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "# Define the layout\n",
    "app.layout = html.Div([\n",
    "    dcc.Dropdown(\n",
    "        id='statistic-dropdown',\n",
    "        options=[\n",
    "            {'label': 'Yearly Statistics', 'value': 'yearly'},\n",
    "            {'label': 'Recession Period Statistics', 'value': 'recession'}\n",
    "        ],\n",
    "        value='yearly',\n",
    "        placeholder=\"Select a statistic\",\n",
    "    ),\n",
    "    html.Div(id='recession-report-container')\n",
    "])\n",
    "\n",
    "# Define the callback\n",
    "@app.callback(\n",
    "    dash.dependencies.Output('recession-report-container', 'children'),\n",
    "    [dash.dependencies.Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter your data for the recession period\n",
    "        data = df[df['Recession']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "1324db6e-bb80-428f-8a3f-1b3d6723384e",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'jupyter_dash'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[156], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mjupyter_dash\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m JupyterDash\n\u001b[0;32m      3\u001b[0m app \u001b[38;5;241m=\u001b[39m JupyterDash(\u001b[38;5;18m__name__\u001b[39m)\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'jupyter_dash'"
     ]
    }
   ],
   "source": [
    "from jupyter_dash import JupyterDash\n",
    "\n",
    "app = JupyterDash(__name__)\n",
    "\n",
    "# The rest of your code follows...\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "56bd8759-3706-4976-b4ff-d9475c4a2199",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting jupyter-dash\n",
      "  Downloading jupyter_dash-0.4.2-py3-none-any.whl.metadata (3.6 kB)\n",
      "Requirement already satisfied: dash in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jupyter-dash) (2.17.1)\n",
      "Requirement already satisfied: requests in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jupyter-dash) (2.32.2)\n",
      "Requirement already satisfied: flask in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jupyter-dash) (3.0.3)\n",
      "Requirement already satisfied: retrying in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jupyter-dash) (1.3.4)\n",
      "Requirement already satisfied: ipython in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jupyter-dash) (8.25.0)\n",
      "Requirement already satisfied: ipykernel in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jupyter-dash) (6.28.0)\n",
      "Collecting ansi2html (from jupyter-dash)\n",
      "  Downloading ansi2html-1.9.2-py3-none-any.whl.metadata (3.7 kB)\n",
      "Requirement already satisfied: nest-asyncio in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jupyter-dash) (1.6.0)\n",
      "Requirement already satisfied: Werkzeug<3.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash->jupyter-dash) (3.0.3)\n",
      "Requirement already satisfied: plotly>=5.0.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash->jupyter-dash) (5.22.0)\n",
      "Requirement already satisfied: dash-html-components==2.0.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash->jupyter-dash) (2.0.0)\n",
      "Requirement already satisfied: dash-core-components==2.0.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash->jupyter-dash) (2.0.0)\n",
      "Requirement already satisfied: dash-table==5.0.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash->jupyter-dash) (5.0.0)\n",
      "Requirement already satisfied: importlib-metadata in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash->jupyter-dash) (7.0.1)\n",
      "Requirement already satisfied: typing-extensions>=4.1.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash->jupyter-dash) (4.11.0)\n",
      "Requirement already satisfied: setuptools in c:\\users\\admin\\anaconda3\\lib\\site-packages (from dash->jupyter-dash) (69.5.1)\n",
      "Requirement already satisfied: Jinja2>=3.1.2 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from flask->jupyter-dash) (3.1.4)\n",
      "Requirement already satisfied: itsdangerous>=2.1.2 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from flask->jupyter-dash) (2.2.0)\n",
      "Requirement already satisfied: click>=8.1.3 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from flask->jupyter-dash) (8.1.7)\n",
      "Requirement already satisfied: blinker>=1.6.2 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from flask->jupyter-dash) (1.6.2)\n",
      "Requirement already satisfied: comm>=0.1.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipykernel->jupyter-dash) (0.2.1)\n",
      "Requirement already satisfied: debugpy>=1.6.5 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipykernel->jupyter-dash) (1.6.7)\n",
      "Requirement already satisfied: jupyter-client>=6.1.12 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipykernel->jupyter-dash) (8.6.0)\n",
      "Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipykernel->jupyter-dash) (5.7.2)\n",
      "Requirement already satisfied: matplotlib-inline>=0.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipykernel->jupyter-dash) (0.1.6)\n",
      "Requirement already satisfied: packaging in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipykernel->jupyter-dash) (23.2)\n",
      "Requirement already satisfied: psutil in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipykernel->jupyter-dash) (5.9.0)\n",
      "Requirement already satisfied: pyzmq>=24 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipykernel->jupyter-dash) (25.1.2)\n",
      "Requirement already satisfied: tornado>=6.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipykernel->jupyter-dash) (6.4.1)\n",
      "Requirement already satisfied: traitlets>=5.4.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipykernel->jupyter-dash) (5.14.3)\n",
      "Requirement already satisfied: decorator in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipython->jupyter-dash) (5.1.1)\n",
      "Requirement already satisfied: jedi>=0.16 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipython->jupyter-dash) (0.18.1)\n",
      "Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipython->jupyter-dash) (3.0.43)\n",
      "Requirement already satisfied: pygments>=2.4.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipython->jupyter-dash) (2.15.1)\n",
      "Requirement already satisfied: stack-data in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipython->jupyter-dash) (0.2.0)\n",
      "Requirement already satisfied: colorama in c:\\users\\admin\\anaconda3\\lib\\site-packages (from ipython->jupyter-dash) (0.4.6)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from requests->jupyter-dash) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from requests->jupyter-dash) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from requests->jupyter-dash) (2.2.2)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from requests->jupyter-dash) (2024.7.4)\n",
      "Requirement already satisfied: six>=1.7.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from retrying->jupyter-dash) (1.16.0)\n",
      "Requirement already satisfied: parso<0.9.0,>=0.8.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jedi>=0.16->ipython->jupyter-dash) (0.8.3)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from Jinja2>=3.1.2->flask->jupyter-dash) (2.1.3)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jupyter-client>=6.1.12->ipykernel->jupyter-dash) (2.9.0.post0)\n",
      "Requirement already satisfied: platformdirs>=2.5 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel->jupyter-dash) (3.10.0)\n",
      "Requirement already satisfied: pywin32>=300 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel->jupyter-dash) (305.1)\n",
      "Requirement already satisfied: tenacity>=6.2.0 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from plotly>=5.0.0->dash->jupyter-dash) (8.2.2)\n",
      "Requirement already satisfied: wcwidth in c:\\users\\admin\\anaconda3\\lib\\site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython->jupyter-dash) (0.2.5)\n",
      "Requirement already satisfied: zipp>=0.5 in c:\\users\\admin\\anaconda3\\lib\\site-packages (from importlib-metadata->dash->jupyter-dash) (3.17.0)\n",
      "Requirement already satisfied: executing in c:\\users\\admin\\anaconda3\\lib\\site-packages (from stack-data->ipython->jupyter-dash) (0.8.3)\n",
      "Requirement already satisfied: asttokens in c:\\users\\admin\\anaconda3\\lib\\site-packages (from stack-data->ipython->jupyter-dash) (2.0.5)\n",
      "Requirement already satisfied: pure-eval in c:\\users\\admin\\anaconda3\\lib\\site-packages (from stack-data->ipython->jupyter-dash) (0.2.2)\n",
      "Downloading jupyter_dash-0.4.2-py3-none-any.whl (23 kB)\n",
      "Downloading ansi2html-1.9.2-py3-none-any.whl (17 kB)\n",
      "Installing collected packages: ansi2html, jupyter-dash\n",
      "Successfully installed ansi2html-1.9.2 jupyter-dash-0.4.2\n"
     ]
    }
   ],
   "source": [
    "!pip install jupyter-dash\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "60317960-cc40-4009-b404-98a12be58827",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "incomplete input (686498024.py, line 44)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[160], line 44\u001b[1;36m\u001b[0m\n\u001b[1;33m    fig.add_trace(go.Scatter\u001b[0m\n\u001b[1;37m                            ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m incomplete input\n"
     ]
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "from dash.dependencies import Input, Output\n",
    "import plotly.graph_objs as go\n",
    "import pandas as pd\n",
    "\n",
    "# Load your dataset\n",
    "df = pd.read_csv('path_to_your_data.csv')\n",
    "\n",
    "# Create your Dash app\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "# Define the layout of the app\n",
    "app.layout = html.Div([\n",
    "    dcc.Dropdown(\n",
    "        id='statistic-dropdown',\n",
    "        options=[\n",
    "            {'label': 'Yearly Statistics', 'value': 'yearly'},\n",
    "            {'label': 'Recession Period Statistics', 'value': 'recession'}\n",
    "        ],\n",
    "        value='yearly',\n",
    "        placeholder=\"Select a statistic\",\n",
    "    ),\n",
    "    html.Div(id='recession-report-container')\n",
    "])\n",
    "\n",
    "# Define the callback to update the graph based on dropdown selection\n",
    "@app.callback(\n",
    "    Output('recession-report-container', 'children'),\n",
    "    [Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter data for recession periods\n",
    "        data = df[df['Recession'] == 1]\n",
    "        \n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "\n",
    "        # Create a figure with multiple graphs for different recession statistics\n",
    "        fig = go.Figure()\n",
    "\n",
    "        # Example: Automobile Sales during Recession Period\n",
    "        fig.add_trace(go.Scatter\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "8b28dccf-deb2-45e9-9b53-cd8245a19eaa",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'path_to_your_data.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[162], line 8\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mjupyter_dash\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m JupyterDash\n\u001b[0;32m      7\u001b[0m \u001b[38;5;66;03m# Load your dataset here\u001b[39;00m\n\u001b[1;32m----> 8\u001b[0m df \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mpath_to_your_data.csv\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m     10\u001b[0m app \u001b[38;5;241m=\u001b[39m JupyterDash(\u001b[38;5;18m__name__\u001b[39m)\n\u001b[0;32m     12\u001b[0m \u001b[38;5;66;03m# Define the layout\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[0;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m   1014\u001b[0m     dialect,\n\u001b[0;32m   1015\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[0;32m   1023\u001b[0m )\n\u001b[0;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m _read(filepath_or_buffer, kwds)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_make_engine(f, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mengine)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[0;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m get_handle(\n\u001b[0;32m   1881\u001b[0m     f,\n\u001b[0;32m   1882\u001b[0m     mode,\n\u001b[0;32m   1883\u001b[0m     encoding\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1884\u001b[0m     compression\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcompression\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1885\u001b[0m     memory_map\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmemory_map\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m),\n\u001b[0;32m   1886\u001b[0m     is_text\u001b[38;5;241m=\u001b[39mis_text,\n\u001b[0;32m   1887\u001b[0m     errors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding_errors\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstrict\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[0;32m   1888\u001b[0m     storage_options\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstorage_options\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1889\u001b[0m )\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m    876\u001b[0m             encoding\u001b[38;5;241m=\u001b[39mioargs\u001b[38;5;241m.\u001b[39mencoding,\n\u001b[0;32m    877\u001b[0m             errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'path_to_your_data.csv'"
     ]
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "import plotly.graph_objs as go\n",
    "import pandas as pd\n",
    "from jupyter_dash import JupyterDash\n",
    "\n",
    "# Load your dataset here\n",
    "df = pd.read_csv('path_to_your_data.csv')\n",
    "\n",
    "app = JupyterDash(__name__)\n",
    "\n",
    "# Define the layout\n",
    "app.layout = html.Div([\n",
    "    dcc.Dropdown(\n",
    "        id='statistic-dropdown',\n",
    "        options=[\n",
    "            {'label': 'Yearly Statistics', 'value': 'yearly'},\n",
    "            {'label': 'Recession Period Statistics', 'value': 'recession'}\n",
    "        ],\n",
    "        value='yearly',\n",
    "        placeholder=\"Select a statistic\",\n",
    "    ),\n",
    "    html.Div(id='report-container')\n",
    "])\n",
    "\n",
    "# Define the callback\n",
    "@app.callback(\n",
    "    dash.dependencies.Output('report-container', 'children'),\n",
    "    [dash.dependencies.Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter your data for the recession period\n",
    "        data = df[df['Recession'] == 1]\n",
    "        \n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "        \n",
    "        # Example plot for Recession Period Statistics\n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers', name='Sales'))\n",
    "        fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "        return dcc.Graph(figure=fig)\n",
    "    \n",
    "    elif statistic == 'yearly':\n",
    "        # Example plot for Yearly Statistics\n",
    "        yearly_data = df.groupby('Year').agg({'Automobile_Sales': 'sum'})\n",
    "        \n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Bar(x=yearly_data.index, y=yearly_data['Automobile_Sales'], name='Yearly Sales'))\n",
    "        fig.update_layout(title='Yearly Automobile Sales', xaxis_title='Year', yaxis_title='Sales')\n",
    "        return dcc.Graph(figure=fig)\n",
    "    \n",
    "    return 'Please select a statistic to view graphs.'\n",
    "\n",
    "# Run the server\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "4cc26d06-bf8d-4504-81fd-9ffe572c4d6d",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'actual_path_to_your_data.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[164], line 8\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mjupyter_dash\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m JupyterDash\n\u001b[0;32m      7\u001b[0m \u001b[38;5;66;03m# Update the path to your actual data file\u001b[39;00m\n\u001b[1;32m----> 8\u001b[0m df \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mactual_path_to_your_data.csv\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m     10\u001b[0m app \u001b[38;5;241m=\u001b[39m JupyterDash(\u001b[38;5;18m__name__\u001b[39m)\n\u001b[0;32m     12\u001b[0m \u001b[38;5;66;03m# Define the layout\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[0;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m   1014\u001b[0m     dialect,\n\u001b[0;32m   1015\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[0;32m   1023\u001b[0m )\n\u001b[0;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m _read(filepath_or_buffer, kwds)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_make_engine(f, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mengine)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[0;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m get_handle(\n\u001b[0;32m   1881\u001b[0m     f,\n\u001b[0;32m   1882\u001b[0m     mode,\n\u001b[0;32m   1883\u001b[0m     encoding\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1884\u001b[0m     compression\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcompression\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1885\u001b[0m     memory_map\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmemory_map\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m),\n\u001b[0;32m   1886\u001b[0m     is_text\u001b[38;5;241m=\u001b[39mis_text,\n\u001b[0;32m   1887\u001b[0m     errors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mencoding_errors\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstrict\u001b[39m\u001b[38;5;124m\"\u001b[39m),\n\u001b[0;32m   1888\u001b[0m     storage_options\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstorage_options\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m),\n\u001b[0;32m   1889\u001b[0m )\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m    876\u001b[0m             encoding\u001b[38;5;241m=\u001b[39mioargs\u001b[38;5;241m.\u001b[39mencoding,\n\u001b[0;32m    877\u001b[0m             errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'actual_path_to_your_data.csv'"
     ]
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "import plotly.graph_objs as go\n",
    "import pandas as pd\n",
    "from jupyter_dash import JupyterDash\n",
    "\n",
    "# Update the path to your actual data file\n",
    "df = pd.read_csv('actual_path_to_your_data.csv')\n",
    "\n",
    "app = JupyterDash(__name__)\n",
    "\n",
    "# Define the layout\n",
    "app.layout = html.Div([\n",
    "    dcc.Dropdown(\n",
    "        id='statistic-dropdown',\n",
    "        options=[\n",
    "            {'label': 'Yearly Statistics', 'value': 'yearly'},\n",
    "            {'label': 'Recession Period Statistics', 'value': 'recession'}\n",
    "        ],\n",
    "        value='yearly',\n",
    "        placeholder=\"Select a statistic\",\n",
    "    ),\n",
    "    html.Div(id='report-container')\n",
    "])\n",
    "\n",
    "# Define the callback\n",
    "@app.callback(\n",
    "    dash.dependencies.Output('report-container', 'children'),\n",
    "    [dash.dependencies.Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter your data for the recession period\n",
    "        data = df[df['Recession'] == 1]\n",
    "        \n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "        \n",
    "        # Example plot for Recession Period Statistics\n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers', name='Sales'))\n",
    "        fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "        return dcc.Graph(figure=fig)\n",
    "    \n",
    "    elif statistic == 'yearly':\n",
    "        # Example plot for Yearly Statistics\n",
    "        yearly_data = df.groupby('Year').agg({'Automobile_Sales': 'sum'})\n",
    "        \n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Bar(x=yearly_data.index, y=yearly_data['Automobile_Sales'], name='Yearly Sales'))\n",
    "        fig.update_layout(title='Yearly Automobile Sales', xaxis_title='Year', yaxis_title='Sales')\n",
    "        return dcc.Graph(figure=fig)\n",
    "    \n",
    "    return 'Please select a statistic to view graphs.'\n",
    "\n",
    "# Run the server\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "bef0790d-24af-4dea-81df-eb530db13a94",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'historical_automobile_sales.xlsx'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[166], line 8\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mjupyter_dash\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m JupyterDash\n\u001b[0;32m      7\u001b[0m \u001b[38;5;66;03m# Update the path to your actual data file\u001b[39;00m\n\u001b[1;32m----> 8\u001b[0m df \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_excel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mhistorical_automobile_sales.xlsx\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m     10\u001b[0m app \u001b[38;5;241m=\u001b[39m JupyterDash(\u001b[38;5;18m__name__\u001b[39m)\n\u001b[0;32m     12\u001b[0m \u001b[38;5;66;03m# Define the layout\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:495\u001b[0m, in \u001b[0;36mread_excel\u001b[1;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)\u001b[0m\n\u001b[0;32m    493\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(io, ExcelFile):\n\u001b[0;32m    494\u001b[0m     should_close \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[1;32m--> 495\u001b[0m     io \u001b[38;5;241m=\u001b[39m ExcelFile(\n\u001b[0;32m    496\u001b[0m         io,\n\u001b[0;32m    497\u001b[0m         storage_options\u001b[38;5;241m=\u001b[39mstorage_options,\n\u001b[0;32m    498\u001b[0m         engine\u001b[38;5;241m=\u001b[39mengine,\n\u001b[0;32m    499\u001b[0m         engine_kwargs\u001b[38;5;241m=\u001b[39mengine_kwargs,\n\u001b[0;32m    500\u001b[0m     )\n\u001b[0;32m    501\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m engine \u001b[38;5;129;01mand\u001b[39;00m engine \u001b[38;5;241m!=\u001b[39m io\u001b[38;5;241m.\u001b[39mengine:\n\u001b[0;32m    502\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    503\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEngine should not be specified when passing \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    504\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man ExcelFile - ExcelFile already has the engine set\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    505\u001b[0m     )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1550\u001b[0m, in \u001b[0;36mExcelFile.__init__\u001b[1;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)\u001b[0m\n\u001b[0;32m   1548\u001b[0m     ext \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mxls\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1549\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 1550\u001b[0m     ext \u001b[38;5;241m=\u001b[39m inspect_excel_format(\n\u001b[0;32m   1551\u001b[0m         content_or_path\u001b[38;5;241m=\u001b[39mpath_or_buffer, storage_options\u001b[38;5;241m=\u001b[39mstorage_options\n\u001b[0;32m   1552\u001b[0m     )\n\u001b[0;32m   1553\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ext \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1554\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m   1555\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mExcel file format cannot be determined, you must specify \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1556\u001b[0m             \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124man engine manually.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1557\u001b[0m         )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\excel\\_base.py:1402\u001b[0m, in \u001b[0;36minspect_excel_format\u001b[1;34m(content_or_path, storage_options)\u001b[0m\n\u001b[0;32m   1399\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(content_or_path, \u001b[38;5;28mbytes\u001b[39m):\n\u001b[0;32m   1400\u001b[0m     content_or_path \u001b[38;5;241m=\u001b[39m BytesIO(content_or_path)\n\u001b[1;32m-> 1402\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m get_handle(\n\u001b[0;32m   1403\u001b[0m     content_or_path, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m, storage_options\u001b[38;5;241m=\u001b[39mstorage_options, is_text\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[0;32m   1404\u001b[0m ) \u001b[38;5;28;01mas\u001b[39;00m handle:\n\u001b[0;32m   1405\u001b[0m     stream \u001b[38;5;241m=\u001b[39m handle\u001b[38;5;241m.\u001b[39mhandle\n\u001b[0;32m   1406\u001b[0m     stream\u001b[38;5;241m.\u001b[39mseek(\u001b[38;5;241m0\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\io\\common.py:882\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(\n\u001b[0;32m    874\u001b[0m             handle,\n\u001b[0;32m    875\u001b[0m             ioargs\u001b[38;5;241m.\u001b[39mmode,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    878\u001b[0m             newline\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    879\u001b[0m         )\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m--> 882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n\u001b[0;32m    883\u001b[0m     handles\u001b[38;5;241m.\u001b[39mappend(handle)\n\u001b[0;32m    885\u001b[0m \u001b[38;5;66;03m# Convert BytesIO or file objects passed with an encoding\u001b[39;00m\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'historical_automobile_sales.xlsx'"
     ]
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "import plotly.graph_objs as go\n",
    "import pandas as pd\n",
    "from jupyter_dash import JupyterDash\n",
    "\n",
    "# Update the path to your actual data file\n",
    "df = pd.read_excel('historical_automobile_sales.xlsx')\n",
    "\n",
    "app = JupyterDash(__name__)\n",
    "\n",
    "# Define the layout\n",
    "app.layout = html.Div([\n",
    "    dcc.Dropdown(\n",
    "        id='statistic-dropdown',\n",
    "        options=[\n",
    "            {'label': 'Yearly Statistics', 'value': 'yearly'},\n",
    "            {'label': 'Recession Period Statistics', 'value': 'recession'}\n",
    "        ],\n",
    "        value='yearly',\n",
    "        placeholder=\"Select a statistic\",\n",
    "    ),\n",
    "    html.Div(id='report-container')\n",
    "])\n",
    "\n",
    "# Define the callback\n",
    "@app.callback(\n",
    "    dash.dependencies.Output('report-container', 'children'),\n",
    "    [dash.dependencies.Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter your data for the recession period\n",
    "        data = df[df['Recession'] == 1]\n",
    "        \n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "        \n",
    "        # Example plot for Recession Period Statistics\n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers', name='Sales'))\n",
    "        fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "        return dcc.Graph(figure=fig)\n",
    "    \n",
    "    elif statistic == 'yearly':\n",
    "        # Example plot for Yearly Statistics\n",
    "        yearly_data = df.groupby('Year').agg({'Automobile_Sales': 'sum'})\n",
    "        \n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Bar(x=yearly_data.index, y=yearly_data['Automobile_Sales'], name='Yearly Sales'))\n",
    "        fig.update_layout(title='Yearly Automobile Sales', xaxis_title='Year', yaxis_title='Sales')\n",
    "        return dcc.Graph(figure=fig)\n",
    "    \n",
    "    return 'Please select a statistic to view graphs.'\n",
    "\n",
    "# Run the server\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "3b333730-c9f3-409e-aff5-1924554ab9a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"650\"\n",
       "            src=\"http://127.0.0.1:8050/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x166b4c79730>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "import plotly.graph_objs as go\n",
    "import pandas as pd\n",
    "\n",
    "# Load your dataset\n",
    "df = pd.read_csv('historical_automobile_sales.csv')\n",
    "\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "# Define the layout\n",
    "app.layout = html.Div([\n",
    "    dcc.Dropdown(\n",
    "        id='statistic-dropdown',\n",
    "        options=[\n",
    "            {'label': 'Yearly Statistics', 'value': 'yearly'},\n",
    "            {'label': 'Recession Period Statistics', 'value': 'recession'}\n",
    "        ],\n",
    "        value='yearly',\n",
    "        placeholder=\"Select a statistic\",\n",
    "    ),\n",
    "    html.Div(id='recession-report-container')\n",
    "])\n",
    "\n",
    "# Define the callback\n",
    "@app.callback(\n",
    "    dash.dependencies.Output('recession-report-container', 'children'),\n",
    "    [dash.dependencies.Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_recession_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter your data for the recession period\n",
    "        data = df[df['Recession'] == 1]\n",
    "        \n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "        \n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "        fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "\n",
    "        return dcc.Graph(figure=fig)\n",
    "    \n",
    "    return 'Please select the Recession Report Statistics to view graphs.'\n",
    "\n",
    "# Run the server\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "c4cdfe3b-a96e-4f3f-a193-9b5be4b29497",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"650\"\n",
       "            src=\"http://127.0.0.1:8050/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x166a93eb350>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html\n",
    "import plotly.graph_objs as go\n",
    "import pandas as pd\n",
    "\n",
    "# Load your dataset\n",
    "df = pd.read_csv('historical_automobile_sales.csv')\n",
    "\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "# Define the layout\n",
    "app.layout = html.Div([\n",
    "    dcc.Dropdown(\n",
    "        id='statistic-dropdown',\n",
    "        options=[\n",
    "            {'label': 'Yearly Statistics', 'value': 'yearly'},\n",
    "            {'label': 'Recession Period Statistics', 'value': 'recession'}\n",
    "        ],\n",
    "        value='yearly',\n",
    "        placeholder=\"Select a statistic\",\n",
    "    ),\n",
    "    html.Div(id='report-container')\n",
    "])\n",
    "\n",
    "# Define the callback\n",
    "@app.callback(\n",
    "    dash.dependencies.Output('report-container', 'children'),\n",
    "    [dash.dependencies.Input('statistic-dropdown', 'value')]\n",
    ")\n",
    "def update_report(statistic):\n",
    "    if statistic == 'recession':\n",
    "        # Filter your data for the recession period\n",
    "        data = df[df['Recession'] == 1]\n",
    "        \n",
    "        if data.empty:\n",
    "            return 'No recession data available.'\n",
    "        \n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Scatter(x=data['Month'], y=data['Automobile_Sales'], mode='lines+markers'))\n",
    "        fig.update_layout(title='Automobile Sales During Recession Periods', xaxis_title='Month', yaxis_title='Sales')\n",
    "\n",
    "        return dcc.Graph(figure=fig)\n",
    "    \n",
    "    elif statistic == 'yearly':\n",
    "        # Aggregate data for yearly statistics\n",
    "        yearly_data = df.groupby('Year').agg({'Automobile_Sales': 'sum'}).reset_index()\n",
    "        \n",
    "        if yearly_data.empty:\n",
    "            return 'No yearly data available.'\n",
    "        \n",
    "        fig = go.Figure()\n",
    "        fig.add_trace(go.Bar(x=yearly_data['Year'], y=yearly_data['Automobile_Sales']))\n",
    "        fig.update_layout(title='Yearly Automobile Sales', xaxis_title='Year', yaxis_title='Total Sales')\n",
    "\n",
    "        return dcc.Graph(figure=fig)\n",
    "    \n",
    "    return 'Please select a statistic to view graphs.'\n",
    "\n",
    "# Run the server\n",
    "if __name__ == '__main__':\n",
    "    app.run_server(debug=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "badf464f-d2d4-4f3f-9218-7c11d1cd16b2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
